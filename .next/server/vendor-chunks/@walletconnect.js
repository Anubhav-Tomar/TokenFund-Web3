/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@walletconnect";
exports.ids = ["vendor-chunks/@walletconnect"];
exports.modules = {

/***/ "(ssr)/./node_modules/@walletconnect/core/dist/index.es.js":
/*!***********************************************************!*\
  !*** ./node_modules/@walletconnect/core/dist/index.es.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CORE_CONTEXT: () => (/* binding */ J),\n/* harmony export */   CORE_DEFAULT: () => (/* binding */ Xe),\n/* harmony export */   CORE_PROTOCOL: () => (/* binding */ ye),\n/* harmony export */   CORE_STORAGE_OPTIONS: () => (/* binding */ We),\n/* harmony export */   CORE_STORAGE_PREFIX: () => (/* binding */ A),\n/* harmony export */   CORE_VERSION: () => (/* binding */ De),\n/* harmony export */   CRYPTO_CLIENT_SEED: () => (/* binding */ me),\n/* harmony export */   CRYPTO_CONTEXT: () => (/* binding */ Ze),\n/* harmony export */   CRYPTO_JWT_TTL: () => (/* binding */ Qe),\n/* harmony export */   Core: () => (/* binding */ Rn),\n/* harmony export */   Crypto: () => (/* binding */ Yt),\n/* harmony export */   ECHO_CONTEXT: () => (/* binding */ Tt),\n/* harmony export */   ECHO_URL: () => (/* binding */ Ct),\n/* harmony export */   EVENTS_CLIENT_API_URL: () => (/* binding */ xt),\n/* harmony export */   EVENTS_STORAGE_CLEANUP_INTERVAL: () => (/* binding */ Rt),\n/* harmony export */   EVENTS_STORAGE_CONTEXT: () => (/* binding */ St),\n/* harmony export */   EVENTS_STORAGE_VERSION: () => (/* binding */ Pt),\n/* harmony export */   EVENT_CLIENT_AUTHENTICATE_ERRORS: () => (/* binding */ Ns),\n/* harmony export */   EVENT_CLIENT_AUTHENTICATE_TRACES: () => (/* binding */ As),\n/* harmony export */   EVENT_CLIENT_CONTEXT: () => (/* binding */ Rs),\n/* harmony export */   EVENT_CLIENT_PAIRING_ERRORS: () => (/* binding */ $),\n/* harmony export */   EVENT_CLIENT_PAIRING_TRACES: () => (/* binding */ z),\n/* harmony export */   EVENT_CLIENT_SESSION_ERRORS: () => (/* binding */ Os),\n/* harmony export */   EVENT_CLIENT_SESSION_TRACES: () => (/* binding */ xs),\n/* harmony export */   EXPIRER_CONTEXT: () => (/* binding */ ft),\n/* harmony export */   EXPIRER_DEFAULT_TTL: () => (/* binding */ Ps),\n/* harmony export */   EXPIRER_EVENTS: () => (/* binding */ x),\n/* harmony export */   EXPIRER_STORAGE_VERSION: () => (/* binding */ vt),\n/* harmony export */   EchoClient: () => (/* binding */ yi),\n/* harmony export */   EventClient: () => (/* binding */ bi),\n/* harmony export */   Expirer: () => (/* binding */ pi),\n/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ mt),\n/* harmony export */   HISTORY_EVENTS: () => (/* binding */ R),\n/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ bt),\n/* harmony export */   JsonRpcHistory: () => (/* binding */ di),\n/* harmony export */   KEYCHAIN_CONTEXT: () => (/* binding */ et),\n/* harmony export */   KEYCHAIN_STORAGE_VERSION: () => (/* binding */ tt),\n/* harmony export */   KeyChain: () => (/* binding */ Ht),\n/* harmony export */   MESSAGES_CONTEXT: () => (/* binding */ it),\n/* harmony export */   MESSAGES_STORAGE_VERSION: () => (/* binding */ st),\n/* harmony export */   MessageTracker: () => (/* binding */ Jt),\n/* harmony export */   PAIRING_CONTEXT: () => (/* binding */ yt),\n/* harmony export */   PAIRING_DEFAULT_TTL: () => (/* binding */ Cs),\n/* harmony export */   PAIRING_EVENTS: () => (/* binding */ j),\n/* harmony export */   PAIRING_RPC_OPTS: () => (/* binding */ V),\n/* harmony export */   PAIRING_STORAGE_VERSION: () => (/* binding */ Dt),\n/* harmony export */   PENDING_SUB_RESOLUTION_TIMEOUT: () => (/* binding */ gt),\n/* harmony export */   PUBLISHER_CONTEXT: () => (/* binding */ rt),\n/* harmony export */   PUBLISHER_DEFAULT_TTL: () => (/* binding */ be),\n/* harmony export */   Pairing: () => (/* binding */ ui),\n/* harmony export */   RELAYER_CONTEXT: () => (/* binding */ at),\n/* harmony export */   RELAYER_DEFAULT_LOGGER: () => (/* binding */ ot),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ nt),\n/* harmony export */   RELAYER_DEFAULT_RELAY_URL: () => (/* binding */ fe),\n/* harmony export */   RELAYER_EVENTS: () => (/* binding */ v),\n/* harmony export */   RELAYER_PROVIDER_EVENTS: () => (/* binding */ C),\n/* harmony export */   RELAYER_RECONNECT_TIMEOUT: () => (/* binding */ ht),\n/* harmony export */   RELAYER_SDK_VERSION: () => (/* binding */ re),\n/* harmony export */   RELAYER_STORAGE_OPTIONS: () => (/* binding */ ws),\n/* harmony export */   RELAYER_SUBSCRIBER_SUFFIX: () => (/* binding */ ct),\n/* harmony export */   RELAYER_TRANSPORT_CUTOFF: () => (/* binding */ Is),\n/* harmony export */   Relayer: () => (/* binding */ oi),\n/* harmony export */   STORE_STORAGE_VERSION: () => (/* binding */ lt),\n/* harmony export */   SUBSCRIBER_CONTEXT: () => (/* binding */ dt),\n/* harmony export */   SUBSCRIBER_DEFAULT_TTL: () => (/* binding */ Ts),\n/* harmony export */   SUBSCRIBER_EVENTS: () => (/* binding */ T),\n/* harmony export */   SUBSCRIBER_STORAGE_VERSION: () => (/* binding */ pt),\n/* harmony export */   Store: () => (/* binding */ li),\n/* harmony export */   Subscriber: () => (/* binding */ ii),\n/* harmony export */   TRANSPORT_TYPES: () => (/* binding */ M),\n/* harmony export */   TRUSTED_VERIFY_URLS: () => (/* binding */ It),\n/* harmony export */   VERIFY_CONTEXT: () => (/* binding */ _t),\n/* harmony export */   VERIFY_SERVER: () => (/* binding */ X),\n/* harmony export */   VERIFY_SERVER_V3: () => (/* binding */ wt),\n/* harmony export */   Verify: () => (/* binding */ gi),\n/* harmony export */   WALLETCONNECT_CLIENT_ID: () => (/* binding */ ut),\n/* harmony export */   WALLETCONNECT_LINK_MODE_APPS: () => (/* binding */ ve),\n/* harmony export */   \"default\": () => (/* binding */ oe)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/heartbeat */ \"(ssr)/./node_modules/@walletconnect/heartbeat/dist/index.es.js\");\n/* harmony import */ var _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/keyvaluestorage */ \"(ssr)/./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\");\n/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @walletconnect/types */ \"(ssr)/./node_modules/@walletconnect/types/dist/index.es.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/relay-auth */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/jsonrpc-ws-connection */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js\");\n/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash.isequal */ \"(ssr)/./node_modules/lodash.isequal/index.js\");\n/* harmony import */ var lodash_isequal__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_isequal__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst ye = \"wc\", De = 2, J = \"core\", A = `${ye}@2:${J}:`, Xe = {\n    name: J,\n    logger: \"error\"\n}, We = {\n    database: \":memory:\"\n}, Ze = \"crypto\", me = \"client_ed25519_seed\", Qe = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY, et = \"keychain\", tt = \"0.3\", it = \"messages\", st = \"0.3\", be = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.SIX_HOURS, rt = \"publisher\", nt = \"irn\", ot = \"error\", fe = \"wss://relay.walletconnect.org\", at = \"relayer\", v = {\n    message: \"relayer_message\",\n    message_ack: \"relayer_message_ack\",\n    connect: \"relayer_connect\",\n    disconnect: \"relayer_disconnect\",\n    error: \"relayer_error\",\n    connection_stalled: \"relayer_connection_stalled\",\n    transport_closed: \"relayer_transport_closed\",\n    publish: \"relayer_publish\"\n}, ct = \"_subscription\", C = {\n    payload: \"payload\",\n    connect: \"connect\",\n    disconnect: \"disconnect\",\n    error: \"error\"\n}, ht = .1, ws = {\n    database: \":memory:\"\n}, re = \"2.17.5\", Is = 1e4, M = {\n    link_mode: \"link_mode\",\n    relay: \"relay\"\n}, lt = \"0.3\", ut = \"WALLETCONNECT_CLIENT_ID\", ve = \"WALLETCONNECT_LINK_MODE_APPS\", T = {\n    created: \"subscription_created\",\n    deleted: \"subscription_deleted\",\n    expired: \"subscription_expired\",\n    disabled: \"subscription_disabled\",\n    sync: \"subscription_sync\",\n    resubscribed: \"subscription_resubscribed\"\n}, Ts = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_DAYS, dt = \"subscription\", pt = \"0.3\", gt = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_SECONDS * 1e3, yt = \"pairing\", Dt = \"0.3\", Cs = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_DAYS, V = {\n    wc_pairingDelete: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY,\n            prompt: !1,\n            tag: 1e3\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY,\n            prompt: !1,\n            tag: 1001\n        }\n    },\n    wc_pairingPing: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1002\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_SECONDS,\n            prompt: !1,\n            tag: 1003\n        }\n    },\n    unregistered_method: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY,\n            prompt: !1,\n            tag: 0\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY,\n            prompt: !1,\n            tag: 0\n        }\n    }\n}, j = {\n    create: \"pairing_create\",\n    expire: \"pairing_expire\",\n    delete: \"pairing_delete\",\n    ping: \"pairing_ping\"\n}, R = {\n    created: \"history_created\",\n    updated: \"history_updated\",\n    deleted: \"history_deleted\",\n    sync: \"history_sync\"\n}, mt = \"history\", bt = \"0.3\", ft = \"expirer\", x = {\n    created: \"expirer_created\",\n    deleted: \"expirer_deleted\",\n    expired: \"expirer_expired\",\n    sync: \"expirer_sync\"\n}, vt = \"0.3\", Ps = _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_DAY, _t = \"verify-api\", Ss = \"https://verify.walletconnect.com\", Et = \"https://verify.walletconnect.org\", X = Et, wt = `${X}/v3`, It = [\n    Ss,\n    Et\n], Tt = \"echo\", Ct = \"https://echo.walletconnect.com\", Rs = \"event-client\", z = {\n    pairing_started: \"pairing_started\",\n    pairing_uri_validation_success: \"pairing_uri_validation_success\",\n    pairing_uri_not_expired: \"pairing_uri_not_expired\",\n    store_new_pairing: \"store_new_pairing\",\n    subscribing_pairing_topic: \"subscribing_pairing_topic\",\n    subscribe_pairing_topic_success: \"subscribe_pairing_topic_success\",\n    existing_pairing: \"existing_pairing\",\n    pairing_not_expired: \"pairing_not_expired\",\n    emit_inactive_pairing: \"emit_inactive_pairing\",\n    emit_session_proposal: \"emit_session_proposal\",\n    subscribing_to_pairing_topic: \"subscribing_to_pairing_topic\"\n}, $ = {\n    no_wss_connection: \"no_wss_connection\",\n    no_internet_connection: \"no_internet_connection\",\n    malformed_pairing_uri: \"malformed_pairing_uri\",\n    active_pairing_already_exists: \"active_pairing_already_exists\",\n    subscribe_pairing_topic_failure: \"subscribe_pairing_topic_failure\",\n    pairing_expired: \"pairing_expired\",\n    proposal_expired: \"proposal_expired\",\n    proposal_listener_not_found: \"proposal_listener_not_found\"\n}, xs = {\n    session_approve_started: \"session_approve_started\",\n    proposal_not_expired: \"proposal_not_expired\",\n    session_namespaces_validation_success: \"session_namespaces_validation_success\",\n    create_session_topic: \"create_session_topic\",\n    subscribing_session_topic: \"subscribing_session_topic\",\n    subscribe_session_topic_success: \"subscribe_session_topic_success\",\n    publishing_session_approve: \"publishing_session_approve\",\n    session_approve_publish_success: \"session_approve_publish_success\",\n    store_session: \"store_session\",\n    publishing_session_settle: \"publishing_session_settle\",\n    session_settle_publish_success: \"session_settle_publish_success\"\n}, Os = {\n    no_internet_connection: \"no_internet_connection\",\n    no_wss_connection: \"no_wss_connection\",\n    proposal_expired: \"proposal_expired\",\n    subscribe_session_topic_failure: \"subscribe_session_topic_failure\",\n    session_approve_publish_failure: \"session_approve_publish_failure\",\n    session_settle_publish_failure: \"session_settle_publish_failure\",\n    session_approve_namespace_validation_failure: \"session_approve_namespace_validation_failure\",\n    proposal_not_found: \"proposal_not_found\"\n}, As = {\n    authenticated_session_approve_started: \"authenticated_session_approve_started\",\n    authenticated_session_not_expired: \"authenticated_session_not_expired\",\n    chains_caip2_compliant: \"chains_caip2_compliant\",\n    chains_evm_compliant: \"chains_evm_compliant\",\n    create_authenticated_session_topic: \"create_authenticated_session_topic\",\n    cacaos_verified: \"cacaos_verified\",\n    store_authenticated_session: \"store_authenticated_session\",\n    subscribing_authenticated_session_topic: \"subscribing_authenticated_session_topic\",\n    subscribe_authenticated_session_topic_success: \"subscribe_authenticated_session_topic_success\",\n    publishing_authenticated_session_approve: \"publishing_authenticated_session_approve\",\n    authenticated_session_approve_publish_success: \"authenticated_session_approve_publish_success\"\n}, Ns = {\n    no_internet_connection: \"no_internet_connection\",\n    no_wss_connection: \"no_wss_connection\",\n    missing_session_authenticate_request: \"missing_session_authenticate_request\",\n    session_authenticate_request_expired: \"session_authenticate_request_expired\",\n    chains_caip2_compliant_failure: \"chains_caip2_compliant_failure\",\n    chains_evm_compliant_failure: \"chains_evm_compliant_failure\",\n    invalid_cacao: \"invalid_cacao\",\n    subscribe_authenticated_session_topic_failure: \"subscribe_authenticated_session_topic_failure\",\n    authenticated_session_approve_publish_failure: \"authenticated_session_approve_publish_failure\",\n    authenticated_session_pending_request_not_found: \"authenticated_session_pending_request_not_found\"\n}, Pt = .1, St = \"event-client\", Rt = 86400, xt = \"https://pulse.walletconnect.org/batch\";\nfunction zs(o, e) {\n    if (o.length >= 255) throw new TypeError(\"Alphabet too long\");\n    for(var t = new Uint8Array(256), s = 0; s < t.length; s++)t[s] = 255;\n    for(var i = 0; i < o.length; i++){\n        var r = o.charAt(i), n = r.charCodeAt(0);\n        if (t[n] !== 255) throw new TypeError(r + \" is ambiguous\");\n        t[n] = i;\n    }\n    var a = o.length, c = o.charAt(0), h = Math.log(a) / Math.log(256), u = Math.log(256) / Math.log(a);\n    function d(l) {\n        if (l instanceof Uint8Array || (ArrayBuffer.isView(l) ? l = new Uint8Array(l.buffer, l.byteOffset, l.byteLength) : Array.isArray(l) && (l = Uint8Array.from(l))), !(l instanceof Uint8Array)) throw new TypeError(\"Expected Uint8Array\");\n        if (l.length === 0) return \"\";\n        for(var g = 0, w = 0, b = 0, D = l.length; b !== D && l[b] === 0;)b++, g++;\n        for(var P = (D - b) * u + 1 >>> 0, f = new Uint8Array(P); b !== D;){\n            for(var N = l[b], k = 0, O = P - 1; (N !== 0 || k < w) && O !== -1; O--, k++)N += 256 * f[O] >>> 0, f[O] = N % a >>> 0, N = N / a >>> 0;\n            if (N !== 0) throw new Error(\"Non-zero carry\");\n            w = k, b++;\n        }\n        for(var L = P - w; L !== P && f[L] === 0;)L++;\n        for(var ee = c.repeat(g); L < P; ++L)ee += o.charAt(f[L]);\n        return ee;\n    }\n    function y(l) {\n        if (typeof l != \"string\") throw new TypeError(\"Expected String\");\n        if (l.length === 0) return new Uint8Array;\n        var g = 0;\n        if (l[g] !== \" \") {\n            for(var w = 0, b = 0; l[g] === c;)w++, g++;\n            for(var D = (l.length - g) * h + 1 >>> 0, P = new Uint8Array(D); l[g];){\n                var f = t[l.charCodeAt(g)];\n                if (f === 255) return;\n                for(var N = 0, k = D - 1; (f !== 0 || N < b) && k !== -1; k--, N++)f += a * P[k] >>> 0, P[k] = f % 256 >>> 0, f = f / 256 >>> 0;\n                if (f !== 0) throw new Error(\"Non-zero carry\");\n                b = N, g++;\n            }\n            if (l[g] !== \" \") {\n                for(var O = D - b; O !== D && P[O] === 0;)O++;\n                for(var L = new Uint8Array(w + (D - O)), ee = w; O !== D;)L[ee++] = P[O++];\n                return L;\n            }\n        }\n    }\n    function m(l) {\n        var g = y(l);\n        if (g) return g;\n        throw new Error(`Non-${e} character`);\n    }\n    return {\n        encode: d,\n        decodeUnsafe: y,\n        decode: m\n    };\n}\nvar Ls = zs, $s = Ls;\nconst Ot = (o)=>{\n    if (o instanceof Uint8Array && o.constructor.name === \"Uint8Array\") return o;\n    if (o instanceof ArrayBuffer) return new Uint8Array(o);\n    if (ArrayBuffer.isView(o)) return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    throw new Error(\"Unknown type, must be binary type\");\n}, ks = (o)=>new TextEncoder().encode(o), Us = (o)=>new TextDecoder().decode(o);\nclass Fs {\n    constructor(e, t, s){\n        this.name = e, this.prefix = t, this.baseEncode = s;\n    }\n    encode(e) {\n        if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;\n        throw Error(\"Unknown type, must be binary type\");\n    }\n}\nclass Ms {\n    constructor(e, t, s){\n        if (this.name = e, this.prefix = t, t.codePointAt(0) === void 0) throw new Error(\"Invalid prefix character\");\n        this.prefixCodePoint = t.codePointAt(0), this.baseDecode = s;\n    }\n    decode(e) {\n        if (typeof e == \"string\") {\n            if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            return this.baseDecode(e.slice(this.prefix.length));\n        } else throw Error(\"Can only multibase decode strings\");\n    }\n    or(e) {\n        return At(this, e);\n    }\n}\nclass Ks {\n    constructor(e){\n        this.decoders = e;\n    }\n    or(e) {\n        return At(this, e);\n    }\n    decode(e) {\n        const t = e[0], s = this.decoders[t];\n        if (s) return s.decode(e);\n        throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n    }\n}\nconst At = (o, e)=>new Ks({\n        ...o.decoders || {\n            [o.prefix]: o\n        },\n        ...e.decoders || {\n            [e.prefix]: e\n        }\n    });\nclass Bs {\n    constructor(e, t, s, i){\n        this.name = e, this.prefix = t, this.baseEncode = s, this.baseDecode = i, this.encoder = new Fs(e, t, s), this.decoder = new Ms(e, t, i);\n    }\n    encode(e) {\n        return this.encoder.encode(e);\n    }\n    decode(e) {\n        return this.decoder.decode(e);\n    }\n}\nconst ne = ({ name: o, prefix: e, encode: t, decode: s })=>new Bs(o, e, t, s), W = ({ prefix: o, name: e, alphabet: t })=>{\n    const { encode: s, decode: i } = $s(t, e);\n    return ne({\n        prefix: o,\n        name: e,\n        encode: s,\n        decode: (r)=>Ot(i(r))\n    });\n}, Vs = (o, e, t, s)=>{\n    const i = {};\n    for(let u = 0; u < e.length; ++u)i[e[u]] = u;\n    let r = o.length;\n    for(; o[r - 1] === \"=\";)--r;\n    const n = new Uint8Array(r * t / 8 | 0);\n    let a = 0, c = 0, h = 0;\n    for(let u = 0; u < r; ++u){\n        const d = i[o[u]];\n        if (d === void 0) throw new SyntaxError(`Non-${s} character`);\n        c = c << t | d, a += t, a >= 8 && (a -= 8, n[h++] = 255 & c >> a);\n    }\n    if (a >= t || 255 & c << 8 - a) throw new SyntaxError(\"Unexpected end of data\");\n    return n;\n}, js = (o, e, t)=>{\n    const s = e[e.length - 1] === \"=\", i = (1 << t) - 1;\n    let r = \"\", n = 0, a = 0;\n    for(let c = 0; c < o.length; ++c)for(a = a << 8 | o[c], n += 8; n > t;)n -= t, r += e[i & a >> n];\n    if (n && (r += e[i & a << t - n]), s) for(; r.length * t & 7;)r += \"=\";\n    return r;\n}, _ = ({ name: o, prefix: e, bitsPerChar: t, alphabet: s })=>ne({\n        prefix: e,\n        name: o,\n        encode (i) {\n            return js(i, s, t);\n        },\n        decode (i) {\n            return Vs(i, s, t, o);\n        }\n    }), qs = ne({\n    prefix: \"\\x00\",\n    name: \"identity\",\n    encode: (o)=>Us(o),\n    decode: (o)=>ks(o)\n});\nvar Gs = Object.freeze({\n    __proto__: null,\n    identity: qs\n});\nconst Hs = _({\n    prefix: \"0\",\n    name: \"base2\",\n    alphabet: \"01\",\n    bitsPerChar: 1\n});\nvar Ys = Object.freeze({\n    __proto__: null,\n    base2: Hs\n});\nconst Js = _({\n    prefix: \"7\",\n    name: \"base8\",\n    alphabet: \"01234567\",\n    bitsPerChar: 3\n});\nvar Xs = Object.freeze({\n    __proto__: null,\n    base8: Js\n});\nconst Ws = W({\n    prefix: \"9\",\n    name: \"base10\",\n    alphabet: \"0123456789\"\n});\nvar Zs = Object.freeze({\n    __proto__: null,\n    base10: Ws\n});\nconst Qs = _({\n    prefix: \"f\",\n    name: \"base16\",\n    alphabet: \"0123456789abcdef\",\n    bitsPerChar: 4\n}), er = _({\n    prefix: \"F\",\n    name: \"base16upper\",\n    alphabet: \"0123456789ABCDEF\",\n    bitsPerChar: 4\n});\nvar tr = Object.freeze({\n    __proto__: null,\n    base16: Qs,\n    base16upper: er\n});\nconst ir = _({\n    prefix: \"b\",\n    name: \"base32\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567\",\n    bitsPerChar: 5\n}), sr = _({\n    prefix: \"B\",\n    name: \"base32upper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",\n    bitsPerChar: 5\n}), rr = _({\n    prefix: \"c\",\n    name: \"base32pad\",\n    alphabet: \"abcdefghijklmnopqrstuvwxyz234567=\",\n    bitsPerChar: 5\n}), nr = _({\n    prefix: \"C\",\n    name: \"base32padupper\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=\",\n    bitsPerChar: 5\n}), or = _({\n    prefix: \"v\",\n    name: \"base32hex\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv\",\n    bitsPerChar: 5\n}), ar = _({\n    prefix: \"V\",\n    name: \"base32hexupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV\",\n    bitsPerChar: 5\n}), cr = _({\n    prefix: \"t\",\n    name: \"base32hexpad\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuv=\",\n    bitsPerChar: 5\n}), hr = _({\n    prefix: \"T\",\n    name: \"base32hexpadupper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUV=\",\n    bitsPerChar: 5\n}), lr = _({\n    prefix: \"h\",\n    name: \"base32z\",\n    alphabet: \"ybndrfg8ejkmcpqxot1uwisza345h769\",\n    bitsPerChar: 5\n});\nvar ur = Object.freeze({\n    __proto__: null,\n    base32: ir,\n    base32upper: sr,\n    base32pad: rr,\n    base32padupper: nr,\n    base32hex: or,\n    base32hexupper: ar,\n    base32hexpad: cr,\n    base32hexpadupper: hr,\n    base32z: lr\n});\nconst dr = W({\n    prefix: \"k\",\n    name: \"base36\",\n    alphabet: \"0123456789abcdefghijklmnopqrstuvwxyz\"\n}), pr = W({\n    prefix: \"K\",\n    name: \"base36upper\",\n    alphabet: \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n});\nvar gr = Object.freeze({\n    __proto__: null,\n    base36: dr,\n    base36upper: pr\n});\nconst yr = W({\n    name: \"base58btc\",\n    prefix: \"z\",\n    alphabet: \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n}), Dr = W({\n    name: \"base58flickr\",\n    prefix: \"Z\",\n    alphabet: \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"\n});\nvar mr = Object.freeze({\n    __proto__: null,\n    base58btc: yr,\n    base58flickr: Dr\n});\nconst br = _({\n    prefix: \"m\",\n    name: \"base64\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",\n    bitsPerChar: 6\n}), fr = _({\n    prefix: \"M\",\n    name: \"base64pad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n    bitsPerChar: 6\n}), vr = _({\n    prefix: \"u\",\n    name: \"base64url\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\",\n    bitsPerChar: 6\n}), _r = _({\n    prefix: \"U\",\n    name: \"base64urlpad\",\n    alphabet: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\",\n    bitsPerChar: 6\n});\nvar Er = Object.freeze({\n    __proto__: null,\n    base64: br,\n    base64pad: fr,\n    base64url: vr,\n    base64urlpad: _r\n});\nconst Nt = Array.from(\"\\uD83D\\uDE80\\uD83E\\uDE90☄\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09☀\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02❤\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09☺\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E✌✨\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D❣\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33✋\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13⭐✅\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6✔\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90☹\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20☝\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B⚽\\uD83E\\uDD19☕\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81⚡\\uD83C\\uDF1E\\uD83C\\uDF88❌✊\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C✈\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74▶➡❓\\uD83D\\uDC8E\\uD83D\\uDCB8⬇\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A⚠\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37☎\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51❄\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42\"), wr = Nt.reduce((o, e, t)=>(o[t] = e, o), []), Ir = Nt.reduce((o, e, t)=>(o[e.codePointAt(0)] = t, o), []);\nfunction Tr(o) {\n    return o.reduce((e, t)=>(e += wr[t], e), \"\");\n}\nfunction Cr(o) {\n    const e = [];\n    for (const t of o){\n        const s = Ir[t.codePointAt(0)];\n        if (s === void 0) throw new Error(`Non-base256emoji character: ${t}`);\n        e.push(s);\n    }\n    return new Uint8Array(e);\n}\nconst Pr = ne({\n    prefix: \"\\uD83D\\uDE80\",\n    name: \"base256emoji\",\n    encode: Tr,\n    decode: Cr\n});\nvar Sr = Object.freeze({\n    __proto__: null,\n    base256emoji: Pr\n}), Rr = Lt, zt = 128, xr = 127, Or = ~xr, Ar = Math.pow(2, 31);\nfunction Lt(o, e, t) {\n    e = e || [], t = t || 0;\n    for(var s = t; o >= Ar;)e[t++] = o & 255 | zt, o /= 128;\n    for(; o & Or;)e[t++] = o & 255 | zt, o >>>= 7;\n    return e[t] = o | 0, Lt.bytes = t - s + 1, e;\n}\nvar Nr = _e, zr = 128, $t = 127;\nfunction _e(o, s) {\n    var t = 0, s = s || 0, i = 0, r = s, n, a = o.length;\n    do {\n        if (r >= a) throw _e.bytes = 0, new RangeError(\"Could not decode varint\");\n        n = o[r++], t += i < 28 ? (n & $t) << i : (n & $t) * Math.pow(2, i), i += 7;\n    }while (n >= zr);\n    return _e.bytes = r - s, t;\n}\nvar Lr = Math.pow(2, 7), $r = Math.pow(2, 14), kr = Math.pow(2, 21), Ur = Math.pow(2, 28), Fr = Math.pow(2, 35), Mr = Math.pow(2, 42), Kr = Math.pow(2, 49), Br = Math.pow(2, 56), Vr = Math.pow(2, 63), jr = function(o) {\n    return o < Lr ? 1 : o < $r ? 2 : o < kr ? 3 : o < Ur ? 4 : o < Fr ? 5 : o < Mr ? 6 : o < Kr ? 7 : o < Br ? 8 : o < Vr ? 9 : 10;\n}, qr = {\n    encode: Rr,\n    decode: Nr,\n    encodingLength: jr\n}, kt = qr;\nconst Ut = (o, e, t = 0)=>(kt.encode(o, e, t), e), Ft = (o)=>kt.encodingLength(o), Ee = (o, e)=>{\n    const t = e.byteLength, s = Ft(o), i = s + Ft(t), r = new Uint8Array(i + t);\n    return Ut(o, r, 0), Ut(t, r, s), r.set(e, i), new Gr(o, t, e, r);\n};\nclass Gr {\n    constructor(e, t, s, i){\n        this.code = e, this.size = t, this.digest = s, this.bytes = i;\n    }\n}\nconst Mt = ({ name: o, code: e, encode: t })=>new Hr(o, e, t);\nclass Hr {\n    constructor(e, t, s){\n        this.name = e, this.code = t, this.encode = s;\n    }\n    digest(e) {\n        if (e instanceof Uint8Array) {\n            const t = this.encode(e);\n            return t instanceof Uint8Array ? Ee(this.code, t) : t.then((s)=>Ee(this.code, s));\n        } else throw Error(\"Unknown type, must be binary type\");\n    }\n}\nconst Kt = (o)=>async (e)=>new Uint8Array(await crypto.subtle.digest(o, e)), Yr = Mt({\n    name: \"sha2-256\",\n    code: 18,\n    encode: Kt(\"SHA-256\")\n}), Jr = Mt({\n    name: \"sha2-512\",\n    code: 19,\n    encode: Kt(\"SHA-512\")\n});\nvar Xr = Object.freeze({\n    __proto__: null,\n    sha256: Yr,\n    sha512: Jr\n});\nconst Bt = 0, Wr = \"identity\", Vt = Ot, Zr = (o)=>Ee(Bt, Vt(o)), Qr = {\n    code: Bt,\n    name: Wr,\n    encode: Vt,\n    digest: Zr\n};\nvar en = Object.freeze({\n    __proto__: null,\n    identity: Qr\n});\nnew TextEncoder, new TextDecoder;\nconst jt = {\n    ...Gs,\n    ...Ys,\n    ...Xs,\n    ...Zs,\n    ...tr,\n    ...ur,\n    ...gr,\n    ...mr,\n    ...Er,\n    ...Sr\n};\n({\n    ...Xr,\n    ...en\n});\nfunction tn(o = 0) {\n    return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? globalThis.Buffer.allocUnsafe(o) : new Uint8Array(o);\n}\nfunction qt(o, e, t, s) {\n    return {\n        name: o,\n        prefix: e,\n        encoder: {\n            name: o,\n            prefix: e,\n            encode: t\n        },\n        decoder: {\n            decode: s\n        }\n    };\n}\nconst Gt = qt(\"utf8\", \"u\", (o)=>\"u\" + new TextDecoder(\"utf8\").decode(o), (o)=>new TextEncoder().encode(o.substring(1))), we = qt(\"ascii\", \"a\", (o)=>{\n    let e = \"a\";\n    for(let t = 0; t < o.length; t++)e += String.fromCharCode(o[t]);\n    return e;\n}, (o)=>{\n    o = o.substring(1);\n    const e = tn(o.length);\n    for(let t = 0; t < o.length; t++)e[t] = o.charCodeAt(t);\n    return e;\n}), sn = {\n    utf8: Gt,\n    \"utf-8\": Gt,\n    hex: jt.base16,\n    latin1: we,\n    ascii: we,\n    binary: we,\n    ...jt\n};\nfunction rn(o, e = \"utf8\") {\n    const t = sn[e];\n    if (!t) throw new Error(`Unsupported encoding \"${e}\"`);\n    return (e === \"utf8\" || e === \"utf-8\") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(o, \"utf8\") : t.decoder.decode(`${t.prefix}${o}`);\n}\nclass Ht {\n    constructor(e, t){\n        this.core = e, this.logger = t, this.keychain = new Map, this.name = et, this.version = tt, this.initialized = !1, this.storagePrefix = A, this.init = async ()=>{\n            if (!this.initialized) {\n                const s = await this.getKeyChain();\n                typeof s < \"u\" && (this.keychain = s), this.initialized = !0;\n            }\n        }, this.has = (s)=>(this.isInitialized(), this.keychain.has(s)), this.set = async (s, i)=>{\n            this.isInitialized(), this.keychain.set(s, i), await this.persist();\n        }, this.get = (s)=>{\n            this.isInitialized();\n            const i = this.keychain.get(s);\n            if (typeof i > \"u\") {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${s}`);\n                throw new Error(r);\n            }\n            return i;\n        }, this.del = async (s)=>{\n            this.isInitialized(), this.keychain.delete(s), await this.persist();\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    async setKeyChain(e) {\n        await this.core.storage.setItem(this.storageKey, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.mapToObj)(e));\n    }\n    async getKeyChain() {\n        const e = await this.core.storage.getItem(this.storageKey);\n        return typeof e < \"u\" ? (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.objToMap)(e) : void 0;\n    }\n    async persist() {\n        await this.setKeyChain(this.keychain);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass Yt {\n    constructor(e, t, s){\n        this.core = e, this.logger = t, this.name = Ze, this.randomSessionIdentifier = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.generateRandomBytes32)(), this.initialized = !1, this.init = async ()=>{\n            this.initialized || (await this.keychain.init(), this.initialized = !0);\n        }, this.hasKeys = (i)=>(this.isInitialized(), this.keychain.has(i)), this.getClientId = async ()=>{\n            this.isInitialized();\n            const i = await this.getClientSeed(), r = _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.generateKeyPair(i);\n            return _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.encodeIss(r.publicKey);\n        }, this.generateKeyPair = ()=>{\n            this.isInitialized();\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.generateKeyPair)();\n            return this.setPrivateKey(i.publicKey, i.privateKey);\n        }, this.signJWT = async (i)=>{\n            this.isInitialized();\n            const r = await this.getClientSeed(), n = _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.generateKeyPair(r), a = this.randomSessionIdentifier, c = Qe;\n            return await _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.signJWT(a, i, c, n);\n        }, this.generateSharedKey = (i, r, n)=>{\n            this.isInitialized();\n            const a = this.getPrivateKey(i), c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.deriveSymKey)(a, r);\n            return this.setSymKey(c, n);\n        }, this.setSymKey = async (i, r)=>{\n            this.isInitialized();\n            const n = r || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.hashKey)(i);\n            return await this.keychain.set(n, i), n;\n        }, this.deleteKeyPair = async (i)=>{\n            this.isInitialized(), await this.keychain.del(i);\n        }, this.deleteSymKey = async (i)=>{\n            this.isInitialized(), await this.keychain.del(i);\n        }, this.encode = async (i, r, n)=>{\n            this.isInitialized();\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.validateEncoding)(n), c = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_5__.safeJsonStringify)(r);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isTypeTwoEnvelope)(a)) return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.encodeTypeTwoEnvelope)(c, n?.encoding);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isTypeOneEnvelope)(a)) {\n                const y = a.senderPublicKey, m = a.receiverPublicKey;\n                i = await this.generateSharedKey(y, m);\n            }\n            const h = this.getSymKey(i), { type: u, senderPublicKey: d } = a;\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.encrypt)({\n                type: u,\n                symKey: h,\n                message: c,\n                senderPublicKey: d,\n                encoding: n?.encoding\n            });\n        }, this.decode = async (i, r, n)=>{\n            this.isInitialized();\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.validateDecoding)(r, n);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isTypeTwoEnvelope)(a)) {\n                const c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.decodeTypeTwoEnvelope)(r, n?.encoding);\n                return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_5__.safeJsonParse)(c);\n            }\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isTypeOneEnvelope)(a)) {\n                const c = a.receiverPublicKey, h = a.senderPublicKey;\n                i = await this.generateSharedKey(c, h);\n            }\n            try {\n                const c = this.getSymKey(i), h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.decrypt)({\n                    symKey: c,\n                    encoded: r,\n                    encoding: n?.encoding\n                });\n                return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_5__.safeJsonParse)(h);\n            } catch (c) {\n                this.logger.error(`Failed to decode message from topic: '${i}', clientId: '${await this.getClientId()}'`), this.logger.error(c);\n            }\n        }, this.getPayloadType = (i, r = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.BASE64)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.deserialize)({\n                encoded: i,\n                encoding: r\n            });\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.decodeTypeByte)(n.type);\n        }, this.getPayloadSenderPublicKey = (i, r = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.BASE64)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.deserialize)({\n                encoded: i,\n                encoding: r\n            });\n            return n.senderPublicKey ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_7__.toString)(n.senderPublicKey, _walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.BASE16) : void 0;\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.keychain = s || new Ht(this.core, this.logger);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    async setPrivateKey(e, t) {\n        return await this.keychain.set(e, t), e;\n    }\n    getPrivateKey(e) {\n        return this.keychain.get(e);\n    }\n    async getClientSeed() {\n        let e = \"\";\n        try {\n            e = this.keychain.get(me);\n        } catch  {\n            e = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.generateRandomBytes32)(), await this.keychain.set(me, e);\n        }\n        return rn(e, \"base16\");\n    }\n    getSymKey(e) {\n        return this.keychain.get(e);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass Jt extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IMessageTracker {\n    constructor(e, t){\n        super(e, t), this.logger = e, this.core = t, this.messages = new Map, this.name = it, this.version = st, this.initialized = !1, this.storagePrefix = A, this.init = async ()=>{\n            if (!this.initialized) {\n                this.logger.trace(\"Initialized\");\n                try {\n                    const s = await this.getRelayerMessages();\n                    typeof s < \"u\" && (this.messages = s), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({\n                        type: \"method\",\n                        method: \"restore\",\n                        size: this.messages.size\n                    });\n                } catch (s) {\n                    this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(s);\n                } finally{\n                    this.initialized = !0;\n                }\n            }\n        }, this.set = async (s, i)=>{\n            this.isInitialized();\n            const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.hashMessage)(i);\n            let n = this.messages.get(s);\n            return typeof n > \"u\" && (n = {}), typeof n[r] < \"u\" || (n[r] = i, this.messages.set(s, n), await this.persist()), r;\n        }, this.get = (s)=>{\n            this.isInitialized();\n            let i = this.messages.get(s);\n            return typeof i > \"u\" && (i = {}), i;\n        }, this.has = (s, i)=>{\n            this.isInitialized();\n            const r = this.get(s), n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.hashMessage)(i);\n            return typeof r[n] < \"u\";\n        }, this.del = async (s)=>{\n            this.isInitialized(), this.messages.delete(s), await this.persist();\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e, this.name), this.core = t;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    async setRelayerMessages(e) {\n        await this.core.storage.setItem(this.storageKey, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.mapToObj)(e));\n    }\n    async getRelayerMessages() {\n        const e = await this.core.storage.getItem(this.storageKey);\n        return typeof e < \"u\" ? (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.objToMap)(e) : void 0;\n    }\n    async persist() {\n        await this.setRelayerMessages(this.messages);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nvar nn = Object.defineProperty, on = Object.defineProperties, an = Object.getOwnPropertyDescriptors, Xt = Object.getOwnPropertySymbols, cn = Object.prototype.hasOwnProperty, hn = Object.prototype.propertyIsEnumerable, Wt = (o, e, t)=>e in o ? nn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, Zt = (o, e)=>{\n    for(var t in e || (e = {}))cn.call(e, t) && Wt(o, t, e[t]);\n    if (Xt) for (var t of Xt(e))hn.call(e, t) && Wt(o, t, e[t]);\n    return o;\n}, Qt = (o, e)=>on(o, an(e));\nclass ln extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IPublisher {\n    constructor(e, t){\n        super(e, t), this.relayer = e, this.logger = t, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = rt, this.queue = new Map, this.publishTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_MINUTE), this.initialPublishTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND * 15), this.needsTransportRestart = !1, this.publish = async (s, i, r)=>{\n            var n;\n            this.logger.debug(\"Publishing Payload\"), this.logger.trace({\n                type: \"method\",\n                method: \"publish\",\n                params: {\n                    topic: s,\n                    message: i,\n                    opts: r\n                }\n            });\n            const a = r?.ttl || be, c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolName)(r), h = r?.prompt || !1, u = r?.tag || 0, d = r?.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.getBigIntRpcId)().toString(), y = {\n                topic: s,\n                message: i,\n                opts: {\n                    ttl: a,\n                    relay: c,\n                    prompt: h,\n                    tag: u,\n                    id: d,\n                    attestation: r?.attestation\n                }\n            }, m = `Failed to publish payload, please try again. id:${d} tag:${u}`;\n            try {\n                const l = new Promise(async (g)=>{\n                    const w = ({ id: D })=>{\n                        y.opts.id === D && (this.removeRequestFromQueue(D), this.relayer.events.removeListener(v.publish, w), g(y));\n                    };\n                    this.relayer.events.on(v.publish, w);\n                    const b = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(new Promise((D, P)=>{\n                        this.rpcPublish({\n                            topic: s,\n                            message: i,\n                            ttl: a,\n                            prompt: h,\n                            tag: u,\n                            id: d,\n                            attestation: r?.attestation\n                        }).then(D).catch((f)=>{\n                            this.logger.warn(f, f?.message), P(f);\n                        });\n                    }), this.initialPublishTimeout, `Failed initial publish, retrying.... id:${d} tag:${u}`);\n                    try {\n                        await b, this.events.removeListener(v.publish, w);\n                    } catch (D) {\n                        this.queue.set(d, Qt(Zt({}, y), {\n                            attempt: 1\n                        })), this.logger.warn(D, D?.message);\n                    }\n                });\n                this.logger.trace({\n                    type: \"method\",\n                    method: \"publish\",\n                    params: {\n                        id: d,\n                        topic: s,\n                        message: i,\n                        opts: r\n                    }\n                }), await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(l, this.publishTimeout, m);\n            } catch (l) {\n                if (this.logger.debug(\"Failed to Publish Payload\"), this.logger.error(l), (n = r?.internal) != null && n.throwOnFailedPublish) throw l;\n            } finally{\n                this.queue.delete(d);\n            }\n        }, this.on = (s, i)=>{\n            this.events.on(s, i);\n        }, this.once = (s, i)=>{\n            this.events.once(s, i);\n        }, this.off = (s, i)=>{\n            this.events.off(s, i);\n        }, this.removeListener = (s, i)=>{\n            this.events.removeListener(s, i);\n        }, this.relayer = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.registerEventListeners();\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    async rpcPublish(e) {\n        var t, s, i, r;\n        const { topic: n, message: a, ttl: c = be, prompt: h, tag: u, id: d, attestation: y } = e, m = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolName)().protocol).publish,\n            params: {\n                topic: n,\n                message: a,\n                ttl: c,\n                prompt: h,\n                tag: u,\n                attestation: y\n            },\n            id: d\n        };\n        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isUndefined)((t = m.params) == null ? void 0 : t.prompt) && ((s = m.params) == null || delete s.prompt), (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isUndefined)((i = m.params) == null ? void 0 : i.tag) && ((r = m.params) == null || delete r.tag), this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"message\",\n            direction: \"outgoing\",\n            request: m\n        });\n        const l = await this.relayer.request(m);\n        return this.relayer.events.emit(v.publish, e), this.logger.debug(\"Successfully Published Payload\"), l;\n    }\n    removeRequestFromQueue(e) {\n        this.queue.delete(e);\n    }\n    checkQueue() {\n        this.queue.forEach(async (e, t)=>{\n            const s = e.attempt + 1;\n            this.queue.set(t, Qt(Zt({}, e), {\n                attempt: s\n            }));\n            const { topic: i, message: r, opts: n, attestation: a } = e;\n            this.logger.warn({}, `Publisher: queue->publishing: ${e.opts.id}, tag: ${e.opts.tag}, attempt: ${s}`), await this.rpcPublish({\n                topic: i,\n                message: r,\n                ttl: n.ttl,\n                prompt: n.prompt,\n                tag: n.tag,\n                id: n.id,\n                attestation: a\n            }), this.logger.warn({}, `Publisher: queue->published: ${e.opts.id}`);\n        });\n    }\n    registerEventListeners() {\n        this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, ()=>{\n            if (this.needsTransportRestart) {\n                this.needsTransportRestart = !1, this.relayer.events.emit(v.connection_stalled);\n                return;\n            }\n            this.checkQueue();\n        }), this.relayer.on(v.message_ack, (e)=>{\n            this.removeRequestFromQueue(e.id.toString());\n        });\n    }\n}\nclass un {\n    constructor(){\n        this.map = new Map, this.set = (e, t)=>{\n            const s = this.get(e);\n            this.exists(e, t) || this.map.set(e, [\n                ...s,\n                t\n            ]);\n        }, this.get = (e)=>this.map.get(e) || [], this.exists = (e, t)=>this.get(e).includes(t), this.delete = (e, t)=>{\n            if (typeof t > \"u\") {\n                this.map.delete(e);\n                return;\n            }\n            if (!this.map.has(e)) return;\n            const s = this.get(e);\n            if (!this.exists(e, t)) return;\n            const i = s.filter((r)=>r !== t);\n            if (!i.length) {\n                this.map.delete(e);\n                return;\n            }\n            this.map.set(e, i);\n        }, this.clear = ()=>{\n            this.map.clear();\n        };\n    }\n    get topics() {\n        return Array.from(this.map.keys());\n    }\n}\nvar dn = Object.defineProperty, pn = Object.defineProperties, gn = Object.getOwnPropertyDescriptors, ei = Object.getOwnPropertySymbols, yn = Object.prototype.hasOwnProperty, Dn = Object.prototype.propertyIsEnumerable, ti = (o, e, t)=>e in o ? dn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, Z = (o, e)=>{\n    for(var t in e || (e = {}))yn.call(e, t) && ti(o, t, e[t]);\n    if (ei) for (var t of ei(e))Dn.call(e, t) && ti(o, t, e[t]);\n    return o;\n}, Ie = (o, e)=>pn(o, gn(e));\nclass ii extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.ISubscriber {\n    constructor(e, t){\n        super(e, t), this.relayer = e, this.logger = t, this.subscriptions = new Map, this.topicMap = new un, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = dt, this.version = pt, this.pending = new Map, this.cached = [], this.initialized = !1, this.pendingSubscriptionWatchLabel = \"pending_sub_watch_label\", this.pollingInterval = 20, this.storagePrefix = A, this.subscribeTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_MINUTE), this.initialSubscribeTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND * 15), this.batchSubscribeTopicsLimit = 500, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId(), await this.restore()), this.initialized = !0;\n        }, this.subscribe = async (s, i)=>{\n            this.isInitialized(), this.logger.debug(\"Subscribing Topic\"), this.logger.trace({\n                type: \"method\",\n                method: \"subscribe\",\n                params: {\n                    topic: s,\n                    opts: i\n                }\n            });\n            try {\n                const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolName)(i), n = {\n                    topic: s,\n                    relay: r,\n                    transportType: i?.transportType\n                };\n                this.pending.set(s, n);\n                const a = await this.rpcSubscribe(s, r, i);\n                return typeof a == \"string\" && (this.onSubscribe(a, n), this.logger.debug(\"Successfully Subscribed Topic\"), this.logger.trace({\n                    type: \"method\",\n                    method: \"subscribe\",\n                    params: {\n                        topic: s,\n                        opts: i\n                    }\n                })), a;\n            } catch (r) {\n                throw this.logger.debug(\"Failed to Subscribe Topic\"), this.logger.error(r), r;\n            }\n        }, this.unsubscribe = async (s, i)=>{\n            await this.restartToComplete(), this.isInitialized(), typeof i?.id < \"u\" ? await this.unsubscribeById(s, i.id, i) : await this.unsubscribeByTopic(s, i);\n        }, this.isSubscribed = async (s)=>{\n            if (this.topics.includes(s)) return !0;\n            const i = `${this.pendingSubscriptionWatchLabel}_${s}`;\n            return await new Promise((r, n)=>{\n                const a = new _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.Watch;\n                a.start(i);\n                const c = setInterval(()=>{\n                    (!this.pending.has(s) && this.topics.includes(s) || this.cached.some((h)=>h.topic === s)) && (clearInterval(c), a.stop(i), r(!0)), a.elapsed(i) >= gt && (clearInterval(c), a.stop(i), n(new Error(\"Subscription resolution timeout\")));\n                }, this.pollingInterval);\n            }).catch(()=>!1);\n        }, this.on = (s, i)=>{\n            this.events.on(s, i);\n        }, this.once = (s, i)=>{\n            this.events.once(s, i);\n        }, this.off = (s, i)=>{\n            this.events.off(s, i);\n        }, this.removeListener = (s, i)=>{\n            this.events.removeListener(s, i);\n        }, this.start = async ()=>{\n            await this.onConnect();\n        }, this.stop = async ()=>{\n            await this.onDisconnect();\n        }, this.restart = async ()=>{\n            await this.restore(), await this.onRestart();\n        }, this.checkPending = async ()=>{\n            if (this.pending.size === 0 && (!this.initialized || !this.relayer.connected)) return;\n            const s = [];\n            this.pending.forEach((i)=>{\n                s.push(i);\n            }), await this.batchSubscribe(s);\n        }, this.registerEventListeners = ()=>{\n            this.relayer.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, async ()=>{\n                await this.checkPending();\n            }), this.events.on(T.created, async (s)=>{\n                const i = T.created;\n                this.logger.info(`Emitting ${i}`), this.logger.debug({\n                    type: \"event\",\n                    event: i,\n                    data: s\n                }), await this.persist();\n            }), this.events.on(T.deleted, async (s)=>{\n                const i = T.deleted;\n                this.logger.info(`Emitting ${i}`), this.logger.debug({\n                    type: \"event\",\n                    event: i,\n                    data: s\n                }), await this.persist();\n            });\n        }, this.relayer = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.clientId = \"\";\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.subscriptions.size;\n    }\n    get ids() {\n        return Array.from(this.subscriptions.keys());\n    }\n    get values() {\n        return Array.from(this.subscriptions.values());\n    }\n    get topics() {\n        return this.topicMap.topics;\n    }\n    hasSubscription(e, t) {\n        let s = !1;\n        try {\n            s = this.getSubscription(e).topic === t;\n        } catch  {}\n        return s;\n    }\n    reset() {\n        this.cached = [], this.initialized = !0;\n    }\n    onDisable() {\n        this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();\n    }\n    async unsubscribeByTopic(e, t) {\n        const s = this.topicMap.get(e);\n        await Promise.all(s.map(async (i)=>await this.unsubscribeById(e, i, t)));\n    }\n    async unsubscribeById(e, t, s) {\n        this.logger.debug(\"Unsubscribing Topic\"), this.logger.trace({\n            type: \"method\",\n            method: \"unsubscribe\",\n            params: {\n                topic: e,\n                id: t,\n                opts: s\n            }\n        });\n        try {\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolName)(s);\n            await this.rpcUnsubscribe(e, t, i);\n            const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"USER_DISCONNECTED\", `${this.name}, ${e}`);\n            await this.onUnsubscribe(e, t, r), this.logger.debug(\"Successfully Unsubscribed Topic\"), this.logger.trace({\n                type: \"method\",\n                method: \"unsubscribe\",\n                params: {\n                    topic: e,\n                    id: t,\n                    opts: s\n                }\n            });\n        } catch (i) {\n            throw this.logger.debug(\"Failed to Unsubscribe Topic\"), this.logger.error(i), i;\n        }\n    }\n    async rpcSubscribe(e, t, s) {\n        var i;\n        s?.transportType === M.relay && await this.restartToComplete();\n        const r = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)(t.protocol).subscribe,\n            params: {\n                topic: e\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: r\n        });\n        const n = (i = s?.internal) == null ? void 0 : i.throwOnFailedPublish;\n        try {\n            const a = this.getSubscriptionId(e);\n            if (s?.transportType === M.link_mode) return setTimeout(()=>{\n                (this.relayer.connected || this.relayer.connecting) && this.relayer.request(r).catch((u)=>this.logger.warn(u));\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND)), a;\n            const c = new Promise(async (u)=>{\n                const d = (y)=>{\n                    y.topic === e && (this.events.removeListener(T.created, d), u(y.id));\n                };\n                this.events.on(T.created, d);\n                try {\n                    const y = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(new Promise((m, l)=>{\n                        this.relayer.request(r).catch((g)=>{\n                            this.logger.warn(g, g?.message), l(g);\n                        }).then(m);\n                    }), this.initialSubscribeTimeout, `Subscribing to ${e} failed, please try again`);\n                    this.events.removeListener(T.created, d), u(y);\n                } catch  {}\n            }), h = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(c, this.subscribeTimeout, `Subscribing to ${e} failed, please try again`);\n            if (!h && n) throw new Error(`Subscribing to ${e} failed, please try again`);\n            return h ? a : null;\n        } catch (a) {\n            if (this.logger.debug(\"Outgoing Relay Subscribe Payload stalled\"), this.relayer.events.emit(v.connection_stalled), n) throw a;\n        }\n        return null;\n    }\n    async rpcBatchSubscribe(e) {\n        if (!e.length) return;\n        const t = e[0].relay, s = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)(t.protocol).batchSubscribe,\n            params: {\n                topics: e.map((i)=>i.topic)\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: s\n        });\n        try {\n            await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(new Promise((i)=>{\n                this.relayer.request(s).catch((r)=>this.logger.warn(r)).then(i);\n            }), this.subscribeTimeout, \"rpcBatchSubscribe failed, please try again\");\n        } catch  {\n            this.relayer.events.emit(v.connection_stalled);\n        }\n    }\n    async rpcBatchFetchMessages(e) {\n        if (!e.length) return;\n        const t = e[0].relay, s = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)(t.protocol).batchFetchMessages,\n            params: {\n                topics: e.map((r)=>r.topic)\n            }\n        };\n        this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: s\n        });\n        let i;\n        try {\n            i = await await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(new Promise((r, n)=>{\n                this.relayer.request(s).catch((a)=>{\n                    this.logger.warn(a), n(a);\n                }).then(r);\n            }), this.subscribeTimeout, \"rpcBatchFetchMessages failed, please try again\");\n        } catch  {\n            this.relayer.events.emit(v.connection_stalled);\n        }\n        return i;\n    }\n    rpcUnsubscribe(e, t, s) {\n        const i = {\n            method: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getRelayProtocolApi)(s.protocol).unsubscribe,\n            params: {\n                topic: e,\n                id: t\n            }\n        };\n        return this.logger.debug(\"Outgoing Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"outgoing\",\n            request: i\n        }), this.relayer.request(i);\n    }\n    onSubscribe(e, t) {\n        this.setSubscription(e, Ie(Z({}, t), {\n            id: e\n        })), this.pending.delete(t.topic);\n    }\n    onBatchSubscribe(e) {\n        e.length && e.forEach((t)=>{\n            this.setSubscription(t.id, Z({}, t)), this.pending.delete(t.topic);\n        });\n    }\n    async onUnsubscribe(e, t, s) {\n        this.events.removeAllListeners(t), this.hasSubscription(t, e) && this.deleteSubscription(t, s), await this.relayer.messages.del(e);\n    }\n    async setRelayerSubscriptions(e) {\n        await this.relayer.core.storage.setItem(this.storageKey, e);\n    }\n    async getRelayerSubscriptions() {\n        return await this.relayer.core.storage.getItem(this.storageKey);\n    }\n    setSubscription(e, t) {\n        this.logger.debug(\"Setting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"setSubscription\",\n            id: e,\n            subscription: t\n        }), this.addSubscription(e, t);\n    }\n    addSubscription(e, t) {\n        this.subscriptions.set(e, Z({}, t)), this.topicMap.set(t.topic, e), this.events.emit(T.created, t);\n    }\n    getSubscription(e) {\n        this.logger.debug(\"Getting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"getSubscription\",\n            id: e\n        });\n        const t = this.subscriptions.get(e);\n        if (!t) {\n            const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw new Error(s);\n        }\n        return t;\n    }\n    deleteSubscription(e, t) {\n        this.logger.debug(\"Deleting subscription\"), this.logger.trace({\n            type: \"method\",\n            method: \"deleteSubscription\",\n            id: e,\n            reason: t\n        });\n        const s = this.getSubscription(e);\n        this.subscriptions.delete(e), this.topicMap.delete(s.topic, e), this.events.emit(T.deleted, Ie(Z({}, s), {\n            reason: t\n        }));\n    }\n    async persist() {\n        await this.setRelayerSubscriptions(this.values), this.events.emit(T.sync);\n    }\n    async onRestart() {\n        if (this.cached.length) {\n            const e = [\n                ...this.cached\n            ], t = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);\n            for(let s = 0; s < t; s++){\n                const i = e.splice(0, this.batchSubscribeTopicsLimit);\n                await this.batchSubscribe(i);\n            }\n        }\n        this.events.emit(T.resubscribed);\n    }\n    async restore() {\n        try {\n            const e = await this.getRelayerSubscriptions();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.subscriptions.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                subscriptions: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e);\n        }\n    }\n    async batchSubscribe(e) {\n        e.length && (await this.rpcBatchSubscribe(e), this.onBatchSubscribe(e.map((t)=>Ie(Z({}, t), {\n                id: this.getSubscriptionId(t.topic)\n            }))));\n    }\n    async batchFetchMessages(e) {\n        if (!e.length) return;\n        this.logger.trace(`Fetching batch messages for ${e.length} subscriptions`);\n        const t = await this.rpcBatchFetchMessages(e);\n        t && t.messages && (await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.sleep)((0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND)), await this.relayer.handleBatchMessageEvents(t.messages));\n    }\n    async onConnect() {\n        await this.restart(), this.reset();\n    }\n    onDisconnect() {\n        this.onDisable();\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    async restartToComplete() {\n        !this.relayer.connected && !this.relayer.connecting && await this.relayer.transportOpen();\n    }\n    getSubscriptionId(e) {\n        return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.hashMessage)(e + this.clientId);\n    }\n}\nvar mn = Object.defineProperty, si = Object.getOwnPropertySymbols, bn = Object.prototype.hasOwnProperty, fn = Object.prototype.propertyIsEnumerable, ri = (o, e, t)=>e in o ? mn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, ni = (o, e)=>{\n    for(var t in e || (e = {}))bn.call(e, t) && ri(o, t, e[t]);\n    if (si) for (var t of si(e))fn.call(e, t) && ri(o, t, e[t]);\n    return o;\n};\nclass oi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IRelayer {\n    constructor(e){\n        super(e), this.protocol = \"wc\", this.version = 2, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = at, this.transportExplicitlyClosed = !1, this.initialized = !1, this.connectionAttemptInProgress = !1, this.hasExperiencedNetworkDisruption = !1, this.heartBeatTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_SECONDS + _walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_SECONDS), this.requestsInFlight = [], this.connectTimeout = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND * 15), this.request = async (t)=>{\n            var s, i;\n            this.logger.debug(\"Publishing Request Payload\");\n            const r = t.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.getBigIntRpcId)().toString();\n            await this.toEstablishConnection();\n            try {\n                this.logger.trace({\n                    id: r,\n                    method: t.method,\n                    topic: (s = t.params) == null ? void 0 : s.topic\n                }, \"relayer.request - publishing...\");\n                const n = `${r}:${((i = t.params) == null ? void 0 : i.tag) || \"\"}`;\n                this.requestsInFlight.push(n);\n                const a = await this.provider.request(t);\n                return this.requestsInFlight = this.requestsInFlight.filter((c)=>c !== n), a;\n            } catch (n) {\n                throw this.logger.debug(`Failed to Publish Request: ${r}`), n;\n            }\n        }, this.resetPingTimeout = ()=>{\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isNode)()) try {\n                clearTimeout(this.pingTimeout), this.pingTimeout = setTimeout(()=>{\n                    var t, s, i;\n                    this.logger.debug({}, \"pingTimeout: Connection stalled, terminating...\"), (i = (s = (t = this.provider) == null ? void 0 : t.connection) == null ? void 0 : s.socket) == null || i.terminate();\n                }, this.heartBeatTimeout);\n            } catch (t) {\n                this.logger.warn(t, t?.message);\n            }\n        }, this.onPayloadHandler = (t)=>{\n            this.onProviderPayload(t), this.resetPingTimeout();\n        }, this.onConnectHandler = ()=>{\n            this.logger.warn({}, \"Relayer connected \\uD83D\\uDEDC\"), this.startPingTimeout(), this.events.emit(v.connect);\n        }, this.onDisconnectHandler = ()=>{\n            this.logger.warn({}, \"Relayer disconnected \\uD83D\\uDED1\"), this.requestsInFlight = [], this.onProviderDisconnect();\n        }, this.onProviderErrorHandler = (t)=>{\n            this.logger.fatal(t, `Fatal socket error: ${t?.message}`), this.events.emit(v.error, t), this.logger.fatal(\"Fatal socket error received, closing transport\"), this.transportClose();\n        }, this.registerProviderListeners = ()=>{\n            this.provider.on(C.payload, this.onPayloadHandler), this.provider.on(C.connect, this.onConnectHandler), this.provider.on(C.disconnect, this.onDisconnectHandler), this.provider.on(C.error, this.onProviderErrorHandler);\n        }, this.core = e.core, this.logger = typeof e.logger < \"u\" && typeof e.logger != \"string\" ? (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(e.logger, this.name) : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({\n            level: e.logger || ot\n        })), this.messages = new Jt(this.logger, e.core), this.subscriber = new ii(this, this.logger), this.publisher = new ln(this, this.logger), this.relayUrl = e?.relayUrl || fe, this.projectId = e.projectId, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isAndroid)() ? this.packageName = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getAppId)() : (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isIos)() && (this.bundleId = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getAppId)()), this.provider = {};\n    }\n    async init() {\n        if (this.logger.trace(\"Initialized\"), this.registerEventListeners(), await Promise.all([\n            this.messages.init(),\n            this.subscriber.init()\n        ]), this.initialized = !0, this.subscriber.cached.length > 0) try {\n            await this.transportOpen();\n        } catch (e) {\n            this.logger.warn(e, e?.message);\n        }\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get connected() {\n        var e, t, s;\n        return ((s = (t = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : t.socket) == null ? void 0 : s.readyState) === 1;\n    }\n    get connecting() {\n        var e, t, s;\n        return ((s = (t = (e = this.provider) == null ? void 0 : e.connection) == null ? void 0 : t.socket) == null ? void 0 : s.readyState) === 0;\n    }\n    async publish(e, t, s) {\n        this.isInitialized(), await this.publisher.publish(e, t, s), await this.recordMessageEvent({\n            topic: e,\n            message: t,\n            publishedAt: Date.now(),\n            transportType: M.relay\n        });\n    }\n    async subscribe(e, t) {\n        var s, i, r;\n        this.isInitialized(), (!(t != null && t.transportType) || t?.transportType === \"relay\") && await this.toEstablishConnection();\n        const n = typeof ((s = t?.internal) == null ? void 0 : s.throwOnFailedPublish) > \"u\" ? !0 : (i = t?.internal) == null ? void 0 : i.throwOnFailedPublish;\n        let a = ((r = this.subscriber.topicMap.get(e)) == null ? void 0 : r[0]) || \"\", c;\n        const h = (u)=>{\n            u.topic === e && (this.subscriber.off(T.created, h), c());\n        };\n        return await Promise.all([\n            new Promise((u)=>{\n                c = u, this.subscriber.on(T.created, h);\n            }),\n            new Promise(async (u, d)=>{\n                a = await this.subscriber.subscribe(e, ni({\n                    internal: {\n                        throwOnFailedPublish: n\n                    }\n                }, t)).catch((y)=>{\n                    n && d(y);\n                }) || a, u();\n            })\n        ]), a;\n    }\n    async unsubscribe(e, t) {\n        this.isInitialized(), await this.subscriber.unsubscribe(e, t);\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async transportDisconnect() {\n        this.provider.disconnect && (this.hasExperiencedNetworkDisruption || this.connected) ? await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(this.provider.disconnect(), 2e3, \"provider.disconnect()\").catch(()=>this.onProviderDisconnect()) : this.onProviderDisconnect();\n    }\n    async transportClose() {\n        this.transportExplicitlyClosed = !0, await this.transportDisconnect();\n    }\n    async transportOpen(e) {\n        if (this.connectPromise ? (this.logger.debug({}, \"Waiting for existing connection attempt to resolve...\"), await this.connectPromise, this.logger.debug({}, \"Existing connection attempt resolved\")) : (this.connectPromise = new Promise(async (t, s)=>{\n            await this.connect(e).then(t).catch(s).finally(()=>{\n                this.connectPromise = void 0;\n            });\n        }), await this.connectPromise), !this.connected) throw new Error(`Couldn't establish socket connection to the relay server: ${this.relayUrl}`);\n    }\n    async restartTransport(e) {\n        this.logger.debug({}, \"Restarting transport...\"), !this.connectionAttemptInProgress && (this.relayUrl = e || this.relayUrl, await this.confirmOnlineStateOrThrow(), await this.transportClose(), await this.transportOpen());\n    }\n    async confirmOnlineStateOrThrow() {\n        if (!await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isOnline)()) throw new Error(\"No internet connection detected. Please restart your network and try again.\");\n    }\n    async handleBatchMessageEvents(e) {\n        if (e?.length === 0) {\n            this.logger.trace(\"Batch message events is empty. Ignoring...\");\n            return;\n        }\n        const t = e.sort((s, i)=>s.publishedAt - i.publishedAt);\n        this.logger.debug(`Batch of ${t.length} message events sorted`);\n        for (const s of t)try {\n            await this.onMessageEvent(s);\n        } catch (i) {\n            this.logger.warn(i, \"Error while processing batch message event: \" + i?.message);\n        }\n        this.logger.trace(`Batch of ${t.length} message events processed`);\n    }\n    async onLinkMessageEvent(e, t) {\n        const { topic: s } = e;\n        if (!t.sessionExists) {\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_MINUTES), r = {\n                topic: s,\n                expiry: i,\n                relay: {\n                    protocol: \"irn\"\n                },\n                active: !1\n            };\n            await this.core.pairing.pairings.set(s, r);\n        }\n        this.events.emit(v.message, e), await this.recordMessageEvent(e);\n    }\n    async connect(e) {\n        await this.confirmOnlineStateOrThrow(), e && e !== this.relayUrl && (this.relayUrl = e, await this.transportDisconnect()), this.connectionAttemptInProgress = !0, this.transportExplicitlyClosed = !1;\n        let t = 1;\n        for(; t < 6;){\n            try {\n                this.logger.debug({}, `Connecting to ${this.relayUrl}, attempt: ${t}...`), await this.createProvider(), await new Promise(async (s, i)=>{\n                    const r = ()=>{\n                        i(new Error(\"Connection interrupted while trying to subscribe\"));\n                    };\n                    this.provider.once(C.disconnect, r), await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createExpiringPromise)(new Promise((n, a)=>{\n                        this.provider.connect().then(n).catch(a);\n                    }), this.connectTimeout, `Socket stalled when trying to connect to ${this.relayUrl}`).catch((n)=>{\n                        i(n);\n                    }).finally(()=>{\n                        this.provider.off(C.disconnect, r), clearTimeout(this.reconnectTimeout), this.reconnectTimeout = void 0;\n                    }), await new Promise(async (n, a)=>{\n                        const c = ()=>{\n                            a(new Error(\"Connection interrupted while trying to subscribe\"));\n                        };\n                        this.provider.once(C.disconnect, c), await this.subscriber.start().then(n).catch(a).finally(()=>{\n                            this.provider.off(C.disconnect, c);\n                        });\n                    }), this.hasExperiencedNetworkDisruption = !1, s();\n                });\n            } catch (s) {\n                await this.subscriber.stop();\n                const i = s;\n                this.logger.warn({}, i.message), this.hasExperiencedNetworkDisruption = !0;\n            } finally{\n                this.connectionAttemptInProgress = !1;\n            }\n            if (this.connected) {\n                this.logger.debug({}, `Connected to ${this.relayUrl} successfully on attempt: ${t}`);\n                break;\n            }\n            await new Promise((s)=>setTimeout(s, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(t * 1))), t++;\n        }\n    }\n    startPingTimeout() {\n        var e, t, s, i, r;\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isNode)()) try {\n            (t = (e = this.provider) == null ? void 0 : e.connection) != null && t.socket && ((r = (i = (s = this.provider) == null ? void 0 : s.connection) == null ? void 0 : i.socket) == null || r.on(\"ping\", ()=>{\n                this.resetPingTimeout();\n            })), this.resetPingTimeout();\n        } catch (n) {\n            this.logger.warn(n, n?.message);\n        }\n    }\n    async createProvider() {\n        this.provider.connection && this.unregisterProviderListeners();\n        const e = await this.core.crypto.signJWT(this.relayUrl);\n        this.provider = new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_8__.JsonRpcProvider(new _walletconnect_jsonrpc_ws_connection__WEBPACK_IMPORTED_MODULE_10__[\"default\"]((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatRelayRpcUrl)({\n            sdkVersion: re,\n            protocol: this.protocol,\n            version: this.version,\n            relayUrl: this.relayUrl,\n            projectId: this.projectId,\n            auth: e,\n            useOnCloseEvent: !0,\n            bundleId: this.bundleId,\n            packageName: this.packageName\n        }))), this.registerProviderListeners();\n    }\n    async recordMessageEvent(e) {\n        const { topic: t, message: s } = e;\n        await this.messages.set(t, s);\n    }\n    async shouldIgnoreMessageEvent(e) {\n        const { topic: t, message: s } = e;\n        if (!s || s.length === 0) return this.logger.warn(`Ignoring invalid/empty message: ${s}`), !0;\n        if (!await this.subscriber.isSubscribed(t)) return this.logger.warn(`Ignoring message for non-subscribed topic ${t}`), !0;\n        const i = this.messages.has(t, s);\n        return i && this.logger.warn(`Ignoring duplicate message: ${s}`), i;\n    }\n    async onProviderPayload(e) {\n        if (this.logger.debug(\"Incoming Relay Payload\"), this.logger.trace({\n            type: \"payload\",\n            direction: \"incoming\",\n            payload: e\n        }), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcRequest)(e)) {\n            if (!e.method.endsWith(ct)) return;\n            const t = e.params, { topic: s, message: i, publishedAt: r, attestation: n } = t.data, a = {\n                topic: s,\n                message: i,\n                publishedAt: r,\n                transportType: M.relay,\n                attestation: n\n            };\n            this.logger.debug(\"Emitting Relayer Payload\"), this.logger.trace(ni({\n                type: \"event\",\n                event: t.id\n            }, a)), this.events.emit(t.id, a), await this.acknowledgePayload(e), await this.onMessageEvent(a);\n        } else (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResponse)(e) && this.events.emit(v.message_ack, e);\n    }\n    async onMessageEvent(e) {\n        await this.shouldIgnoreMessageEvent(e) || (this.events.emit(v.message, e), await this.recordMessageEvent(e));\n    }\n    async acknowledgePayload(e) {\n        const t = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcResult)(e.id, !0);\n        await this.provider.connection.send(t);\n    }\n    unregisterProviderListeners() {\n        this.provider.off(C.payload, this.onPayloadHandler), this.provider.off(C.connect, this.onConnectHandler), this.provider.off(C.disconnect, this.onDisconnectHandler), this.provider.off(C.error, this.onProviderErrorHandler), clearTimeout(this.pingTimeout);\n    }\n    async registerEventListeners() {\n        let e = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isOnline)();\n        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.subscribeToNetworkChange)(async (t)=>{\n            e !== t && (e = t, t ? await this.transportOpen().catch((s)=>this.logger.error(s, s?.message)) : (this.hasExperiencedNetworkDisruption = !0, await this.transportDisconnect(), this.transportExplicitlyClosed = !1));\n        });\n    }\n    async onProviderDisconnect() {\n        await this.subscriber.stop(), clearTimeout(this.pingTimeout), this.events.emit(v.disconnect), this.connectionAttemptInProgress = !1, !this.transportExplicitlyClosed && (this.reconnectTimeout || this.connectPromise || (this.reconnectTimeout = setTimeout(async ()=>{\n            clearTimeout(this.reconnectTimeout), await this.transportOpen().catch((e)=>this.logger.error(e, e?.message));\n        }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(ht))));\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    async toEstablishConnection() {\n        await this.confirmOnlineStateOrThrow(), !this.connected && await this.transportOpen();\n    }\n}\nvar vn = Object.defineProperty, ai = Object.getOwnPropertySymbols, _n = Object.prototype.hasOwnProperty, En = Object.prototype.propertyIsEnumerable, ci = (o, e, t)=>e in o ? vn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, hi = (o, e)=>{\n    for(var t in e || (e = {}))_n.call(e, t) && ci(o, t, e[t]);\n    if (ai) for (var t of ai(e))En.call(e, t) && ci(o, t, e[t]);\n    return o;\n};\nclass li extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IStore {\n    constructor(e, t, s, i = A, r = void 0){\n        super(e, t, s, i), this.core = e, this.logger = t, this.name = s, this.map = new Map, this.version = lt, this.cached = [], this.initialized = !1, this.storagePrefix = A, this.recentlyDeleted = [], this.recentlyDeletedLimit = 200, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((n)=>{\n                this.getKey && n !== null && !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isUndefined)(n) ? this.map.set(this.getKey(n), n) : (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isProposalStruct)(n) ? this.map.set(n.id, n) : (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isSessionStruct)(n) && this.map.set(n.topic, n);\n            }), this.cached = [], this.initialized = !0);\n        }, this.set = async (n, a)=>{\n            this.isInitialized(), this.map.has(n) ? await this.update(n, a) : (this.logger.debug(\"Setting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"set\",\n                key: n,\n                value: a\n            }), this.map.set(n, a), await this.persist());\n        }, this.get = (n)=>(this.isInitialized(), this.logger.debug(\"Getting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"get\",\n                key: n\n            }), this.getData(n)), this.getAll = (n)=>(this.isInitialized(), n ? this.values.filter((a)=>Object.keys(n).every((c)=>lodash_isequal__WEBPACK_IMPORTED_MODULE_11___default()(a[c], n[c]))) : this.values), this.update = async (n, a)=>{\n            this.isInitialized(), this.logger.debug(\"Updating value\"), this.logger.trace({\n                type: \"method\",\n                method: \"update\",\n                key: n,\n                update: a\n            });\n            const c = hi(hi({}, this.getData(n)), a);\n            this.map.set(n, c), await this.persist();\n        }, this.delete = async (n, a)=>{\n            this.isInitialized(), this.map.has(n) && (this.logger.debug(\"Deleting value\"), this.logger.trace({\n                type: \"method\",\n                method: \"delete\",\n                key: n,\n                reason: a\n            }), this.map.delete(n), this.addToRecentlyDeleted(n), await this.persist());\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.storagePrefix = i, this.getKey = r;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.map.size;\n    }\n    get keys() {\n        return Array.from(this.map.keys());\n    }\n    get values() {\n        return Array.from(this.map.values());\n    }\n    addToRecentlyDeleted(e) {\n        this.recentlyDeleted.push(e), this.recentlyDeleted.length >= this.recentlyDeletedLimit && this.recentlyDeleted.splice(0, this.recentlyDeletedLimit / 2);\n    }\n    async setDataStore(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getDataStore() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    getData(e) {\n        const t = this.map.get(e);\n        if (!t) {\n            if (this.recentlyDeleted.includes(e)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `Record was recently deleted - ${this.name}: ${e}`);\n                throw this.logger.error(i), new Error(i);\n            }\n            const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw this.logger.error(s), new Error(s);\n        }\n        return t;\n    }\n    async persist() {\n        await this.setDataStore(this.values);\n    }\n    async restore() {\n        try {\n            const e = await this.getDataStore();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.map.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                value: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e);\n        }\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass ui {\n    constructor(e, t){\n        this.core = e, this.logger = t, this.name = yt, this.version = Dt, this.events = new (events__WEBPACK_IMPORTED_MODULE_0___default()), this.initialized = !1, this.storagePrefix = A, this.ignoredPayloadTypes = [\n            _walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.TYPE_1\n        ], this.registeredMethods = [], this.init = async ()=>{\n            this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = !0, this.logger.trace(\"Initialized\"));\n        }, this.register = ({ methods: s })=>{\n            this.isInitialized(), this.registeredMethods = [\n                ...new Set([\n                    ...this.registeredMethods,\n                    ...s\n                ])\n            ];\n        }, this.create = async (s)=>{\n            this.isInitialized();\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.generateRandomBytes32)(), r = await this.core.crypto.setSymKey(i), n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_MINUTES), a = {\n                protocol: nt\n            }, c = {\n                topic: r,\n                expiry: n,\n                relay: a,\n                active: !1,\n                methods: s?.methods\n            }, h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatUri)({\n                protocol: this.core.protocol,\n                version: this.core.version,\n                topic: r,\n                symKey: i,\n                relay: a,\n                expiryTimestamp: n,\n                methods: s?.methods\n            });\n            return this.events.emit(j.create, c), this.core.expirer.set(r, n), await this.pairings.set(r, c), await this.core.relayer.subscribe(r, {\n                transportType: s?.transportType\n            }), {\n                topic: r,\n                uri: h\n            };\n        }, this.pair = async (s)=>{\n            this.isInitialized();\n            const i = this.core.eventClient.createEvent({\n                properties: {\n                    topic: s?.uri,\n                    trace: [\n                        z.pairing_started\n                    ]\n                }\n            });\n            this.isValidPair(s, i);\n            const { topic: r, symKey: n, relay: a, expiryTimestamp: c, methods: h } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.parseUri)(s.uri);\n            i.props.properties.topic = r, i.addTrace(z.pairing_uri_validation_success), i.addTrace(z.pairing_uri_not_expired);\n            let u;\n            if (this.pairings.keys.includes(r)) {\n                if (u = this.pairings.get(r), i.addTrace(z.existing_pairing), u.active) throw i.setError($.active_pairing_already_exists), new Error(`Pairing already exists: ${r}. Please try again with a new connection URI.`);\n                i.addTrace(z.pairing_not_expired);\n            }\n            const d = c || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_MINUTES), y = {\n                topic: r,\n                relay: a,\n                expiry: d,\n                active: !1,\n                methods: h\n            };\n            this.core.expirer.set(r, d), await this.pairings.set(r, y), i.addTrace(z.store_new_pairing), s.activatePairing && await this.activate({\n                topic: r\n            }), this.events.emit(j.create, y), i.addTrace(z.emit_inactive_pairing), this.core.crypto.keychain.has(r) || await this.core.crypto.setSymKey(n, r), i.addTrace(z.subscribing_pairing_topic);\n            try {\n                await this.core.relayer.confirmOnlineStateOrThrow();\n            } catch  {\n                i.setError($.no_internet_connection);\n            }\n            try {\n                await this.core.relayer.subscribe(r, {\n                    relay: a\n                });\n            } catch (m) {\n                throw i.setError($.subscribe_pairing_topic_failure), m;\n            }\n            return i.addTrace(z.subscribe_pairing_topic_success), y;\n        }, this.activate = async ({ topic: s })=>{\n            this.isInitialized();\n            const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_MINUTES);\n            this.core.expirer.set(s, i), await this.pairings.update(s, {\n                active: !0,\n                expiry: i\n            });\n        }, this.ping = async (s)=>{\n            this.isInitialized(), await this.isValidPing(s), this.logger.warn(\"ping() is deprecated and will be removed in the next major release.\");\n            const { topic: i } = s;\n            if (this.pairings.keys.includes(i)) {\n                const r = await this.sendRequest(i, \"wc_pairingPing\", {}), { done: n, resolve: a, reject: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.createDelayedPromise)();\n                this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.engineEvent)(\"pairing_ping\", r), ({ error: h })=>{\n                    h ? c(h) : a();\n                }), await n();\n            }\n        }, this.updateExpiry = async ({ topic: s, expiry: i })=>{\n            this.isInitialized(), await this.pairings.update(s, {\n                expiry: i\n            });\n        }, this.updateMetadata = async ({ topic: s, metadata: i })=>{\n            this.isInitialized(), await this.pairings.update(s, {\n                peerMetadata: i\n            });\n        }, this.getPairings = ()=>(this.isInitialized(), this.pairings.values), this.disconnect = async (s)=>{\n            this.isInitialized(), await this.isValidDisconnect(s);\n            const { topic: i } = s;\n            this.pairings.keys.includes(i) && (await this.sendRequest(i, \"wc_pairingDelete\", (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"USER_DISCONNECTED\")), await this.deletePairing(i));\n        }, this.formatUriFromPairing = (s)=>{\n            this.isInitialized();\n            const { topic: i, relay: r, expiry: n, methods: a } = s, c = this.core.crypto.keychain.get(i);\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatUri)({\n                protocol: this.core.protocol,\n                version: this.core.version,\n                topic: i,\n                symKey: c,\n                relay: r,\n                expiryTimestamp: n,\n                methods: a\n            });\n        }, this.sendRequest = async (s, i, r)=>{\n            const n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcRequest)(i, r), a = await this.core.crypto.encode(s, n), c = V[i].req;\n            return this.core.history.set(s, n), this.core.relayer.publish(s, a, c), n.id;\n        }, this.sendResult = async (s, i, r)=>{\n            const n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcResult)(s, r), a = await this.core.crypto.encode(i, n), c = await this.core.history.get(i, s), h = V[c.request.method].res;\n            await this.core.relayer.publish(i, a, h), await this.core.history.resolve(n);\n        }, this.sendError = async (s, i, r)=>{\n            const n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcError)(s, r), a = await this.core.crypto.encode(i, n), c = await this.core.history.get(i, s), h = V[c.request.method] ? V[c.request.method].res : V.unregistered_method.res;\n            await this.core.relayer.publish(i, a, h), await this.core.history.resolve(n);\n        }, this.deletePairing = async (s, i)=>{\n            await this.core.relayer.unsubscribe(s), await Promise.all([\n                this.pairings.delete(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"USER_DISCONNECTED\")),\n                this.core.crypto.deleteSymKey(s),\n                i ? Promise.resolve() : this.core.expirer.del(s)\n            ]);\n        }, this.cleanup = async ()=>{\n            const s = this.pairings.getAll().filter((i)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isExpired)(i.expiry));\n            await Promise.all(s.map((i)=>this.deletePairing(i.topic)));\n        }, this.onRelayEventRequest = (s)=>{\n            const { topic: i, payload: r } = s;\n            switch(r.method){\n                case \"wc_pairingPing\":\n                    return this.onPairingPingRequest(i, r);\n                case \"wc_pairingDelete\":\n                    return this.onPairingDeleteRequest(i, r);\n                default:\n                    return this.onUnknownRpcMethodRequest(i, r);\n            }\n        }, this.onRelayEventResponse = async (s)=>{\n            const { topic: i, payload: r } = s, n = (await this.core.history.get(i, r.id)).request.method;\n            switch(n){\n                case \"wc_pairingPing\":\n                    return this.onPairingPingResponse(i, r);\n                default:\n                    return this.onUnknownRpcMethodResponse(n);\n            }\n        }, this.onPairingPingRequest = async (s, i)=>{\n            const { id: r } = i;\n            try {\n                this.isValidPing({\n                    topic: s\n                }), await this.sendResult(r, s, !0), this.events.emit(j.ping, {\n                    id: r,\n                    topic: s\n                });\n            } catch (n) {\n                await this.sendError(r, s, n), this.logger.error(n);\n            }\n        }, this.onPairingPingResponse = (s, i)=>{\n            const { id: r } = i;\n            setTimeout(()=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResult)(i) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.engineEvent)(\"pairing_ping\", r), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcError)(i) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.engineEvent)(\"pairing_ping\", r), {\n                    error: i.error\n                });\n            }, 500);\n        }, this.onPairingDeleteRequest = async (s, i)=>{\n            const { id: r } = i;\n            try {\n                this.isValidDisconnect({\n                    topic: s\n                }), await this.deletePairing(s), this.events.emit(j.delete, {\n                    id: r,\n                    topic: s\n                });\n            } catch (n) {\n                await this.sendError(r, s, n), this.logger.error(n);\n            }\n        }, this.onUnknownRpcMethodRequest = async (s, i)=>{\n            const { id: r, method: n } = i;\n            try {\n                if (this.registeredMethods.includes(n)) return;\n                const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", n);\n                await this.sendError(r, s, a), this.logger.error(a);\n            } catch (a) {\n                await this.sendError(r, s, a), this.logger.error(a);\n            }\n        }, this.onUnknownRpcMethodResponse = (s)=>{\n            this.registeredMethods.includes(s) || this.logger.error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", s));\n        }, this.isValidPair = (s, i)=>{\n            var r;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidParams)(s)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `pair() params: ${s}`);\n                throw i.setError($.malformed_pairing_uri), new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidUrl)(s.uri)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `pair() uri: ${s.uri}`);\n                throw i.setError($.malformed_pairing_uri), new Error(a);\n            }\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.parseUri)(s?.uri);\n            if (!((r = n?.relay) != null && r.protocol)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", \"pair() uri#relay-protocol\");\n                throw i.setError($.malformed_pairing_uri), new Error(a);\n            }\n            if (!(n != null && n.symKey)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", \"pair() uri#symKey\");\n                throw i.setError($.malformed_pairing_uri), new Error(a);\n            }\n            if (n != null && n.expiryTimestamp && (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(n?.expiryTimestamp) < Date.now()) {\n                i.setError($.pairing_expired);\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"EXPIRED\", \"pair() URI has expired. Please try again with a new connection URI.\");\n                throw new Error(a);\n            }\n        }, this.isValidPing = async (s)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidParams)(s)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `ping() params: ${s}`);\n                throw new Error(r);\n            }\n            const { topic: i } = s;\n            await this.isValidPairingTopic(i);\n        }, this.isValidDisconnect = async (s)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidParams)(s)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `disconnect() params: ${s}`);\n                throw new Error(r);\n            }\n            const { topic: i } = s;\n            await this.isValidPairingTopic(i);\n        }, this.isValidPairingTopic = async (s)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isValidString)(s, !1)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"MISSING_OR_INVALID\", `pairing topic should be a string: ${s}`);\n                throw new Error(i);\n            }\n            if (!this.pairings.keys.includes(s)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `pairing topic doesn't exist: ${s}`);\n                throw new Error(i);\n            }\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isExpired)(this.pairings.get(s).expiry)) {\n                await this.deletePairing(s);\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"EXPIRED\", `pairing topic: ${s}`);\n                throw new Error(i);\n            }\n        }, this.core = e, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.pairings = new li(this.core, this.logger, this.name, this.storagePrefix);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n    registerRelayerEvents() {\n        this.core.relayer.on(v.message, async (e)=>{\n            const { topic: t, message: s, transportType: i } = e;\n            if (!this.pairings.keys.includes(t) || i === M.link_mode || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(s))) return;\n            const r = await this.core.crypto.decode(t, s);\n            try {\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcRequest)(r) ? (this.core.history.set(t, r), this.onRelayEventRequest({\n                    topic: t,\n                    payload: r\n                })) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcResponse)(r) && (await this.core.history.resolve(r), await this.onRelayEventResponse({\n                    topic: t,\n                    payload: r\n                }), this.core.history.delete(t, r.id));\n            } catch (n) {\n                this.logger.error(n);\n            }\n        });\n    }\n    registerExpirerEvents() {\n        this.core.expirer.on(x.expired, async (e)=>{\n            const { topic: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.parseExpirerTarget)(e.target);\n            t && this.pairings.keys.includes(t) && (await this.deletePairing(t, !0), this.events.emit(j.expire, {\n                topic: t\n            }));\n        });\n    }\n}\nclass di extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IJsonRpcHistory {\n    constructor(e, t){\n        super(e, t), this.core = e, this.logger = t, this.records = new Map, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = mt, this.version = bt, this.cached = [], this.initialized = !1, this.storagePrefix = A, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((s)=>this.records.set(s.id, s)), this.cached = [], this.registerEventListeners(), this.initialized = !0);\n        }, this.set = (s, i, r)=>{\n            if (this.isInitialized(), this.logger.debug(\"Setting JSON-RPC request history record\"), this.logger.trace({\n                type: \"method\",\n                method: \"set\",\n                topic: s,\n                request: i,\n                chainId: r\n            }), this.records.has(i.id)) return;\n            const n = {\n                id: i.id,\n                topic: s,\n                request: {\n                    method: i.method,\n                    params: i.params || null\n                },\n                chainId: r,\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.calcExpiry)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.THIRTY_DAYS)\n            };\n            this.records.set(n.id, n), this.persist(), this.events.emit(R.created, n);\n        }, this.resolve = async (s)=>{\n            if (this.isInitialized(), this.logger.debug(\"Updating JSON-RPC response history record\"), this.logger.trace({\n                type: \"method\",\n                method: \"update\",\n                response: s\n            }), !this.records.has(s.id)) return;\n            const i = await this.getRecord(s.id);\n            typeof i.response > \"u\" && (i.response = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.isJsonRpcError)(s) ? {\n                error: s.error\n            } : {\n                result: s.result\n            }, this.records.set(i.id, i), this.persist(), this.events.emit(R.updated, i));\n        }, this.get = async (s, i)=>(this.isInitialized(), this.logger.debug(\"Getting record\"), this.logger.trace({\n                type: \"method\",\n                method: \"get\",\n                topic: s,\n                id: i\n            }), await this.getRecord(i)), this.delete = (s, i)=>{\n            this.isInitialized(), this.logger.debug(\"Deleting record\"), this.logger.trace({\n                type: \"method\",\n                method: \"delete\",\n                id: i\n            }), this.values.forEach((r)=>{\n                if (r.topic === s) {\n                    if (typeof i < \"u\" && r.id !== i) return;\n                    this.records.delete(r.id), this.events.emit(R.deleted, r);\n                }\n            }), this.persist();\n        }, this.exists = async (s, i)=>(this.isInitialized(), this.records.has(i) ? (await this.getRecord(i)).topic === s : !1), this.on = (s, i)=>{\n            this.events.on(s, i);\n        }, this.once = (s, i)=>{\n            this.events.once(s, i);\n        }, this.off = (s, i)=>{\n            this.events.off(s, i);\n        }, this.removeListener = (s, i)=>{\n            this.events.removeListener(s, i);\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get size() {\n        return this.records.size;\n    }\n    get keys() {\n        return Array.from(this.records.keys());\n    }\n    get values() {\n        return Array.from(this.records.values());\n    }\n    get pending() {\n        const e = [];\n        return this.values.forEach((t)=>{\n            if (typeof t.response < \"u\") return;\n            const s = {\n                topic: t.topic,\n                request: (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_9__.formatJsonRpcRequest)(t.request.method, t.request.params, t.id),\n                chainId: t.chainId\n            };\n            return e.push(s);\n        }), e;\n    }\n    async setJsonRpcRecords(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getJsonRpcRecords() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    getRecord(e) {\n        this.isInitialized();\n        const t = this.records.get(e);\n        if (!t) {\n            const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw new Error(s);\n        }\n        return t;\n    }\n    async persist() {\n        await this.setJsonRpcRecords(this.values), this.events.emit(R.sync);\n    }\n    async restore() {\n        try {\n            const e = await this.getJsonRpcRecords();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.records.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                records: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e);\n        }\n    }\n    registerEventListeners() {\n        this.events.on(R.created, (e)=>{\n            const t = R.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            });\n        }), this.events.on(R.updated, (e)=>{\n            const t = R.updated;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            });\n        }), this.events.on(R.deleted, (e)=>{\n            const t = R.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                record: e\n            });\n        }), this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, ()=>{\n            this.cleanup();\n        });\n    }\n    cleanup() {\n        try {\n            this.isInitialized();\n            let e = !1;\n            this.records.forEach((t)=>{\n                (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(t.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${t.id}`), this.records.delete(t.id), this.events.emit(R.deleted, t, !1), e = !0);\n            }), e && this.persist();\n        } catch (e) {\n            this.logger.warn(e);\n        }\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass pi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IExpirer {\n    constructor(e, t){\n        super(e, t), this.core = e, this.logger = t, this.expirations = new Map, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.name = ft, this.version = vt, this.cached = [], this.initialized = !1, this.storagePrefix = A, this.init = async ()=>{\n            this.initialized || (this.logger.trace(\"Initialized\"), await this.restore(), this.cached.forEach((s)=>this.expirations.set(s.target, s)), this.cached = [], this.registerEventListeners(), this.initialized = !0);\n        }, this.has = (s)=>{\n            try {\n                const i = this.formatTarget(s);\n                return typeof this.getExpiration(i) < \"u\";\n            } catch  {\n                return !1;\n            }\n        }, this.set = (s, i)=>{\n            this.isInitialized();\n            const r = this.formatTarget(s), n = {\n                target: r,\n                expiry: i\n            };\n            this.expirations.set(r, n), this.checkExpiry(r, n), this.events.emit(x.created, {\n                target: r,\n                expiration: n\n            });\n        }, this.get = (s)=>{\n            this.isInitialized();\n            const i = this.formatTarget(s);\n            return this.getExpiration(i);\n        }, this.del = (s)=>{\n            if (this.isInitialized(), this.has(s)) {\n                const i = this.formatTarget(s), r = this.getExpiration(i);\n                this.expirations.delete(i), this.events.emit(x.deleted, {\n                    target: i,\n                    expiration: r\n                });\n            }\n        }, this.on = (s, i)=>{\n            this.events.on(s, i);\n        }, this.once = (s, i)=>{\n            this.events.once(s, i);\n        }, this.off = (s, i)=>{\n            this.events.off(s, i);\n        }, this.removeListener = (s, i)=>{\n            this.events.removeListener(s, i);\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name);\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    get storageKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//\" + this.name;\n    }\n    get length() {\n        return this.expirations.size;\n    }\n    get keys() {\n        return Array.from(this.expirations.keys());\n    }\n    get values() {\n        return Array.from(this.expirations.values());\n    }\n    formatTarget(e) {\n        if (typeof e == \"string\") return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatTopicTarget)(e);\n        if (typeof e == \"number\") return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatIdTarget)(e);\n        const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"UNKNOWN_TYPE\", `Target type: ${typeof e}`);\n        throw new Error(t);\n    }\n    async setExpirations(e) {\n        await this.core.storage.setItem(this.storageKey, e);\n    }\n    async getExpirations() {\n        return await this.core.storage.getItem(this.storageKey);\n    }\n    async persist() {\n        await this.setExpirations(this.values), this.events.emit(x.sync);\n    }\n    async restore() {\n        try {\n            const e = await this.getExpirations();\n            if (typeof e > \"u\" || !e.length) return;\n            if (this.expirations.size) {\n                const { message: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"RESTORE_WILL_OVERRIDE\", this.name);\n                throw this.logger.error(t), new Error(t);\n            }\n            this.cached = e, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({\n                type: \"method\",\n                method: \"restore\",\n                expirations: this.values\n            });\n        } catch (e) {\n            this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e);\n        }\n    }\n    getExpiration(e) {\n        const t = this.expirations.get(e);\n        if (!t) {\n            const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NO_MATCHING_KEY\", `${this.name}: ${e}`);\n            throw this.logger.warn(s), new Error(s);\n        }\n        return t;\n    }\n    checkExpiry(e, t) {\n        const { expiry: s } = t;\n        (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(s) - Date.now() <= 0 && this.expire(e, t);\n    }\n    expire(e, t) {\n        this.expirations.delete(e), this.events.emit(x.expired, {\n            target: e,\n            expiration: t\n        });\n    }\n    checkExpirations() {\n        this.core.relayer.connected && this.expirations.forEach((e, t)=>this.checkExpiry(t, e));\n    }\n    registerEventListeners() {\n        this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, ()=>this.checkExpirations()), this.events.on(x.created, (e)=>{\n            const t = x.created;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        }), this.events.on(x.expired, (e)=>{\n            const t = x.expired;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        }), this.events.on(x.deleted, (e)=>{\n            const t = x.deleted;\n            this.logger.info(`Emitting ${t}`), this.logger.debug({\n                type: \"event\",\n                event: t,\n                data: e\n            }), this.persist();\n        });\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(e);\n        }\n    }\n}\nclass gi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IVerify {\n    constructor(e, t, s){\n        super(e, t, s), this.core = e, this.logger = t, this.store = s, this.name = _t, this.verifyUrlV3 = wt, this.storagePrefix = A, this.version = De, this.init = async ()=>{\n            var i;\n            this.isDevEnv || (this.publicKey = await this.store.getItem(this.storeKey), this.publicKey && (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)((i = this.publicKey) == null ? void 0 : i.expiresAt) < Date.now() && (this.logger.debug(\"verify v2 public key expired\"), await this.removePublicKey()));\n        }, this.register = async (i)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isBrowser)() || this.isDevEnv) return;\n            const r = window.location.origin, { id: n, decryptedId: a } = i, c = `${this.verifyUrlV3}/attestation?projectId=${this.core.projectId}&origin=${r}&id=${n}&decryptedId=${a}`;\n            try {\n                const h = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_12__.getDocument)(), u = this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND * 5), d = await new Promise((y, m)=>{\n                    const l = ()=>{\n                        window.removeEventListener(\"message\", w), h.body.removeChild(g), m(\"attestation aborted\");\n                    };\n                    this.abortController.signal.addEventListener(\"abort\", l);\n                    const g = h.createElement(\"iframe\");\n                    g.src = c, g.style.display = \"none\", g.addEventListener(\"error\", l, {\n                        signal: this.abortController.signal\n                    });\n                    const w = (b)=>{\n                        if (b.data && typeof b.data == \"string\") try {\n                            const D = JSON.parse(b.data);\n                            if (D.type === \"verify_attestation\") {\n                                if ((0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.decodeJWT)(D.attestation).payload.id !== n) return;\n                                clearInterval(u), h.body.removeChild(g), this.abortController.signal.removeEventListener(\"abort\", l), window.removeEventListener(\"message\", w), y(D.attestation === null ? \"\" : D.attestation);\n                            }\n                        } catch (D) {\n                            this.logger.warn(D);\n                        }\n                    };\n                    h.body.appendChild(g), window.addEventListener(\"message\", w, {\n                        signal: this.abortController.signal\n                    });\n                });\n                return this.logger.debug(\"jwt attestation\", d), d;\n            } catch (h) {\n                this.logger.warn(h);\n            }\n            return \"\";\n        }, this.resolve = async (i)=>{\n            if (this.isDevEnv) return \"\";\n            const { attestationId: r, hash: n, encryptedId: a } = i;\n            if (r === \"\") {\n                this.logger.debug(\"resolve: attestationId is empty, skipping\");\n                return;\n            }\n            if (r) {\n                if ((0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_6__.decodeJWT)(r).payload.id !== a) return;\n                const h = await this.isValidJwtAttestation(r);\n                if (h) {\n                    if (!h.isVerified) {\n                        this.logger.warn(\"resolve: jwt attestation: origin url not verified\");\n                        return;\n                    }\n                    return h;\n                }\n            }\n            if (!n) return;\n            const c = this.getVerifyUrl(i?.verifyUrl);\n            return this.fetchAttestation(n, c);\n        }, this.fetchAttestation = async (i, r)=>{\n            this.logger.debug(`resolving attestation: ${i} from url: ${r}`);\n            const n = this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.ONE_SECOND * 5), a = await fetch(`${r}/attestation/${i}?v2Supported=true`, {\n                signal: this.abortController.signal\n            });\n            return clearTimeout(n), a.status === 200 ? await a.json() : void 0;\n        }, this.getVerifyUrl = (i)=>{\n            let r = i || X;\n            return It.includes(r) || (this.logger.info(`verify url: ${r}, not included in trusted list, assigning default: ${X}`), r = X), r;\n        }, this.fetchPublicKey = async ()=>{\n            try {\n                this.logger.debug(`fetching public key from: ${this.verifyUrlV3}`);\n                const i = this.startAbortTimer(_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.FIVE_SECONDS), r = await fetch(`${this.verifyUrlV3}/public-key`, {\n                    signal: this.abortController.signal\n                });\n                return clearTimeout(i), await r.json();\n            } catch (i) {\n                this.logger.warn(i);\n            }\n        }, this.persistPublicKey = async (i)=>{\n            this.logger.debug(\"persisting public key to local storage\", i), await this.store.setItem(this.storeKey, i), this.publicKey = i;\n        }, this.removePublicKey = async ()=>{\n            this.logger.debug(\"removing verify v2 public key from storage\"), await this.store.removeItem(this.storeKey), this.publicKey = void 0;\n        }, this.isValidJwtAttestation = async (i)=>{\n            const r = await this.getPublicKey();\n            try {\n                if (r) return this.validateAttestation(i, r);\n            } catch (a) {\n                this.logger.error(a), this.logger.warn(\"error validating attestation\");\n            }\n            const n = await this.fetchAndPersistPublicKey();\n            try {\n                if (n) return this.validateAttestation(i, n);\n            } catch (a) {\n                this.logger.error(a), this.logger.warn(\"error validating attestation\");\n            }\n        }, this.getPublicKey = async ()=>this.publicKey ? this.publicKey : await this.fetchAndPersistPublicKey(), this.fetchAndPersistPublicKey = async ()=>{\n            if (this.fetchPromise) return await this.fetchPromise, this.publicKey;\n            this.fetchPromise = new Promise(async (r)=>{\n                const n = await this.fetchPublicKey();\n                n && (await this.persistPublicKey(n), r(n));\n            });\n            const i = await this.fetchPromise;\n            return this.fetchPromise = void 0, i;\n        }, this.validateAttestation = (i, r)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.verifyP256Jwt)(i, r.publicKey), a = {\n                hasExpired: (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(n.exp) < Date.now(),\n                payload: n\n            };\n            if (a.hasExpired) throw this.logger.warn(\"resolve: jwt attestation expired\"), new Error(\"JWT attestation expired\");\n            return {\n                origin: a.payload.origin,\n                isScam: a.payload.isScam,\n                isVerified: a.payload.isVerified\n            };\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.name), this.abortController = new AbortController, this.isDevEnv = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isTestRun)(), this.init();\n    }\n    get storeKey() {\n        return this.storagePrefix + this.version + this.core.customStoragePrefix + \"//verify:public:key\";\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    startAbortTimer(e) {\n        return this.abortController = new AbortController, setTimeout(()=>this.abortController.abort(), (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.toMiliseconds)(e));\n    }\n}\nclass yi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IEchoClient {\n    constructor(e, t){\n        super(e, t), this.projectId = e, this.logger = t, this.context = Tt, this.registerDeviceToken = async (s)=>{\n            const { clientId: i, token: r, notificationType: n, enableEncrypted: a = !1 } = s, c = `${Ct}/${this.projectId}/clients`;\n            await fetch(c, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    client_id: i,\n                    type: n,\n                    token: r,\n                    always_raw: a\n                })\n            });\n        }, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.context);\n    }\n}\nvar wn = Object.defineProperty, Di = Object.getOwnPropertySymbols, In = Object.prototype.hasOwnProperty, Tn = Object.prototype.propertyIsEnumerable, mi = (o, e, t)=>e in o ? wn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, Q = (o, e)=>{\n    for(var t in e || (e = {}))In.call(e, t) && mi(o, t, e[t]);\n    if (Di) for (var t of Di(e))Tn.call(e, t) && mi(o, t, e[t]);\n    return o;\n};\nclass bi extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.IEventClient {\n    constructor(e, t, s = !0){\n        super(e, t, s), this.core = e, this.logger = t, this.context = St, this.storagePrefix = A, this.storageVersion = Pt, this.events = new Map, this.shouldPersist = !1, this.init = async ()=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.isTestRun)()) try {\n                const i = {\n                    eventId: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.uuidv4)(),\n                    timestamp: Date.now(),\n                    domain: this.getAppDomain(),\n                    props: {\n                        event: \"INIT\",\n                        type: \"\",\n                        properties: {\n                            client_id: await this.core.crypto.getClientId(),\n                            user_agent: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.formatUA)(this.core.relayer.protocol, this.core.relayer.version, re)\n                        }\n                    }\n                };\n                await this.sendEvent([\n                    i\n                ]);\n            } catch (i) {\n                this.logger.warn(i);\n            }\n        }, this.createEvent = (i)=>{\n            const { event: r = \"ERROR\", type: n = \"\", properties: { topic: a, trace: c } } = i, h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.uuidv4)(), u = this.core.projectId || \"\", d = Date.now(), y = Q({\n                eventId: h,\n                timestamp: d,\n                props: {\n                    event: r,\n                    type: n,\n                    properties: {\n                        topic: a,\n                        trace: c\n                    }\n                },\n                bundleId: u,\n                domain: this.getAppDomain()\n            }, this.setMethods(h));\n            return this.telemetryEnabled && (this.events.set(h, y), this.shouldPersist = !0), y;\n        }, this.getEvent = (i)=>{\n            const { eventId: r, topic: n } = i;\n            if (r) return this.events.get(r);\n            const a = Array.from(this.events.values()).find((c)=>c.props.properties.topic === n);\n            if (a) return Q(Q({}, a), this.setMethods(a.eventId));\n        }, this.deleteEvent = (i)=>{\n            const { eventId: r } = i;\n            this.events.delete(r), this.shouldPersist = !0;\n        }, this.setEventListeners = ()=>{\n            this.core.heartbeat.on(_walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HEARTBEAT_EVENTS.pulse, async ()=>{\n                this.shouldPersist && await this.persist(), this.events.forEach((i)=>{\n                    (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.fromMiliseconds)(Date.now()) - (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_4__.fromMiliseconds)(i.timestamp) > Rt && (this.events.delete(i.eventId), this.shouldPersist = !0);\n                });\n            });\n        }, this.setMethods = (i)=>({\n                addTrace: (r)=>this.addTrace(i, r),\n                setError: (r)=>this.setError(i, r)\n            }), this.addTrace = (i, r)=>{\n            const n = this.events.get(i);\n            n && (n.props.properties.trace.push(r), this.events.set(i, n), this.shouldPersist = !0);\n        }, this.setError = (i, r)=>{\n            const n = this.events.get(i);\n            n && (n.props.type = r, n.timestamp = Date.now(), this.events.set(i, n), this.shouldPersist = !0);\n        }, this.persist = async ()=>{\n            await this.core.storage.setItem(this.storageKey, Array.from(this.events.values())), this.shouldPersist = !1;\n        }, this.restore = async ()=>{\n            try {\n                const i = await this.core.storage.getItem(this.storageKey) || [];\n                if (!i.length) return;\n                i.forEach((r)=>{\n                    this.events.set(r.eventId, Q(Q({}, r), this.setMethods(r.eventId)));\n                });\n            } catch (i) {\n                this.logger.warn(i);\n            }\n        }, this.submit = async ()=>{\n            if (!this.telemetryEnabled || this.events.size === 0) return;\n            const i = [];\n            for (const [r, n] of this.events)n.props.type && i.push(n);\n            if (i.length !== 0) try {\n                if ((await this.sendEvent(i)).ok) for (const r of i)this.events.delete(r.eventId), this.shouldPersist = !0;\n            } catch (r) {\n                this.logger.warn(r);\n            }\n        }, this.sendEvent = async (i)=>{\n            const r = this.getAppDomain() ? \"\" : \"&sp=desktop\";\n            return await fetch(`${xt}?projectId=${this.core.projectId}&st=events_sdk&sv=js-${re}${r}`, {\n                method: \"POST\",\n                body: JSON.stringify(i)\n            });\n        }, this.getAppDomain = ()=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_13__.getAppMetadata)().url, this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(t, this.context), this.telemetryEnabled = s, s ? this.restore().then(async ()=>{\n            await this.submit(), this.setEventListeners();\n        }) : this.persist();\n    }\n    get storageKey() {\n        return this.storagePrefix + this.storageVersion + this.core.customStoragePrefix + \"//\" + this.context;\n    }\n}\nvar Cn = Object.defineProperty, fi = Object.getOwnPropertySymbols, Pn = Object.prototype.hasOwnProperty, Sn = Object.prototype.propertyIsEnumerable, vi = (o, e, t)=>e in o ? Cn(o, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : o[e] = t, _i = (o, e)=>{\n    for(var t in e || (e = {}))Pn.call(e, t) && vi(o, t, e[t]);\n    if (fi) for (var t of fi(e))Sn.call(e, t) && vi(o, t, e[t]);\n    return o;\n};\nclass oe extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_14__.ICore {\n    constructor(e){\n        var t;\n        super(e), this.protocol = ye, this.version = De, this.name = J, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.initialized = !1, this.on = (n, a)=>this.events.on(n, a), this.once = (n, a)=>this.events.once(n, a), this.off = (n, a)=>this.events.off(n, a), this.removeListener = (n, a)=>this.events.removeListener(n, a), this.dispatchEnvelope = ({ topic: n, message: a, sessionExists: c })=>{\n            if (!n || !a) return;\n            const h = {\n                topic: n,\n                message: a,\n                publishedAt: Date.now(),\n                transportType: M.link_mode\n            };\n            this.relayer.onLinkMessageEvent(h, {\n                sessionExists: c\n            });\n        }, this.projectId = e?.projectId, this.relayUrl = e?.relayUrl || fe, this.customStoragePrefix = e != null && e.customStoragePrefix ? `:${e.customStoragePrefix}` : \"\";\n        const s = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getDefaultLoggerOptions)({\n            level: typeof e?.logger == \"string\" && e.logger ? e.logger : Xe.logger,\n            name: J\n        }), { logger: i, chunkLoggerController: r } = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generatePlatformLogger)({\n            opts: s,\n            maxSizeInBytes: e?.maxLogBlobSizeInBytes,\n            loggerOverride: e?.logger\n        });\n        this.logChunkController = r, (t = this.logChunkController) != null && t.downloadLogsBlobInBrowser && (window.downloadLogsBlobInBrowser = async ()=>{\n            var n, a;\n            (n = this.logChunkController) != null && n.downloadLogsBlobInBrowser && ((a = this.logChunkController) == null || a.downloadLogsBlobInBrowser({\n                clientId: await this.crypto.getClientId()\n            }));\n        }), this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.generateChildLogger)(i, this.name), this.heartbeat = new _walletconnect_heartbeat__WEBPACK_IMPORTED_MODULE_1__.HeartBeat, this.crypto = new Yt(this, this.logger, e?.keychain), this.history = new di(this, this.logger), this.expirer = new pi(this, this.logger), this.storage = e != null && e.storage ? e.storage : new _walletconnect_keyvaluestorage__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_i(_i({}, We), e?.storageOptions)), this.relayer = new oi({\n            core: this,\n            logger: this.logger,\n            relayUrl: this.relayUrl,\n            projectId: this.projectId\n        }), this.pairing = new ui(this, this.logger), this.verify = new gi(this, this.logger, this.storage), this.echoClient = new yi(this.projectId || \"\", this.logger), this.linkModeSupportedApps = [], this.eventClient = new bi(this, this.logger, e?.telemetryEnabled);\n    }\n    static async init(e) {\n        const t = new oe(e);\n        await t.initialize();\n        const s = await t.crypto.getClientId();\n        return await t.storage.setItem(ut, s), t;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_3__.getLoggerContext)(this.logger);\n    }\n    async start() {\n        this.initialized || await this.initialize();\n    }\n    async getLogsBlob() {\n        var e;\n        return (e = this.logChunkController) == null ? void 0 : e.logsToBlob({\n            clientId: await this.crypto.getClientId()\n        });\n    }\n    async addLinkModeSupportedApp(e) {\n        this.linkModeSupportedApps.includes(e) || (this.linkModeSupportedApps.push(e), await this.storage.setItem(ve, this.linkModeSupportedApps));\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\");\n        try {\n            await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.linkModeSupportedApps = await this.storage.getItem(ve) || [], this.initialized = !0, this.logger.info(\"Core Initialization Success\");\n        } catch (e) {\n            throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e), this.logger.error(e.message), e;\n        }\n    }\n}\nconst Rn = oe;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/core/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/dist/cjs/crypto.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/crypto.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;\nfunction getBrowerCrypto() {\n    return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};\n}\nexports.getBrowerCrypto = getBrowerCrypto;\nfunction getSubtleCrypto() {\n    const browserCrypto = getBrowerCrypto();\n    return browserCrypto.subtle || browserCrypto.webkitSubtle;\n}\nexports.getSubtleCrypto = getSubtleCrypto;\nfunction isBrowserCryptoAvailable() {\n    return !!getBrowerCrypto() && !!getSubtleCrypto();\n}\nexports.isBrowserCryptoAvailable = isBrowserCryptoAvailable; //# sourceMappingURL=crypto.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvY3J5cHRvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBR0EsdUJBQXVCLEdBQUdBLHVCQUF1QixHQUFHLEtBQUs7QUFDNUYsU0FBU0k7SUFDTCxPQUFPLENBQUNDLFdBQVcsUUFBUUEsV0FBVyxLQUFLLElBQUksS0FBSyxJQUFJQSxPQUFPQyxNQUFNLEtBQU1ELENBQUFBLFdBQVcsUUFBUUEsV0FBVyxLQUFLLElBQUksS0FBSyxJQUFJQSxPQUFPRSxRQUFRLEtBQUssQ0FBQztBQUNwSjtBQUNBUCx1QkFBdUIsR0FBR0k7QUFDMUIsU0FBU0Q7SUFDTCxNQUFNSyxnQkFBZ0JKO0lBQ3RCLE9BQU9JLGNBQWNDLE1BQU0sSUFBSUQsY0FBY0UsWUFBWTtBQUM3RDtBQUNBVix1QkFBdUIsR0FBR0c7QUFDMUIsU0FBU0Q7SUFDTCxPQUFPLENBQUMsQ0FBQ0UscUJBQXFCLENBQUMsQ0FBQ0Q7QUFDcEM7QUFDQUgsZ0NBQWdDLEdBQUdFLDBCQUNuQyxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvY3J5cHRvLmpzPzZkZDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzQnJvd3NlckNyeXB0b0F2YWlsYWJsZSA9IGV4cG9ydHMuZ2V0U3VidGxlQ3J5cHRvID0gZXhwb3J0cy5nZXRCcm93ZXJDcnlwdG8gPSB2b2lkIDA7XG5mdW5jdGlvbiBnZXRCcm93ZXJDcnlwdG8oKSB7XG4gICAgcmV0dXJuIChnbG9iYWwgPT09IG51bGwgfHwgZ2xvYmFsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBnbG9iYWwuY3J5cHRvKSB8fCAoZ2xvYmFsID09PSBudWxsIHx8IGdsb2JhbCA9PT0gdm9pZCAwID8gdm9pZCAwIDogZ2xvYmFsLm1zQ3J5cHRvKSB8fCB7fTtcbn1cbmV4cG9ydHMuZ2V0QnJvd2VyQ3J5cHRvID0gZ2V0QnJvd2VyQ3J5cHRvO1xuZnVuY3Rpb24gZ2V0U3VidGxlQ3J5cHRvKCkge1xuICAgIGNvbnN0IGJyb3dzZXJDcnlwdG8gPSBnZXRCcm93ZXJDcnlwdG8oKTtcbiAgICByZXR1cm4gYnJvd3NlckNyeXB0by5zdWJ0bGUgfHwgYnJvd3NlckNyeXB0by53ZWJraXRTdWJ0bGU7XG59XG5leHBvcnRzLmdldFN1YnRsZUNyeXB0byA9IGdldFN1YnRsZUNyeXB0bztcbmZ1bmN0aW9uIGlzQnJvd3NlckNyeXB0b0F2YWlsYWJsZSgpIHtcbiAgICByZXR1cm4gISFnZXRCcm93ZXJDcnlwdG8oKSAmJiAhIWdldFN1YnRsZUNyeXB0bygpO1xufVxuZXhwb3J0cy5pc0Jyb3dzZXJDcnlwdG9BdmFpbGFibGUgPSBpc0Jyb3dzZXJDcnlwdG9BdmFpbGFibGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcnlwdG8uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaXNCcm93c2VyQ3J5cHRvQXZhaWxhYmxlIiwiZ2V0U3VidGxlQ3J5cHRvIiwiZ2V0QnJvd2VyQ3J5cHRvIiwiZ2xvYmFsIiwiY3J5cHRvIiwibXNDcnlwdG8iLCJicm93c2VyQ3J5cHRvIiwic3VidGxlIiwid2Via2l0U3VidGxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/dist/cjs/crypto.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/dist/cjs/env.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/env.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isBrowser = exports.isNode = exports.isReactNative = void 0;\nfunction isReactNative() {\n    return typeof document === \"undefined\" && typeof navigator !== \"undefined\" && navigator.product === \"ReactNative\";\n}\nexports.isReactNative = isReactNative;\nfunction isNode() {\n    return typeof process !== \"undefined\" && typeof process.versions !== \"undefined\" && typeof process.versions.node !== \"undefined\";\n}\nexports.isNode = isNode;\nfunction isBrowser() {\n    return !isReactNative() && !isNode();\n}\nexports.isBrowser = isBrowser; //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvZW52LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQkFBaUIsR0FBR0EsY0FBYyxHQUFHQSxxQkFBcUIsR0FBRyxLQUFLO0FBQ2xFLFNBQVNJO0lBQ0wsT0FBUSxPQUFPQyxhQUFhLGVBQ3hCLE9BQU9DLGNBQWMsZUFDckJBLFVBQVVDLE9BQU8sS0FBSztBQUM5QjtBQUNBUCxxQkFBcUIsR0FBR0k7QUFDeEIsU0FBU0Q7SUFDTCxPQUFRLE9BQU9LLFlBQVksZUFDdkIsT0FBT0EsUUFBUUMsUUFBUSxLQUFLLGVBQzVCLE9BQU9ELFFBQVFDLFFBQVEsQ0FBQ0MsSUFBSSxLQUFLO0FBQ3pDO0FBQ0FWLGNBQWMsR0FBR0c7QUFDakIsU0FBU0Q7SUFDTCxPQUFPLENBQUNFLG1CQUFtQixDQUFDRDtBQUNoQztBQUNBSCxpQkFBaUIsR0FBR0UsV0FDcEIsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9rZW5mdW5kLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2Vudi5qcz80MzhkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0Jyb3dzZXIgPSBleHBvcnRzLmlzTm9kZSA9IGV4cG9ydHMuaXNSZWFjdE5hdGl2ZSA9IHZvaWQgMDtcbmZ1bmN0aW9uIGlzUmVhY3ROYXRpdmUoKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIgJiZcbiAgICAgICAgdHlwZW9mIG5hdmlnYXRvciAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgICBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gXCJSZWFjdE5hdGl2ZVwiKTtcbn1cbmV4cG9ydHMuaXNSZWFjdE5hdGl2ZSA9IGlzUmVhY3ROYXRpdmU7XG5mdW5jdGlvbiBpc05vZGUoKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgICB0eXBlb2YgcHJvY2Vzcy52ZXJzaW9ucyAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuICAgICAgICB0eXBlb2YgcHJvY2Vzcy52ZXJzaW9ucy5ub2RlICE9PSBcInVuZGVmaW5lZFwiKTtcbn1cbmV4cG9ydHMuaXNOb2RlID0gaXNOb2RlO1xuZnVuY3Rpb24gaXNCcm93c2VyKCkge1xuICAgIHJldHVybiAhaXNSZWFjdE5hdGl2ZSgpICYmICFpc05vZGUoKTtcbn1cbmV4cG9ydHMuaXNCcm93c2VyID0gaXNCcm93c2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW52LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImlzQnJvd3NlciIsImlzTm9kZSIsImlzUmVhY3ROYXRpdmUiLCJkb2N1bWVudCIsIm5hdmlnYXRvciIsInByb2R1Y3QiLCJwcm9jZXNzIiwidmVyc2lvbnMiLCJub2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/dist/cjs/env.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/dist/cjs/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/dist/cjs/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./crypto */ \"(ssr)/./node_modules/@walletconnect/environment/dist/cjs/crypto.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./env */ \"(ssr)/./node_modules/@walletconnect/environment/dist/cjs/env.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvZGlzdC9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsOEZBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsb0ZBQVUsR0FBR0g7QUFDMUNFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsOEVBQU8sR0FBR0gsVUFDdkMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9rZW5mdW5kLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50L2Rpc3QvY2pzL2luZGV4LmpzPzVjMjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY3J5cHRvXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2VudlwiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nfunction __createBinding(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}\nfunction __exportStar(m, exports) {\n    for(var p in m)if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\nfunction __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\n;\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: n === \"return\"\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }\n    result.default = mod;\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvbm9kZV9tb2R1bGVzL3RzbGliL3RzbGliLmVzNi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7OzhFQWE4RSxHQUM5RSwyQkFBMkIsR0FFM0IsSUFBSUEsZ0JBQWdCLFNBQVNDLENBQUMsRUFBRUMsQ0FBQztJQUM3QkYsZ0JBQWdCRyxPQUFPQyxjQUFjLElBQ2hDO1FBQUVDLFdBQVcsRUFBRTtJQUFDLGNBQWFDLFNBQVMsU0FBVUwsQ0FBQyxFQUFFQyxDQUFDO1FBQUlELEVBQUVJLFNBQVMsR0FBR0g7SUFBRyxLQUMxRSxTQUFVRCxDQUFDLEVBQUVDLENBQUM7UUFBSSxJQUFLLElBQUlLLEtBQUtMLEVBQUcsSUFBSUEsRUFBRU0sY0FBYyxDQUFDRCxJQUFJTixDQUFDLENBQUNNLEVBQUUsR0FBR0wsQ0FBQyxDQUFDSyxFQUFFO0lBQUU7SUFDN0UsT0FBT1AsY0FBY0MsR0FBR0M7QUFDNUI7QUFFTyxTQUFTTyxVQUFVUixDQUFDLEVBQUVDLENBQUM7SUFDMUJGLGNBQWNDLEdBQUdDO0lBQ2pCLFNBQVNRO1FBQU8sSUFBSSxDQUFDQyxXQUFXLEdBQUdWO0lBQUc7SUFDdENBLEVBQUVXLFNBQVMsR0FBR1YsTUFBTSxPQUFPQyxPQUFPVSxNQUFNLENBQUNYLEtBQU1RLENBQUFBLEdBQUdFLFNBQVMsR0FBR1YsRUFBRVUsU0FBUyxFQUFFLElBQUlGLElBQUc7QUFDdEY7QUFFTyxJQUFJSSxXQUFXO0lBQ2xCQSxXQUFXWCxPQUFPWSxNQUFNLElBQUksU0FBU0QsU0FBU0UsQ0FBQztRQUMzQyxJQUFLLElBQUlDLEdBQUdDLElBQUksR0FBR0MsSUFBSUMsVUFBVUMsTUFBTSxFQUFFSCxJQUFJQyxHQUFHRCxJQUFLO1lBQ2pERCxJQUFJRyxTQUFTLENBQUNGLEVBQUU7WUFDaEIsSUFBSyxJQUFJWCxLQUFLVSxFQUFHLElBQUlkLE9BQU9TLFNBQVMsQ0FBQ0osY0FBYyxDQUFDYyxJQUFJLENBQUNMLEdBQUdWLElBQUlTLENBQUMsQ0FBQ1QsRUFBRSxHQUFHVSxDQUFDLENBQUNWLEVBQUU7UUFDaEY7UUFDQSxPQUFPUztJQUNYO0lBQ0EsT0FBT0YsU0FBU1MsS0FBSyxDQUFDLElBQUksRUFBRUg7QUFDaEMsRUFBQztBQUVNLFNBQVNJLE9BQU9QLENBQUMsRUFBRVEsQ0FBQztJQUN2QixJQUFJVCxJQUFJLENBQUM7SUFDVCxJQUFLLElBQUlULEtBQUtVLEVBQUcsSUFBSWQsT0FBT1MsU0FBUyxDQUFDSixjQUFjLENBQUNjLElBQUksQ0FBQ0wsR0FBR1YsTUFBTWtCLEVBQUVDLE9BQU8sQ0FBQ25CLEtBQUssR0FDOUVTLENBQUMsQ0FBQ1QsRUFBRSxHQUFHVSxDQUFDLENBQUNWLEVBQUU7SUFDZixJQUFJVSxLQUFLLFFBQVEsT0FBT2QsT0FBT3dCLHFCQUFxQixLQUFLLFlBQ3JELElBQUssSUFBSVQsSUFBSSxHQUFHWCxJQUFJSixPQUFPd0IscUJBQXFCLENBQUNWLElBQUlDLElBQUlYLEVBQUVjLE1BQU0sRUFBRUgsSUFBSztRQUNwRSxJQUFJTyxFQUFFQyxPQUFPLENBQUNuQixDQUFDLENBQUNXLEVBQUUsSUFBSSxLQUFLZixPQUFPUyxTQUFTLENBQUNnQixvQkFBb0IsQ0FBQ04sSUFBSSxDQUFDTCxHQUFHVixDQUFDLENBQUNXLEVBQUUsR0FDekVGLENBQUMsQ0FBQ1QsQ0FBQyxDQUFDVyxFQUFFLENBQUMsR0FBR0QsQ0FBQyxDQUFDVixDQUFDLENBQUNXLEVBQUUsQ0FBQztJQUN6QjtJQUNKLE9BQU9GO0FBQ1g7QUFFTyxTQUFTYSxXQUFXQyxVQUFVLEVBQUVDLE1BQU0sRUFBRUMsR0FBRyxFQUFFQyxJQUFJO0lBQ3BELElBQUlDLElBQUlkLFVBQVVDLE1BQU0sRUFBRWMsSUFBSUQsSUFBSSxJQUFJSCxTQUFTRSxTQUFTLE9BQU9BLE9BQU85QixPQUFPaUMsd0JBQXdCLENBQUNMLFFBQVFDLE9BQU9DLE1BQU1oQztJQUMzSCxJQUFJLE9BQU9vQyxZQUFZLFlBQVksT0FBT0EsUUFBUUMsUUFBUSxLQUFLLFlBQVlILElBQUlFLFFBQVFDLFFBQVEsQ0FBQ1IsWUFBWUMsUUFBUUMsS0FBS0M7U0FDcEgsSUFBSyxJQUFJZixJQUFJWSxXQUFXVCxNQUFNLEdBQUcsR0FBR0gsS0FBSyxHQUFHQSxJQUFLLElBQUlqQixJQUFJNkIsVUFBVSxDQUFDWixFQUFFLEVBQUVpQixJQUFJLENBQUNELElBQUksSUFBSWpDLEVBQUVrQyxLQUFLRCxJQUFJLElBQUlqQyxFQUFFOEIsUUFBUUMsS0FBS0csS0FBS2xDLEVBQUU4QixRQUFRQyxJQUFHLEtBQU1HO0lBQ2hKLE9BQU9ELElBQUksS0FBS0MsS0FBS2hDLE9BQU9vQyxjQUFjLENBQUNSLFFBQVFDLEtBQUtHLElBQUlBO0FBQ2hFO0FBRU8sU0FBU0ssUUFBUUMsVUFBVSxFQUFFQyxTQUFTO0lBQ3pDLE9BQU8sU0FBVVgsTUFBTSxFQUFFQyxHQUFHO1FBQUlVLFVBQVVYLFFBQVFDLEtBQUtTO0lBQWE7QUFDeEU7QUFFTyxTQUFTRSxXQUFXQyxXQUFXLEVBQUVDLGFBQWE7SUFDakQsSUFBSSxPQUFPUixZQUFZLFlBQVksT0FBT0EsUUFBUVMsUUFBUSxLQUFLLFlBQVksT0FBT1QsUUFBUVMsUUFBUSxDQUFDRixhQUFhQztBQUNwSDtBQUVPLFNBQVNFLFVBQVVDLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxDQUFDLEVBQUVDLFNBQVM7SUFDdkQsU0FBU0MsTUFBTUMsS0FBSztRQUFJLE9BQU9BLGlCQUFpQkgsSUFBSUcsUUFBUSxJQUFJSCxFQUFFLFNBQVVJLE9BQU87WUFBSUEsUUFBUUQ7UUFBUTtJQUFJO0lBQzNHLE9BQU8sSUFBS0gsQ0FBQUEsS0FBTUEsQ0FBQUEsSUFBSUssT0FBTSxDQUFDLEVBQUcsU0FBVUQsT0FBTyxFQUFFRSxNQUFNO1FBQ3JELFNBQVNDLFVBQVVKLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxVQUFVUSxJQUFJLENBQUNOO1lBQVMsRUFBRSxPQUFPNUIsR0FBRztnQkFBRStCLE9BQU8vQjtZQUFJO1FBQUU7UUFDMUYsU0FBU21DLFNBQVNQLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxTQUFTLENBQUMsUUFBUSxDQUFDRTtZQUFTLEVBQUUsT0FBTzVCLEdBQUc7Z0JBQUUrQixPQUFPL0I7WUFBSTtRQUFFO1FBQzdGLFNBQVNpQyxLQUFLRyxNQUFNO1lBQUlBLE9BQU9DLElBQUksR0FBR1IsUUFBUU8sT0FBT1IsS0FBSyxJQUFJRCxNQUFNUyxPQUFPUixLQUFLLEVBQUVVLElBQUksQ0FBQ04sV0FBV0c7UUFBVztRQUM3R0YsS0FBSyxDQUFDUCxZQUFZQSxVQUFVNUIsS0FBSyxDQUFDeUIsU0FBU0MsY0FBYyxFQUFFLEdBQUdVLElBQUk7SUFDdEU7QUFDSjtBQUVPLFNBQVNLLFlBQVloQixPQUFPLEVBQUVpQixJQUFJO0lBQ3JDLElBQUlDLElBQUk7UUFBRUMsT0FBTztRQUFHQyxNQUFNO1lBQWEsSUFBSXBELENBQUMsQ0FBQyxFQUFFLEdBQUcsR0FBRyxNQUFNQSxDQUFDLENBQUMsRUFBRTtZQUFFLE9BQU9BLENBQUMsQ0FBQyxFQUFFO1FBQUU7UUFBR3FELE1BQU0sRUFBRTtRQUFFQyxLQUFLLEVBQUU7SUFBQyxHQUFHQyxHQUFHQyxHQUFHeEQsR0FBR3lEO0lBQy9HLE9BQU9BLElBQUk7UUFBRWQsTUFBTWUsS0FBSztRQUFJLFNBQVNBLEtBQUs7UUFBSSxVQUFVQSxLQUFLO0lBQUcsR0FBRyxPQUFPQyxXQUFXLGNBQWVGLENBQUFBLENBQUMsQ0FBQ0UsT0FBT0MsUUFBUSxDQUFDLEdBQUc7UUFBYSxPQUFPLElBQUk7SUFBRSxJQUFJSDtJQUN2SixTQUFTQyxLQUFLdkQsQ0FBQztRQUFJLE9BQU8sU0FBVTBELENBQUM7WUFBSSxPQUFPbkIsS0FBSztnQkFBQ3ZDO2dCQUFHMEQ7YUFBRTtRQUFHO0lBQUc7SUFDakUsU0FBU25CLEtBQUtvQixFQUFFO1FBQ1osSUFBSVAsR0FBRyxNQUFNLElBQUlRLFVBQVU7UUFDM0IsTUFBT2IsRUFBRyxJQUFJO1lBQ1YsSUFBSUssSUFBSSxHQUFHQyxLQUFNeEQsQ0FBQUEsSUFBSThELEVBQUUsQ0FBQyxFQUFFLEdBQUcsSUFBSU4sQ0FBQyxDQUFDLFNBQVMsR0FBR00sRUFBRSxDQUFDLEVBQUUsR0FBR04sQ0FBQyxDQUFDLFFBQVEsSUFBSyxFQUFDeEQsSUFBSXdELENBQUMsQ0FBQyxTQUFTLEtBQUt4RCxFQUFFTSxJQUFJLENBQUNrRCxJQUFJLEtBQUtBLEVBQUViLElBQUksS0FBSyxDQUFDLENBQUMzQyxJQUFJQSxFQUFFTSxJQUFJLENBQUNrRCxHQUFHTSxFQUFFLENBQUMsRUFBRSxHQUFHaEIsSUFBSSxFQUFFLE9BQU85QztZQUMzSixJQUFJd0QsSUFBSSxHQUFHeEQsR0FBRzhELEtBQUs7Z0JBQUNBLEVBQUUsQ0FBQyxFQUFFLEdBQUc7Z0JBQUc5RCxFQUFFcUMsS0FBSzthQUFDO1lBQ3ZDLE9BQVF5QixFQUFFLENBQUMsRUFBRTtnQkFDVCxLQUFLO2dCQUFHLEtBQUs7b0JBQUc5RCxJQUFJOEQ7b0JBQUk7Z0JBQ3hCLEtBQUs7b0JBQUdaLEVBQUVDLEtBQUs7b0JBQUksT0FBTzt3QkFBRWQsT0FBT3lCLEVBQUUsQ0FBQyxFQUFFO3dCQUFFaEIsTUFBTTtvQkFBTTtnQkFDdEQsS0FBSztvQkFBR0ksRUFBRUMsS0FBSztvQkFBSUssSUFBSU0sRUFBRSxDQUFDLEVBQUU7b0JBQUVBLEtBQUs7d0JBQUM7cUJBQUU7b0JBQUU7Z0JBQ3hDLEtBQUs7b0JBQUdBLEtBQUtaLEVBQUVJLEdBQUcsQ0FBQ1UsR0FBRztvQkFBSWQsRUFBRUcsSUFBSSxDQUFDVyxHQUFHO29CQUFJO2dCQUN4QztvQkFDSSxJQUFJLENBQUVoRSxDQUFBQSxJQUFJa0QsRUFBRUcsSUFBSSxFQUFFckQsSUFBSUEsRUFBRUssTUFBTSxHQUFHLEtBQUtMLENBQUMsQ0FBQ0EsRUFBRUssTUFBTSxHQUFHLEVBQUUsS0FBTXlELENBQUFBLEVBQUUsQ0FBQyxFQUFFLEtBQUssS0FBS0EsRUFBRSxDQUFDLEVBQUUsS0FBSyxJQUFJO3dCQUFFWixJQUFJO3dCQUFHO29CQUFVO29CQUMzRyxJQUFJWSxFQUFFLENBQUMsRUFBRSxLQUFLLEtBQU0sRUFBQzlELEtBQU04RCxFQUFFLENBQUMsRUFBRSxHQUFHOUQsQ0FBQyxDQUFDLEVBQUUsSUFBSThELEVBQUUsQ0FBQyxFQUFFLEdBQUc5RCxDQUFDLENBQUMsRUFBRSxHQUFJO3dCQUFFa0QsRUFBRUMsS0FBSyxHQUFHVyxFQUFFLENBQUMsRUFBRTt3QkFBRTtvQkFBTztvQkFDckYsSUFBSUEsRUFBRSxDQUFDLEVBQUUsS0FBSyxLQUFLWixFQUFFQyxLQUFLLEdBQUduRCxDQUFDLENBQUMsRUFBRSxFQUFFO3dCQUFFa0QsRUFBRUMsS0FBSyxHQUFHbkQsQ0FBQyxDQUFDLEVBQUU7d0JBQUVBLElBQUk4RDt3QkFBSTtvQkFBTztvQkFDcEUsSUFBSTlELEtBQUtrRCxFQUFFQyxLQUFLLEdBQUduRCxDQUFDLENBQUMsRUFBRSxFQUFFO3dCQUFFa0QsRUFBRUMsS0FBSyxHQUFHbkQsQ0FBQyxDQUFDLEVBQUU7d0JBQUVrRCxFQUFFSSxHQUFHLENBQUNXLElBQUksQ0FBQ0g7d0JBQUs7b0JBQU87b0JBQ2xFLElBQUk5RCxDQUFDLENBQUMsRUFBRSxFQUFFa0QsRUFBRUksR0FBRyxDQUFDVSxHQUFHO29CQUNuQmQsRUFBRUcsSUFBSSxDQUFDVyxHQUFHO29CQUFJO1lBQ3RCO1lBQ0FGLEtBQUtiLEtBQUszQyxJQUFJLENBQUMwQixTQUFTa0I7UUFDNUIsRUFBRSxPQUFPekMsR0FBRztZQUFFcUQsS0FBSztnQkFBQztnQkFBR3JEO2FBQUU7WUFBRStDLElBQUk7UUFBRyxTQUFVO1lBQUVELElBQUl2RCxJQUFJO1FBQUc7UUFDekQsSUFBSThELEVBQUUsQ0FBQyxFQUFFLEdBQUcsR0FBRyxNQUFNQSxFQUFFLENBQUMsRUFBRTtRQUFFLE9BQU87WUFBRXpCLE9BQU95QixFQUFFLENBQUMsRUFBRSxHQUFHQSxFQUFFLENBQUMsRUFBRSxHQUFHLEtBQUs7WUFBR2hCLE1BQU07UUFBSztJQUNuRjtBQUNKO0FBRU8sU0FBU29CLGdCQUFnQkMsQ0FBQyxFQUFFQyxDQUFDLEVBQUVDLENBQUMsRUFBRUMsRUFBRTtJQUN2QyxJQUFJQSxPQUFPQyxXQUFXRCxLQUFLRDtJQUMzQkYsQ0FBQyxDQUFDRyxHQUFHLEdBQUdGLENBQUMsQ0FBQ0MsRUFBRTtBQUNoQjtBQUVPLFNBQVNHLGFBQWFKLENBQUMsRUFBRUssT0FBTztJQUNuQyxJQUFLLElBQUlsRixLQUFLNkUsRUFBRyxJQUFJN0UsTUFBTSxhQUFhLENBQUNrRixRQUFRakYsY0FBYyxDQUFDRCxJQUFJa0YsT0FBTyxDQUFDbEYsRUFBRSxHQUFHNkUsQ0FBQyxDQUFDN0UsRUFBRTtBQUN6RjtBQUVPLFNBQVNtRixTQUFTUCxDQUFDO0lBQ3RCLElBQUlsRSxJQUFJLE9BQU8wRCxXQUFXLGNBQWNBLE9BQU9DLFFBQVEsRUFBRVEsSUFBSW5FLEtBQUtrRSxDQUFDLENBQUNsRSxFQUFFLEVBQUVDLElBQUk7SUFDNUUsSUFBSWtFLEdBQUcsT0FBT0EsRUFBRTlELElBQUksQ0FBQzZEO0lBQ3JCLElBQUlBLEtBQUssT0FBT0EsRUFBRTlELE1BQU0sS0FBSyxVQUFVLE9BQU87UUFDMUNzQyxNQUFNO1lBQ0YsSUFBSXdCLEtBQUtqRSxLQUFLaUUsRUFBRTlELE1BQU0sRUFBRThELElBQUksS0FBSztZQUNqQyxPQUFPO2dCQUFFOUIsT0FBTzhCLEtBQUtBLENBQUMsQ0FBQ2pFLElBQUk7Z0JBQUU0QyxNQUFNLENBQUNxQjtZQUFFO1FBQzFDO0lBQ0o7SUFDQSxNQUFNLElBQUlKLFVBQVU5RCxJQUFJLDRCQUE0QjtBQUN4RDtBQUVPLFNBQVMwRSxPQUFPUixDQUFDLEVBQUVoRSxDQUFDO0lBQ3ZCLElBQUlpRSxJQUFJLE9BQU9ULFdBQVcsY0FBY1EsQ0FBQyxDQUFDUixPQUFPQyxRQUFRLENBQUM7SUFDMUQsSUFBSSxDQUFDUSxHQUFHLE9BQU9EO0lBQ2YsSUFBSWpFLElBQUlrRSxFQUFFOUQsSUFBSSxDQUFDNkQsSUFBSWhELEdBQUd5RCxLQUFLLEVBQUUsRUFBRW5FO0lBQy9CLElBQUk7UUFDQSxNQUFPLENBQUNOLE1BQU0sS0FBSyxLQUFLQSxNQUFNLE1BQU0sQ0FBQyxDQUFDZ0IsSUFBSWpCLEVBQUV5QyxJQUFJLEVBQUMsRUFBR0csSUFBSSxDQUFFOEIsR0FBR1gsSUFBSSxDQUFDOUMsRUFBRWtCLEtBQUs7SUFDN0UsRUFDQSxPQUFPd0MsT0FBTztRQUFFcEUsSUFBSTtZQUFFb0UsT0FBT0E7UUFBTTtJQUFHLFNBQzlCO1FBQ0osSUFBSTtZQUNBLElBQUkxRCxLQUFLLENBQUNBLEVBQUUyQixJQUFJLElBQUtzQixDQUFBQSxJQUFJbEUsQ0FBQyxDQUFDLFNBQVMsR0FBR2tFLEVBQUU5RCxJQUFJLENBQUNKO1FBQ2xELFNBQ1E7WUFBRSxJQUFJTyxHQUFHLE1BQU1BLEVBQUVvRSxLQUFLO1FBQUU7SUFDcEM7SUFDQSxPQUFPRDtBQUNYO0FBRU8sU0FBU0U7SUFDWixJQUFLLElBQUlGLEtBQUssRUFBRSxFQUFFMUUsSUFBSSxHQUFHQSxJQUFJRSxVQUFVQyxNQUFNLEVBQUVILElBQzNDMEUsS0FBS0EsR0FBR0csTUFBTSxDQUFDSixPQUFPdkUsU0FBUyxDQUFDRixFQUFFO0lBQ3RDLE9BQU8wRTtBQUNYO0FBRU8sU0FBU0k7SUFDWixJQUFLLElBQUkvRSxJQUFJLEdBQUdDLElBQUksR0FBRytFLEtBQUs3RSxVQUFVQyxNQUFNLEVBQUVILElBQUkrRSxJQUFJL0UsSUFBS0QsS0FBS0csU0FBUyxDQUFDRixFQUFFLENBQUNHLE1BQU07SUFDbkYsSUFBSyxJQUFJYyxJQUFJN0IsTUFBTVcsSUFBSW9FLElBQUksR0FBR25FLElBQUksR0FBR0EsSUFBSStFLElBQUkvRSxJQUN6QyxJQUFLLElBQUlnRixJQUFJOUUsU0FBUyxDQUFDRixFQUFFLEVBQUVpRixJQUFJLEdBQUdDLEtBQUtGLEVBQUU3RSxNQUFNLEVBQUU4RSxJQUFJQyxJQUFJRCxLQUFLZCxJQUMxRGxELENBQUMsQ0FBQ2tELEVBQUUsR0FBR2EsQ0FBQyxDQUFDQyxFQUFFO0lBQ25CLE9BQU9oRTtBQUNYOztBQUVPLFNBQVNrRSxRQUFReEIsQ0FBQztJQUNyQixPQUFPLElBQUksWUFBWXdCLFVBQVcsS0FBSSxDQUFDeEIsQ0FBQyxHQUFHQSxHQUFHLElBQUksSUFBSSxJQUFJd0IsUUFBUXhCO0FBQ3RFO0FBRU8sU0FBU3lCLGlCQUFpQnRELE9BQU8sRUFBRUMsVUFBVSxFQUFFRSxTQUFTO0lBQzNELElBQUksQ0FBQ3dCLE9BQU80QixhQUFhLEVBQUUsTUFBTSxJQUFJeEIsVUFBVTtJQUMvQyxJQUFJTixJQUFJdEIsVUFBVTVCLEtBQUssQ0FBQ3lCLFNBQVNDLGNBQWMsRUFBRSxHQUFHL0IsR0FBR3NGLElBQUksRUFBRTtJQUM3RCxPQUFPdEYsSUFBSSxDQUFDLEdBQUd3RCxLQUFLLFNBQVNBLEtBQUssVUFBVUEsS0FBSyxXQUFXeEQsQ0FBQyxDQUFDeUQsT0FBTzRCLGFBQWEsQ0FBQyxHQUFHO1FBQWMsT0FBTyxJQUFJO0lBQUUsR0FBR3JGO0lBQ3BILFNBQVN3RCxLQUFLdkQsQ0FBQztRQUFJLElBQUlzRCxDQUFDLENBQUN0RCxFQUFFLEVBQUVELENBQUMsQ0FBQ0MsRUFBRSxHQUFHLFNBQVUwRCxDQUFDO1lBQUksT0FBTyxJQUFJdEIsUUFBUSxTQUFVMkMsQ0FBQyxFQUFFaEcsQ0FBQztnQkFBSXNHLEVBQUV2QixJQUFJLENBQUM7b0JBQUM5RDtvQkFBRzBEO29CQUFHcUI7b0JBQUdoRztpQkFBRSxJQUFJLEtBQUt1RyxPQUFPdEYsR0FBRzBEO1lBQUk7UUFBSTtJQUFHO0lBQ3pJLFNBQVM0QixPQUFPdEYsQ0FBQyxFQUFFMEQsQ0FBQztRQUFJLElBQUk7WUFBRW5CLEtBQUtlLENBQUMsQ0FBQ3RELEVBQUUsQ0FBQzBEO1FBQUssRUFBRSxPQUFPcEQsR0FBRztZQUFFaUYsT0FBT0YsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUvRTtRQUFJO0lBQUU7SUFDakYsU0FBU2lDLEtBQUt2QixDQUFDO1FBQUlBLEVBQUVrQixLQUFLLFlBQVlnRCxVQUFVOUMsUUFBUUQsT0FBTyxDQUFDbkIsRUFBRWtCLEtBQUssQ0FBQ3dCLENBQUMsRUFBRWQsSUFBSSxDQUFDNEMsU0FBU25ELFVBQVVrRCxPQUFPRixDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRXJFO0lBQUk7SUFDdkgsU0FBU3dFLFFBQVF0RCxLQUFLO1FBQUlvRCxPQUFPLFFBQVFwRDtJQUFRO0lBQ2pELFNBQVNHLE9BQU9ILEtBQUs7UUFBSW9ELE9BQU8sU0FBU3BEO0lBQVE7SUFDakQsU0FBU3FELE9BQU9uQyxDQUFDLEVBQUVNLENBQUM7UUFBSSxJQUFJTixFQUFFTSxJQUFJMkIsRUFBRUksS0FBSyxJQUFJSixFQUFFbkYsTUFBTSxFQUFFb0YsT0FBT0QsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUVBLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUFHO0FBQ3JGO0FBRU8sU0FBU0ssaUJBQWlCMUIsQ0FBQztJQUM5QixJQUFJakUsR0FBR1g7SUFDUCxPQUFPVyxJQUFJLENBQUMsR0FBR3dELEtBQUssU0FBU0EsS0FBSyxTQUFTLFNBQVVqRCxDQUFDO1FBQUksTUFBTUE7SUFBRyxJQUFJaUQsS0FBSyxXQUFXeEQsQ0FBQyxDQUFDeUQsT0FBT0MsUUFBUSxDQUFDLEdBQUc7UUFBYyxPQUFPLElBQUk7SUFBRSxHQUFHMUQ7SUFDMUksU0FBU3dELEtBQUt2RCxDQUFDLEVBQUVvRCxDQUFDO1FBQUlyRCxDQUFDLENBQUNDLEVBQUUsR0FBR2dFLENBQUMsQ0FBQ2hFLEVBQUUsR0FBRyxTQUFVMEQsQ0FBQztZQUFJLE9BQU8sQ0FBQ3RFLElBQUksQ0FBQ0EsQ0FBQUEsSUFBSztnQkFBRThDLE9BQU9nRCxRQUFRbEIsQ0FBQyxDQUFDaEUsRUFBRSxDQUFDMEQ7Z0JBQUtmLE1BQU0zQyxNQUFNO1lBQVMsSUFBSW9ELElBQUlBLEVBQUVNLEtBQUtBO1FBQUcsSUFBSU47SUFBRztBQUNsSjtBQUVPLFNBQVN1QyxjQUFjM0IsQ0FBQztJQUMzQixJQUFJLENBQUNSLE9BQU80QixhQUFhLEVBQUUsTUFBTSxJQUFJeEIsVUFBVTtJQUMvQyxJQUFJSyxJQUFJRCxDQUFDLENBQUNSLE9BQU80QixhQUFhLENBQUMsRUFBRXJGO0lBQ2pDLE9BQU9rRSxJQUFJQSxFQUFFOUQsSUFBSSxDQUFDNkQsS0FBTUEsQ0FBQUEsSUFBSSxPQUFPTyxhQUFhLGFBQWFBLFNBQVNQLEtBQUtBLENBQUMsQ0FBQ1IsT0FBT0MsUUFBUSxDQUFDLElBQUkxRCxJQUFJLENBQUMsR0FBR3dELEtBQUssU0FBU0EsS0FBSyxVQUFVQSxLQUFLLFdBQVd4RCxDQUFDLENBQUN5RCxPQUFPNEIsYUFBYSxDQUFDLEdBQUc7UUFBYyxPQUFPLElBQUk7SUFBRSxHQUFHckYsQ0FBQUE7SUFDOU0sU0FBU3dELEtBQUt2RCxDQUFDO1FBQUlELENBQUMsQ0FBQ0MsRUFBRSxHQUFHZ0UsQ0FBQyxDQUFDaEUsRUFBRSxJQUFJLFNBQVUwRCxDQUFDO1lBQUksT0FBTyxJQUFJdEIsUUFBUSxTQUFVRCxPQUFPLEVBQUVFLE1BQU07Z0JBQUlxQixJQUFJTSxDQUFDLENBQUNoRSxFQUFFLENBQUMwRCxJQUFJNkIsT0FBT3BELFNBQVNFLFFBQVFxQixFQUFFZixJQUFJLEVBQUVlLEVBQUV4QixLQUFLO1lBQUc7UUFBSTtJQUFHO0lBQy9KLFNBQVNxRCxPQUFPcEQsT0FBTyxFQUFFRSxNQUFNLEVBQUV2RCxDQUFDLEVBQUU0RSxDQUFDO1FBQUl0QixRQUFRRCxPQUFPLENBQUN1QixHQUFHZCxJQUFJLENBQUMsU0FBU2MsQ0FBQztZQUFJdkIsUUFBUTtnQkFBRUQsT0FBT3dCO2dCQUFHZixNQUFNN0Q7WUFBRTtRQUFJLEdBQUd1RDtJQUFTO0FBQy9IO0FBRU8sU0FBU3VELHFCQUFxQkMsTUFBTSxFQUFFQyxHQUFHO0lBQzVDLElBQUk5RyxPQUFPb0MsY0FBYyxFQUFFO1FBQUVwQyxPQUFPb0MsY0FBYyxDQUFDeUUsUUFBUSxPQUFPO1lBQUUzRCxPQUFPNEQ7UUFBSTtJQUFJLE9BQU87UUFBRUQsT0FBT0MsR0FBRyxHQUFHQTtJQUFLO0lBQzlHLE9BQU9EO0FBQ1g7O0FBRU8sU0FBU0UsYUFBYUMsR0FBRztJQUM1QixJQUFJQSxPQUFPQSxJQUFJQyxVQUFVLEVBQUUsT0FBT0Q7SUFDbEMsSUFBSXRELFNBQVMsQ0FBQztJQUNkLElBQUlzRCxPQUFPLE1BQU07UUFBQSxJQUFLLElBQUk5QixLQUFLOEIsSUFBSyxJQUFJaEgsT0FBT0ssY0FBYyxDQUFDYyxJQUFJLENBQUM2RixLQUFLOUIsSUFBSXhCLE1BQU0sQ0FBQ3dCLEVBQUUsR0FBRzhCLEdBQUcsQ0FBQzlCLEVBQUU7SUFBQTtJQUM5RnhCLE9BQU93RCxPQUFPLEdBQUdGO0lBQ2pCLE9BQU90RDtBQUNYO0FBRU8sU0FBU3lELGdCQUFnQkgsR0FBRztJQUMvQixPQUFPLE9BQVFBLElBQUlDLFVBQVUsR0FBSUQsTUFBTTtRQUFFRSxTQUFTRjtJQUFJO0FBQzFEO0FBRU8sU0FBU0ksdUJBQXVCQyxRQUFRLEVBQUVDLFVBQVU7SUFDdkQsSUFBSSxDQUFDQSxXQUFXQyxHQUFHLENBQUNGLFdBQVc7UUFDM0IsTUFBTSxJQUFJekMsVUFBVTtJQUN4QjtJQUNBLE9BQU8wQyxXQUFXRSxHQUFHLENBQUNIO0FBQzFCO0FBRU8sU0FBU0ksdUJBQXVCSixRQUFRLEVBQUVDLFVBQVUsRUFBRXBFLEtBQUs7SUFDOUQsSUFBSSxDQUFDb0UsV0FBV0MsR0FBRyxDQUFDRixXQUFXO1FBQzNCLE1BQU0sSUFBSXpDLFVBQVU7SUFDeEI7SUFDQTBDLFdBQVdJLEdBQUcsQ0FBQ0wsVUFBVW5FO0lBQ3pCLE9BQU9BO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnQvbm9kZV9tb2R1bGVzL3RzbGliL3RzbGliLmVzNi5qcz8yZDQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5Db3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cclxuXHJcblBlcm1pc3Npb24gdG8gdXNlLCBjb3B5LCBtb2RpZnksIGFuZC9vciBkaXN0cmlidXRlIHRoaXMgc29mdHdhcmUgZm9yIGFueVxyXG5wdXJwb3NlIHdpdGggb3Igd2l0aG91dCBmZWUgaXMgaGVyZWJ5IGdyYW50ZWQuXHJcblxyXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiIEFORCBUSEUgQVVUSE9SIERJU0NMQUlNUyBBTEwgV0FSUkFOVElFUyBXSVRIXHJcblJFR0FSRCBUTyBUSElTIFNPRlRXQVJFIElOQ0xVRElORyBBTEwgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWVxyXG5BTkQgRklUTkVTUy4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUiBCRSBMSUFCTEUgRk9SIEFOWSBTUEVDSUFMLCBESVJFQ1QsXHJcbklORElSRUNULCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgT1IgQU5ZIERBTUFHRVMgV0hBVFNPRVZFUiBSRVNVTFRJTkcgRlJPTVxyXG5MT1NTIE9GIFVTRSwgREFUQSBPUiBQUk9GSVRTLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgTkVHTElHRU5DRSBPUlxyXG5PVEhFUiBUT1JUSU9VUyBBQ1RJT04sIEFSSVNJTkcgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgVVNFIE9SXHJcblBFUkZPUk1BTkNFIE9GIFRISVMgU09GVFdBUkUuXHJcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovXHJcbi8qIGdsb2JhbCBSZWZsZWN0LCBQcm9taXNlICovXHJcblxyXG52YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uKGQsIGIpIHtcclxuICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XHJcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoYi5oYXNPd25Qcm9wZXJ0eShwKSkgZFtwXSA9IGJbcF07IH07XHJcbiAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxufTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2V4dGVuZHMoZCwgYikge1xyXG4gICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgIGZ1bmN0aW9uIF9fKCkgeyB0aGlzLmNvbnN0cnVjdG9yID0gZDsgfVxyXG4gICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG59XHJcblxyXG5leHBvcnQgdmFyIF9fYXNzaWduID0gZnVuY3Rpb24oKSB7XHJcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gX19hc3NpZ24odCkge1xyXG4gICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xyXG4gICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xyXG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpIHRbcF0gPSBzW3BdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdDtcclxuICAgIH1cclxuICAgIHJldHVybiBfX2Fzc2lnbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19yZXN0KHMsIGUpIHtcclxuICAgIHZhciB0ID0ge307XHJcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcclxuICAgICAgICB0W3BdID0gc1twXTtcclxuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcclxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChlLmluZGV4T2YocFtpXSkgPCAwICYmIE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbChzLCBwW2ldKSlcclxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xyXG4gICAgICAgIH1cclxuICAgIHJldHVybiB0O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xyXG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcclxuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XHJcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xyXG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fcGFyYW0ocGFyYW1JbmRleCwgZGVjb3JhdG9yKSB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldCwga2V5KSB7IGRlY29yYXRvcih0YXJnZXQsIGtleSwgcGFyYW1JbmRleCk7IH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fbWV0YWRhdGEobWV0YWRhdGFLZXksIG1ldGFkYXRhVmFsdWUpIHtcclxuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5tZXRhZGF0YSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gUmVmbGVjdC5tZXRhZGF0YShtZXRhZGF0YUtleSwgbWV0YWRhdGFWYWx1ZSk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2F3YWl0ZXIodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XHJcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cclxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cclxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxyXG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcclxuICAgIH0pO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19nZW5lcmF0b3IodGhpc0FyZywgYm9keSkge1xyXG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcclxuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xyXG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IHJldHVybiBmdW5jdGlvbiAodikgeyByZXR1cm4gc3RlcChbbiwgdl0pOyB9OyB9XHJcbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XHJcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xyXG4gICAgICAgIHdoaWxlIChfKSB0cnkge1xyXG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XHJcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcclxuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xyXG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcclxuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XHJcbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2NyZWF0ZUJpbmRpbmcobywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBvW2syXSA9IG1ba107XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2V4cG9ydFN0YXIobSwgZXhwb3J0cykge1xyXG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIWV4cG9ydHMuaGFzT3duUHJvcGVydHkocCkpIGV4cG9ydHNbcF0gPSBtW3BdO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX192YWx1ZXMobykge1xyXG4gICAgdmFyIHMgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgU3ltYm9sLml0ZXJhdG9yLCBtID0gcyAmJiBvW3NdLCBpID0gMDtcclxuICAgIGlmIChtKSByZXR1cm4gbS5jYWxsKG8pO1xyXG4gICAgaWYgKG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSByZXR1cm4ge1xyXG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKG8gJiYgaSA+PSBvLmxlbmd0aCkgbyA9IHZvaWQgMDtcclxuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IG8gJiYgb1tpKytdLCBkb25lOiAhbyB9O1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHMgPyBcIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCIgOiBcIlN5bWJvbC5pdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX3JlYWQobywgbikge1xyXG4gICAgdmFyIG0gPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb1tTeW1ib2wuaXRlcmF0b3JdO1xyXG4gICAgaWYgKCFtKSByZXR1cm4gbztcclxuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICB3aGlsZSAoKG4gPT09IHZvaWQgMCB8fCBuLS0gPiAwKSAmJiAhKHIgPSBpLm5leHQoKSkuZG9uZSkgYXIucHVzaChyLnZhbHVlKTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlcnJvcikgeyBlID0geyBlcnJvcjogZXJyb3IgfTsgfVxyXG4gICAgZmluYWxseSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgaWYgKHIgJiYgIXIuZG9uZSAmJiAobSA9IGlbXCJyZXR1cm5cIl0pKSBtLmNhbGwoaSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFyO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19zcHJlYWQoKSB7XHJcbiAgICBmb3IgKHZhciBhciA9IFtdLCBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKylcclxuICAgICAgICBhciA9IGFyLmNvbmNhdChfX3JlYWQoYXJndW1lbnRzW2ldKSk7XHJcbiAgICByZXR1cm4gYXI7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX3NwcmVhZEFycmF5cygpIHtcclxuICAgIGZvciAodmFyIHMgPSAwLCBpID0gMCwgaWwgPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgaWw7IGkrKykgcyArPSBhcmd1bWVudHNbaV0ubGVuZ3RoO1xyXG4gICAgZm9yICh2YXIgciA9IEFycmF5KHMpLCBrID0gMCwgaSA9IDA7IGkgPCBpbDsgaSsrKVxyXG4gICAgICAgIGZvciAodmFyIGEgPSBhcmd1bWVudHNbaV0sIGogPSAwLCBqbCA9IGEubGVuZ3RoOyBqIDwgamw7IGorKywgaysrKVxyXG4gICAgICAgICAgICByW2tdID0gYVtqXTtcclxuICAgIHJldHVybiByO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fYXdhaXQodikge1xyXG4gICAgcmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBfX2F3YWl0ID8gKHRoaXMudiA9IHYsIHRoaXMpIDogbmV3IF9fYXdhaXQodik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2FzeW5jR2VuZXJhdG9yKHRoaXNBcmcsIF9hcmd1bWVudHMsIGdlbmVyYXRvcikge1xyXG4gICAgaWYgKCFTeW1ib2wuYXN5bmNJdGVyYXRvcikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN5bWJvbC5hc3luY0l0ZXJhdG9yIGlzIG5vdCBkZWZpbmVkLlwiKTtcclxuICAgIHZhciBnID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pLCBpLCBxID0gW107XHJcbiAgICByZXR1cm4gaSA9IHt9LCB2ZXJiKFwibmV4dFwiKSwgdmVyYihcInRocm93XCIpLCB2ZXJiKFwicmV0dXJuXCIpLCBpW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0sIGk7XHJcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgaWYgKGdbbl0pIGlbbl0gPSBmdW5jdGlvbiAodikgeyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKGEsIGIpIHsgcS5wdXNoKFtuLCB2LCBhLCBiXSkgPiAxIHx8IHJlc3VtZShuLCB2KTsgfSk7IH07IH1cclxuICAgIGZ1bmN0aW9uIHJlc3VtZShuLCB2KSB7IHRyeSB7IHN0ZXAoZ1tuXSh2KSk7IH0gY2F0Y2ggKGUpIHsgc2V0dGxlKHFbMF1bM10sIGUpOyB9IH1cclxuICAgIGZ1bmN0aW9uIHN0ZXAocikgeyByLnZhbHVlIGluc3RhbmNlb2YgX19hd2FpdCA/IFByb21pc2UucmVzb2x2ZShyLnZhbHVlLnYpLnRoZW4oZnVsZmlsbCwgcmVqZWN0KSA6IHNldHRsZShxWzBdWzJdLCByKTsgfVxyXG4gICAgZnVuY3Rpb24gZnVsZmlsbCh2YWx1ZSkgeyByZXN1bWUoXCJuZXh0XCIsIHZhbHVlKTsgfVxyXG4gICAgZnVuY3Rpb24gcmVqZWN0KHZhbHVlKSB7IHJlc3VtZShcInRocm93XCIsIHZhbHVlKTsgfVxyXG4gICAgZnVuY3Rpb24gc2V0dGxlKGYsIHYpIHsgaWYgKGYodiksIHEuc2hpZnQoKSwgcS5sZW5ndGgpIHJlc3VtZShxWzBdWzBdLCBxWzBdWzFdKTsgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19hc3luY0RlbGVnYXRvcihvKSB7XHJcbiAgICB2YXIgaSwgcDtcclxuICAgIHJldHVybiBpID0ge30sIHZlcmIoXCJuZXh0XCIpLCB2ZXJiKFwidGhyb3dcIiwgZnVuY3Rpb24gKGUpIHsgdGhyb3cgZTsgfSksIHZlcmIoXCJyZXR1cm5cIiksIGlbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0sIGk7XHJcbiAgICBmdW5jdGlvbiB2ZXJiKG4sIGYpIHsgaVtuXSA9IG9bbl0gPyBmdW5jdGlvbiAodikgeyByZXR1cm4gKHAgPSAhcCkgPyB7IHZhbHVlOiBfX2F3YWl0KG9bbl0odikpLCBkb25lOiBuID09PSBcInJldHVyblwiIH0gOiBmID8gZih2KSA6IHY7IH0gOiBmOyB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2FzeW5jVmFsdWVzKG8pIHtcclxuICAgIGlmICghU3ltYm9sLmFzeW5jSXRlcmF0b3IpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTeW1ib2wuYXN5bmNJdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XHJcbiAgICB2YXIgbSA9IG9bU3ltYm9sLmFzeW5jSXRlcmF0b3JdLCBpO1xyXG4gICAgcmV0dXJuIG0gPyBtLmNhbGwobykgOiAobyA9IHR5cGVvZiBfX3ZhbHVlcyA9PT0gXCJmdW5jdGlvblwiID8gX192YWx1ZXMobykgOiBvW1N5bWJvbC5pdGVyYXRvcl0oKSwgaSA9IHt9LCB2ZXJiKFwibmV4dFwiKSwgdmVyYihcInRocm93XCIpLCB2ZXJiKFwicmV0dXJuXCIpLCBpW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0sIGkpO1xyXG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IGlbbl0gPSBvW25dICYmIGZ1bmN0aW9uICh2KSB7IHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7IHYgPSBvW25dKHYpLCBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCB2LmRvbmUsIHYudmFsdWUpOyB9KTsgfTsgfVxyXG4gICAgZnVuY3Rpb24gc2V0dGxlKHJlc29sdmUsIHJlamVjdCwgZCwgdikgeyBQcm9taXNlLnJlc29sdmUodikudGhlbihmdW5jdGlvbih2KSB7IHJlc29sdmUoeyB2YWx1ZTogdiwgZG9uZTogZCB9KTsgfSwgcmVqZWN0KTsgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19tYWtlVGVtcGxhdGVPYmplY3QoY29va2VkLCByYXcpIHtcclxuICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGNvb2tlZCwgXCJyYXdcIiwgeyB2YWx1ZTogcmF3IH0pOyB9IGVsc2UgeyBjb29rZWQucmF3ID0gcmF3OyB9XHJcbiAgICByZXR1cm4gY29va2VkO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9faW1wb3J0U3Rhcihtb2QpIHtcclxuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XHJcbiAgICB2YXIgcmVzdWx0ID0ge307XHJcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgcmVzdWx0W2tdID0gbW9kW2tdO1xyXG4gICAgcmVzdWx0LmRlZmF1bHQgPSBtb2Q7XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19pbXBvcnREZWZhdWx0KG1vZCkge1xyXG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBkZWZhdWx0OiBtb2QgfTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fY2xhc3NQcml2YXRlRmllbGRHZXQocmVjZWl2ZXIsIHByaXZhdGVNYXApIHtcclxuICAgIGlmICghcHJpdmF0ZU1hcC5oYXMocmVjZWl2ZXIpKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcImF0dGVtcHRlZCB0byBnZXQgcHJpdmF0ZSBmaWVsZCBvbiBub24taW5zdGFuY2VcIik7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcHJpdmF0ZU1hcC5nZXQocmVjZWl2ZXIpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19jbGFzc1ByaXZhdGVGaWVsZFNldChyZWNlaXZlciwgcHJpdmF0ZU1hcCwgdmFsdWUpIHtcclxuICAgIGlmICghcHJpdmF0ZU1hcC5oYXMocmVjZWl2ZXIpKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcImF0dGVtcHRlZCB0byBzZXQgcHJpdmF0ZSBmaWVsZCBvbiBub24taW5zdGFuY2VcIik7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlTWFwLnNldChyZWNlaXZlciwgdmFsdWUpO1xyXG4gICAgcmV0dXJuIHZhbHVlO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJleHRlbmRTdGF0aWNzIiwiZCIsImIiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsIl9fcHJvdG9fXyIsIkFycmF5IiwicCIsImhhc093blByb3BlcnR5IiwiX19leHRlbmRzIiwiX18iLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsImNyZWF0ZSIsIl9fYXNzaWduIiwiYXNzaWduIiwidCIsInMiLCJpIiwibiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImNhbGwiLCJhcHBseSIsIl9fcmVzdCIsImUiLCJpbmRleE9mIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJfX2RlY29yYXRlIiwiZGVjb3JhdG9ycyIsInRhcmdldCIsImtleSIsImRlc2MiLCJjIiwiciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlJlZmxlY3QiLCJkZWNvcmF0ZSIsImRlZmluZVByb3BlcnR5IiwiX19wYXJhbSIsInBhcmFtSW5kZXgiLCJkZWNvcmF0b3IiLCJfX21ldGFkYXRhIiwibWV0YWRhdGFLZXkiLCJtZXRhZGF0YVZhbHVlIiwibWV0YWRhdGEiLCJfX2F3YWl0ZXIiLCJ0aGlzQXJnIiwiX2FyZ3VtZW50cyIsIlAiLCJnZW5lcmF0b3IiLCJhZG9wdCIsInZhbHVlIiwicmVzb2x2ZSIsIlByb21pc2UiLCJyZWplY3QiLCJmdWxmaWxsZWQiLCJzdGVwIiwibmV4dCIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJfX2dlbmVyYXRvciIsImJvZHkiLCJfIiwibGFiZWwiLCJzZW50IiwidHJ5cyIsIm9wcyIsImYiLCJ5IiwiZyIsInZlcmIiLCJTeW1ib2wiLCJpdGVyYXRvciIsInYiLCJvcCIsIlR5cGVFcnJvciIsInBvcCIsInB1c2giLCJfX2NyZWF0ZUJpbmRpbmciLCJvIiwibSIsImsiLCJrMiIsInVuZGVmaW5lZCIsIl9fZXhwb3J0U3RhciIsImV4cG9ydHMiLCJfX3ZhbHVlcyIsIl9fcmVhZCIsImFyIiwiZXJyb3IiLCJfX3NwcmVhZCIsImNvbmNhdCIsIl9fc3ByZWFkQXJyYXlzIiwiaWwiLCJhIiwiaiIsImpsIiwiX19hd2FpdCIsIl9fYXN5bmNHZW5lcmF0b3IiLCJhc3luY0l0ZXJhdG9yIiwicSIsInJlc3VtZSIsInNldHRsZSIsImZ1bGZpbGwiLCJzaGlmdCIsIl9fYXN5bmNEZWxlZ2F0b3IiLCJfX2FzeW5jVmFsdWVzIiwiX19tYWtlVGVtcGxhdGVPYmplY3QiLCJjb29rZWQiLCJyYXciLCJfX2ltcG9ydFN0YXIiLCJtb2QiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIl9faW1wb3J0RGVmYXVsdCIsIl9fY2xhc3NQcml2YXRlRmllbGRHZXQiLCJyZWNlaXZlciIsInByaXZhdGVNYXAiLCJoYXMiLCJnZXQiLCJfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0Iiwic2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/ethereum-provider/dist/index.es.js":
/*!************************************************************************!*\
  !*** ./node_modules/@walletconnect/ethereum-provider/dist/index.es.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EthereumProvider: () => (/* binding */ x),\n/* harmony export */   OPTIONAL_EVENTS: () => (/* binding */ b),\n/* harmony export */   OPTIONAL_METHODS: () => (/* binding */ y),\n/* harmony export */   REQUIRED_EVENTS: () => (/* binding */ u),\n/* harmony export */   REQUIRED_METHODS: () => (/* binding */ g),\n/* harmony export */   \"default\": () => (/* binding */ C)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/universal-provider */ \"(ssr)/./node_modules/@walletconnect/universal-provider/dist/index.es.js\");\n\n\n\nconst R = \"wc\", T = \"ethereum_provider\", $ = `${R}@2:${T}:`, j = \"https://rpc.walletconnect.org/v1/\", g = [\n    \"eth_sendTransaction\",\n    \"personal_sign\"\n], y = [\n    \"eth_accounts\",\n    \"eth_requestAccounts\",\n    \"eth_sendRawTransaction\",\n    \"eth_sign\",\n    \"eth_signTransaction\",\n    \"eth_signTypedData\",\n    \"eth_signTypedData_v3\",\n    \"eth_signTypedData_v4\",\n    \"eth_sendTransaction\",\n    \"personal_sign\",\n    \"wallet_switchEthereumChain\",\n    \"wallet_addEthereumChain\",\n    \"wallet_getPermissions\",\n    \"wallet_requestPermissions\",\n    \"wallet_registerOnboarding\",\n    \"wallet_watchAsset\",\n    \"wallet_scanQRCode\",\n    \"wallet_sendCalls\",\n    \"wallet_getCapabilities\",\n    \"wallet_getCallsStatus\",\n    \"wallet_showCallsStatus\"\n], u = [\n    \"chainChanged\",\n    \"accountsChanged\"\n], b = [\n    \"chainChanged\",\n    \"accountsChanged\",\n    \"message\",\n    \"disconnect\",\n    \"connect\"\n];\nvar q = Object.defineProperty, N = Object.defineProperties, D = Object.getOwnPropertyDescriptors, M = Object.getOwnPropertySymbols, U = Object.prototype.hasOwnProperty, Q = Object.prototype.propertyIsEnumerable, O = (r, t, s)=>t in r ? q(r, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: s\n    }) : r[t] = s, p = (r, t)=>{\n    for(var s in t || (t = {}))U.call(t, s) && O(r, s, t[s]);\n    if (M) for (var s of M(t))Q.call(t, s) && O(r, s, t[s]);\n    return r;\n}, E = (r, t)=>N(r, D(t));\nfunction m(r) {\n    return Number(r[0].split(\":\")[1]);\n}\nfunction v(r) {\n    return `0x${r.toString(16)}`;\n}\nfunction L(r) {\n    const { chains: t, optionalChains: s, methods: i, optionalMethods: e, events: n, optionalEvents: o, rpcMap: c } = r;\n    if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(t)) throw new Error(\"Invalid chains\");\n    const a = {\n        chains: t,\n        methods: i || g,\n        events: n || u,\n        rpcMap: p({}, t.length ? {\n            [m(t)]: c[m(t)]\n        } : {})\n    }, h = n?.filter((l)=>!u.includes(l)), d = i?.filter((l)=>!g.includes(l));\n    if (!s && !o && !e && !(h != null && h.length) && !(d != null && d.length)) return {\n        required: t.length ? a : void 0\n    };\n    const w = h?.length && d?.length || !s, I = {\n        chains: [\n            ...new Set(w ? a.chains.concat(s || []) : s)\n        ],\n        methods: [\n            ...new Set(a.methods.concat(e != null && e.length ? e : y))\n        ],\n        events: [\n            ...new Set(a.events.concat(o != null && o.length ? o : b))\n        ],\n        rpcMap: c\n    };\n    return {\n        required: t.length ? a : void 0,\n        optional: s.length ? I : void 0\n    };\n}\nclass C {\n    constructor(){\n        this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.namespace = \"eip155\", this.accounts = [], this.chainId = 1, this.STORAGE_KEY = $, this.on = (t, s)=>(this.events.on(t, s), this), this.once = (t, s)=>(this.events.once(t, s), this), this.removeListener = (t, s)=>(this.events.removeListener(t, s), this), this.off = (t, s)=>(this.events.off(t, s), this), this.parseAccount = (t)=>this.isCompatibleChainId(t) ? this.parseAccountId(t).address : t, this.signer = {}, this.rpc = {};\n    }\n    static async init(t) {\n        const s = new C;\n        return await s.initialize(t), s;\n    }\n    async request(t, s) {\n        return await this.signer.request(t, this.formatChainId(this.chainId), s);\n    }\n    sendAsync(t, s, i) {\n        this.signer.sendAsync(t, s, this.formatChainId(this.chainId), i);\n    }\n    get connected() {\n        return this.signer.client ? this.signer.client.core.relayer.connected : !1;\n    }\n    get connecting() {\n        return this.signer.client ? this.signer.client.core.relayer.connecting : !1;\n    }\n    async enable() {\n        return this.session || await this.connect(), await this.request({\n            method: \"eth_requestAccounts\"\n        });\n    }\n    async connect(t) {\n        if (!this.signer.client) throw new Error(\"Provider not initialized. Call init() first\");\n        this.loadConnectOpts(t);\n        const { required: s, optional: i } = L(this.rpc);\n        try {\n            const e = await new Promise(async (o, c)=>{\n                var a;\n                this.rpc.showQrModal && ((a = this.modal) == null || a.subscribeModal((h)=>{\n                    !h.open && !this.signer.session && (this.signer.abortPairingAttempt(), c(new Error(\"Connection request reset. Please try again.\")));\n                })), await this.signer.connect(E(p({\n                    namespaces: p({}, s && {\n                        [this.namespace]: s\n                    })\n                }, i && {\n                    optionalNamespaces: {\n                        [this.namespace]: i\n                    }\n                }), {\n                    pairingTopic: t?.pairingTopic\n                })).then((h)=>{\n                    o(h);\n                }).catch((h)=>{\n                    c(new Error(h.message));\n                });\n            });\n            if (!e) return;\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getAccountsFromNamespaces)(e.namespaces, [\n                this.namespace\n            ]);\n            this.setChainIds(this.rpc.chains.length ? this.rpc.chains : n), this.setAccounts(n), this.events.emit(\"connect\", {\n                chainId: v(this.chainId)\n            });\n        } catch (e) {\n            throw this.signer.logger.error(e), e;\n        } finally{\n            this.modal && this.modal.closeModal();\n        }\n    }\n    async authenticate(t, s) {\n        if (!this.signer.client) throw new Error(\"Provider not initialized. Call init() first\");\n        this.loadConnectOpts({\n            chains: t?.chains\n        });\n        try {\n            const i = await new Promise(async (n, o)=>{\n                var c;\n                this.rpc.showQrModal && ((c = this.modal) == null || c.subscribeModal((a)=>{\n                    !a.open && !this.signer.session && (this.signer.abortPairingAttempt(), o(new Error(\"Connection request reset. Please try again.\")));\n                })), await this.signer.authenticate(E(p({}, t), {\n                    chains: this.rpc.chains\n                }), s).then((a)=>{\n                    n(a);\n                }).catch((a)=>{\n                    o(new Error(a.message));\n                });\n            }), e = i.session;\n            if (e) {\n                const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getAccountsFromNamespaces)(e.namespaces, [\n                    this.namespace\n                ]);\n                this.setChainIds(this.rpc.chains.length ? this.rpc.chains : n), this.setAccounts(n), this.events.emit(\"connect\", {\n                    chainId: v(this.chainId)\n                });\n            }\n            return i;\n        } catch (i) {\n            throw this.signer.logger.error(i), i;\n        } finally{\n            this.modal && this.modal.closeModal();\n        }\n    }\n    async disconnect() {\n        this.session && await this.signer.disconnect(), this.reset();\n    }\n    get isWalletConnect() {\n        return !0;\n    }\n    get session() {\n        return this.signer.session;\n    }\n    registerEventListeners() {\n        this.signer.on(\"session_event\", (t)=>{\n            const { params: s } = t, { event: i } = s;\n            i.name === \"accountsChanged\" ? (this.accounts = this.parseAccounts(i.data), this.events.emit(\"accountsChanged\", this.accounts)) : i.name === \"chainChanged\" ? this.setChainId(this.formatChainId(i.data)) : this.events.emit(i.name, i.data), this.events.emit(\"session_event\", t);\n        }), this.signer.on(\"chainChanged\", (t)=>{\n            const s = parseInt(t);\n            this.chainId = s, this.events.emit(\"chainChanged\", v(this.chainId)), this.persist();\n        }), this.signer.on(\"session_update\", (t)=>{\n            this.events.emit(\"session_update\", t);\n        }), this.signer.on(\"session_delete\", (t)=>{\n            this.reset(), this.events.emit(\"session_delete\", t), this.events.emit(\"disconnect\", E(p({}, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.getSdkError)(\"USER_DISCONNECTED\")), {\n                data: t.topic,\n                name: \"USER_DISCONNECTED\"\n            }));\n        }), this.signer.on(\"display_uri\", (t)=>{\n            var s, i;\n            this.rpc.showQrModal && ((s = this.modal) == null || s.closeModal(), (i = this.modal) == null || i.openModal({\n                uri: t\n            })), this.events.emit(\"display_uri\", t);\n        });\n    }\n    switchEthereumChain(t) {\n        this.request({\n            method: \"wallet_switchEthereumChain\",\n            params: [\n                {\n                    chainId: t.toString(16)\n                }\n            ]\n        });\n    }\n    isCompatibleChainId(t) {\n        return typeof t == \"string\" ? t.startsWith(`${this.namespace}:`) : !1;\n    }\n    formatChainId(t) {\n        return `${this.namespace}:${t}`;\n    }\n    parseChainId(t) {\n        return Number(t.split(\":\")[1]);\n    }\n    setChainIds(t) {\n        const s = t.filter((i)=>this.isCompatibleChainId(i)).map((i)=>this.parseChainId(i));\n        s.length && (this.chainId = s[0], this.events.emit(\"chainChanged\", v(this.chainId)), this.persist());\n    }\n    setChainId(t) {\n        if (this.isCompatibleChainId(t)) {\n            const s = this.parseChainId(t);\n            this.chainId = s, this.switchEthereumChain(s);\n        }\n    }\n    parseAccountId(t) {\n        const [s, i, e] = t.split(\":\");\n        return {\n            chainId: `${s}:${i}`,\n            address: e\n        };\n    }\n    setAccounts(t) {\n        this.accounts = t.filter((s)=>this.parseChainId(this.parseAccountId(s).chainId) === this.chainId).map((s)=>this.parseAccountId(s).address), this.events.emit(\"accountsChanged\", this.accounts);\n    }\n    getRpcConfig(t) {\n        var s, i;\n        const e = (s = t?.chains) != null ? s : [], n = (i = t?.optionalChains) != null ? i : [], o = e.concat(n);\n        if (!o.length) throw new Error(\"No chains specified in either `chains` or `optionalChains`\");\n        const c = e.length ? t?.methods || g : [], a = e.length ? t?.events || u : [], h = t?.optionalMethods || [], d = t?.optionalEvents || [], w = t?.rpcMap || this.buildRpcMap(o, t.projectId), I = t?.qrModalOptions || void 0;\n        return {\n            chains: e?.map((l)=>this.formatChainId(l)),\n            optionalChains: n.map((l)=>this.formatChainId(l)),\n            methods: c,\n            events: a,\n            optionalMethods: h,\n            optionalEvents: d,\n            rpcMap: w,\n            showQrModal: !!(t != null && t.showQrModal),\n            qrModalOptions: I,\n            projectId: t.projectId,\n            metadata: t.metadata\n        };\n    }\n    buildRpcMap(t, s) {\n        const i = {};\n        return t.forEach((e)=>{\n            i[e] = this.getRpcUrl(e, s);\n        }), i;\n    }\n    async initialize(t) {\n        if (this.rpc = this.getRpcConfig(t), this.chainId = this.rpc.chains.length ? m(this.rpc.chains) : m(this.rpc.optionalChains), this.signer = await _walletconnect_universal_provider__WEBPACK_IMPORTED_MODULE_1__.UniversalProvider.init({\n            projectId: this.rpc.projectId,\n            metadata: this.rpc.metadata,\n            disableProviderPing: t.disableProviderPing,\n            relayUrl: t.relayUrl,\n            storageOptions: t.storageOptions,\n            customStoragePrefix: t.customStoragePrefix,\n            telemetryEnabled: t.telemetryEnabled,\n            logger: t.logger\n        }), this.registerEventListeners(), await this.loadPersistedSession(), this.rpc.showQrModal) {\n            let s;\n            try {\n                const { WalletConnectModal: i } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@walletconnect\"), __webpack_require__.e(\"vendor-chunks/valtio\"), __webpack_require__.e(\"vendor-chunks/proxy-compare\")]).then(__webpack_require__.bind(__webpack_require__, /*! @walletconnect/modal */ \"(ssr)/./node_modules/@walletconnect/modal/dist/index.js\"));\n                s = i;\n            } catch  {\n                throw new Error(\"To use QR modal, please install @walletconnect/modal package\");\n            }\n            if (s) try {\n                this.modal = new s(p({\n                    projectId: this.rpc.projectId\n                }, this.rpc.qrModalOptions));\n            } catch (i) {\n                throw this.signer.logger.error(i), new Error(\"Could not generate WalletConnectModal Instance\");\n            }\n        }\n    }\n    loadConnectOpts(t) {\n        if (!t) return;\n        const { chains: s, optionalChains: i, rpcMap: e } = t;\n        s && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(s) && (this.rpc.chains = s.map((n)=>this.formatChainId(n)), s.forEach((n)=>{\n            this.rpc.rpcMap[n] = e?.[n] || this.getRpcUrl(n);\n        })), i && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_2__.isValidArray)(i) && (this.rpc.optionalChains = [], this.rpc.optionalChains = i?.map((n)=>this.formatChainId(n)), i.forEach((n)=>{\n            this.rpc.rpcMap[n] = e?.[n] || this.getRpcUrl(n);\n        }));\n    }\n    getRpcUrl(t, s) {\n        var i;\n        return ((i = this.rpc.rpcMap) == null ? void 0 : i[t]) || `${j}?chainId=eip155:${t}&projectId=${s || this.rpc.projectId}`;\n    }\n    async loadPersistedSession() {\n        if (this.session) try {\n            const t = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`), s = this.session.namespaces[`${this.namespace}:${t}`] ? this.session.namespaces[`${this.namespace}:${t}`] : this.session.namespaces[this.namespace];\n            this.setChainIds(t ? [\n                this.formatChainId(t)\n            ] : s?.accounts), this.setAccounts(s?.accounts);\n        } catch (t) {\n            this.signer.logger.error(\"Failed to load persisted session, clearing state...\"), this.signer.logger.error(t), await this.disconnect().catch((s)=>this.signer.logger.warn(s));\n        }\n    }\n    reset() {\n        this.chainId = 1, this.accounts = [];\n    }\n    persist() {\n        this.session && this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId);\n    }\n    parseAccounts(t) {\n        return typeof t == \"string\" || t instanceof String ? [\n            this.parseAccount(t)\n        ] : t.map((s)=>this.parseAccount(s));\n    }\n}\nconst x = C;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/ethereum-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/events/dist/esm/events.js":
/*!***************************************************************!*\
  !*** ./node_modules/@walletconnect/events/dist/esm/events.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* binding */ IEvents)\n/* harmony export */ });\nclass IEvents {\n} //# sourceMappingURL=events.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXZlbnRzL2Rpc3QvZXNtL2V2ZW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUE7QUFDYixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rva2VuZnVuZC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9ldmVudHMvZGlzdC9lc20vZXZlbnRzLmpzPzEwNTYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIElFdmVudHMge1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXZlbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJJRXZlbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/events/dist/esm/events.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@walletconnect/events/dist/esm/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IEvents: () => (/* reexport safe */ _events__WEBPACK_IMPORTED_MODULE_0__.IEvents)\n/* harmony export */ });\n/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./events */ \"(ssr)/./node_modules/@walletconnect/events/dist/esm/events.js\");\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvZXZlbnRzL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlCLENBQ3pCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rva2VuZnVuZC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9ldmVudHMvZGlzdC9lc20vaW5kZXguanM/ZDMwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9ldmVudHNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/heartbeat/dist/index.es.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/heartbeat/dist/index.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HEARTBEAT_EVENTS: () => (/* binding */ r),\n/* harmony export */   HEARTBEAT_INTERVAL: () => (/* binding */ s),\n/* harmony export */   HeartBeat: () => (/* binding */ i),\n/* harmony export */   IHeartBeat: () => (/* binding */ n)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/events */ \"(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js\");\n\n\n\nclass n extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_2__.IEvents {\n    constructor(e){\n        super();\n    }\n}\nconst s = _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_SECONDS, r = {\n    pulse: \"heartbeat_pulse\"\n};\nclass i extends n {\n    constructor(e){\n        super(e), this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.interval = s, this.interval = e?.interval || s;\n    }\n    static async init(e) {\n        const t = new i(e);\n        return await t.init(), t;\n    }\n    async init() {\n        await this.initialize();\n    }\n    stop() {\n        clearInterval(this.intervalRef);\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async initialize() {\n        this.intervalRef = setInterval(()=>this.pulse(), (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(this.interval));\n    }\n    pulse() {\n        this.events.emit(r.pulse);\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvaGVhcnRiZWF0L2Rpc3QvaW5kZXguZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXNDO0FBQXNFO0FBQWdEO0FBQUEsTUFBTVEsVUFBVUQsMERBQUNBO0lBQUNFLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUs7SUFBRTtBQUFDO0FBQUMsTUFBTUMsSUFBRVIsNkRBQUNBLEVBQUNTLElBQUU7SUFBQ0MsT0FBTTtBQUFpQjtBQUFFLE1BQU1DLFVBQVVOO0lBQUVDLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUssQ0FBQ0EsSUFBRyxJQUFJLENBQUNLLE1BQU0sR0FBQyxJQUFJZCxnREFBQ0EsRUFBQyxJQUFJLENBQUNlLFFBQVEsR0FBQ0wsR0FBRSxJQUFJLENBQUNLLFFBQVEsR0FBQ04sR0FBR00sWUFBVUw7SUFBQztJQUFDLGFBQWFNLEtBQUtQLENBQUMsRUFBQztRQUFDLE1BQU1RLElBQUUsSUFBSUosRUFBRUo7UUFBRyxPQUFPLE1BQU1RLEVBQUVELElBQUksSUFBR0M7SUFBQztJQUFDLE1BQU1ELE9BQU07UUFBQyxNQUFNLElBQUksQ0FBQ0UsVUFBVTtJQUFFO0lBQUNDLE9BQU07UUFBQ0MsY0FBYyxJQUFJLENBQUNDLFdBQVc7SUFBQztJQUFDQyxHQUFHYixDQUFDLEVBQUNRLENBQUMsRUFBQztRQUFDLElBQUksQ0FBQ0gsTUFBTSxDQUFDUSxFQUFFLENBQUNiLEdBQUVRO0lBQUU7SUFBQ00sS0FBS2QsQ0FBQyxFQUFDUSxDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUNILE1BQU0sQ0FBQ1MsSUFBSSxDQUFDZCxHQUFFUTtJQUFFO0lBQUNPLElBQUlmLENBQUMsRUFBQ1EsQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDSCxNQUFNLENBQUNVLEdBQUcsQ0FBQ2YsR0FBRVE7SUFBRTtJQUFDUSxlQUFlaEIsQ0FBQyxFQUFDUSxDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUNILE1BQU0sQ0FBQ1csY0FBYyxDQUFDaEIsR0FBRVE7SUFBRTtJQUFDLE1BQU1DLGFBQVk7UUFBQyxJQUFJLENBQUNHLFdBQVcsR0FBQ0ssWUFBWSxJQUFJLElBQUksQ0FBQ2QsS0FBSyxJQUFHUixrRUFBQ0EsQ0FBQyxJQUFJLENBQUNXLFFBQVE7SUFBRTtJQUFDSCxRQUFPO1FBQUMsSUFBSSxDQUFDRSxNQUFNLENBQUNhLElBQUksQ0FBQ2hCLEVBQUVDLEtBQUs7SUFBQztBQUFDO0FBQXNGLENBQ3h6QixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvaGVhcnRiZWF0L2Rpc3QvaW5kZXguZXMuanM/ZDMwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7RXZlbnRFbWl0dGVyIGFzIGF9ZnJvbVwiZXZlbnRzXCI7aW1wb3J0e0ZJVkVfU0VDT05EUyBhcyBvLHRvTWlsaXNlY29uZHMgYXMgbH1mcm9tXCJAd2FsbGV0Y29ubmVjdC90aW1lXCI7aW1wb3J0e0lFdmVudHMgYXMgdn1mcm9tXCJAd2FsbGV0Y29ubmVjdC9ldmVudHNcIjtjbGFzcyBuIGV4dGVuZHMgdntjb25zdHJ1Y3RvcihlKXtzdXBlcigpfX1jb25zdCBzPW8scj17cHVsc2U6XCJoZWFydGJlYXRfcHVsc2VcIn07Y2xhc3MgaSBleHRlbmRzIG57Y29uc3RydWN0b3IoZSl7c3VwZXIoZSksdGhpcy5ldmVudHM9bmV3IGEsdGhpcy5pbnRlcnZhbD1zLHRoaXMuaW50ZXJ2YWw9ZT8uaW50ZXJ2YWx8fHN9c3RhdGljIGFzeW5jIGluaXQoZSl7Y29uc3QgdD1uZXcgaShlKTtyZXR1cm4gYXdhaXQgdC5pbml0KCksdH1hc3luYyBpbml0KCl7YXdhaXQgdGhpcy5pbml0aWFsaXplKCl9c3RvcCgpe2NsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbFJlZil9b24oZSx0KXt0aGlzLmV2ZW50cy5vbihlLHQpfW9uY2UoZSx0KXt0aGlzLmV2ZW50cy5vbmNlKGUsdCl9b2ZmKGUsdCl7dGhpcy5ldmVudHMub2ZmKGUsdCl9cmVtb3ZlTGlzdGVuZXIoZSx0KXt0aGlzLmV2ZW50cy5yZW1vdmVMaXN0ZW5lcihlLHQpfWFzeW5jIGluaXRpYWxpemUoKXt0aGlzLmludGVydmFsUmVmPXNldEludGVydmFsKCgpPT50aGlzLnB1bHNlKCksbCh0aGlzLmludGVydmFsKSl9cHVsc2UoKXt0aGlzLmV2ZW50cy5lbWl0KHIucHVsc2UpfX1leHBvcnR7ciBhcyBIRUFSVEJFQVRfRVZFTlRTLHMgYXMgSEVBUlRCRUFUX0lOVEVSVkFMLGkgYXMgSGVhcnRCZWF0LG4gYXMgSUhlYXJ0QmVhdH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJhIiwiRklWRV9TRUNPTkRTIiwibyIsInRvTWlsaXNlY29uZHMiLCJsIiwiSUV2ZW50cyIsInYiLCJuIiwiY29uc3RydWN0b3IiLCJlIiwicyIsInIiLCJwdWxzZSIsImkiLCJldmVudHMiLCJpbnRlcnZhbCIsImluaXQiLCJ0IiwiaW5pdGlhbGl6ZSIsInN0b3AiLCJjbGVhckludGVydmFsIiwiaW50ZXJ2YWxSZWYiLCJvbiIsIm9uY2UiLCJvZmYiLCJyZW1vdmVMaXN0ZW5lciIsInNldEludGVydmFsIiwiZW1pdCIsIkhFQVJUQkVBVF9FVkVOVFMiLCJIRUFSVEJFQVRfSU5URVJWQUwiLCJIZWFydEJlYXQiLCJJSGVhcnRCZWF0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/heartbeat/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpConnection: () => (/* binding */ f),\n/* harmony export */   \"default\": () => (/* binding */ f)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cross-fetch */ \"(ssr)/./node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cross_fetch__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\nvar P = Object.defineProperty, w = Object.defineProperties, E = Object.getOwnPropertyDescriptors, c = Object.getOwnPropertySymbols, L = Object.prototype.hasOwnProperty, O = Object.prototype.propertyIsEnumerable, l = (r, t, e)=>t in r ? P(r, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : r[t] = e, p = (r, t)=>{\n    for(var e in t || (t = {}))L.call(t, e) && l(r, e, t[e]);\n    if (c) for (var e of c(t))O.call(t, e) && l(r, e, t[e]);\n    return r;\n}, v = (r, t)=>w(r, E(t));\nconst j = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n}, T = \"POST\", d = {\n    headers: j,\n    method: T\n}, g = 10;\nclass f {\n    constructor(t, e = !1){\n        if (this.url = t, this.disableProviderPing = e, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.isAvailable = !1, this.registering = !1, !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(t)) throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);\n        this.url = t, this.disableProviderPing = e;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(t, e) {\n        this.events.on(t, e);\n    }\n    once(t, e) {\n        this.events.once(t, e);\n    }\n    off(t, e) {\n        this.events.off(t, e);\n    }\n    removeListener(t, e) {\n        this.events.removeListener(t, e);\n    }\n    async open(t = this.url) {\n        await this.register(t);\n    }\n    async close() {\n        if (!this.isAvailable) throw new Error(\"Connection already closed\");\n        this.onClose();\n    }\n    async send(t) {\n        this.isAvailable || await this.register();\n        try {\n            const e = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)(t), s = await (await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(this.url, v(p({}, d), {\n                body: e\n            }))).json();\n            this.onPayload({\n                data: s\n            });\n        } catch (e) {\n            this.onError(t.id, e);\n        }\n    }\n    async register(t = this.url) {\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isHttpUrl)(t)) throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);\n        if (this.registering) {\n            const e = this.events.getMaxListeners();\n            return (this.events.listenerCount(\"register_error\") >= e || this.events.listenerCount(\"open\") >= e) && this.events.setMaxListeners(e + 1), new Promise((s, i)=>{\n                this.events.once(\"register_error\", (n)=>{\n                    this.resetMaxListeners(), i(n);\n                }), this.events.once(\"open\", ()=>{\n                    if (this.resetMaxListeners(), typeof this.isAvailable > \"u\") return i(new Error(\"HTTP connection is missing or invalid\"));\n                    s();\n                });\n            });\n        }\n        this.url = t, this.registering = !0;\n        try {\n            if (!this.disableProviderPing) {\n                const e = (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonStringify)({\n                    id: 1,\n                    jsonrpc: \"2.0\",\n                    method: \"test\",\n                    params: []\n                });\n                await cross_fetch__WEBPACK_IMPORTED_MODULE_1___default()(t, v(p({}, d), {\n                    body: e\n                }));\n            }\n            this.onOpen();\n        } catch (e) {\n            const s = this.parseError(e);\n            throw this.events.emit(\"register_error\", s), this.onClose(), s;\n        }\n    }\n    onOpen() {\n        this.isAvailable = !0, this.registering = !1, this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = !1, this.registering = !1, this.events.emit(\"close\");\n    }\n    onPayload(t) {\n        if (typeof t.data > \"u\") return;\n        const e = typeof t.data == \"string\" ? (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_2__.safeJsonParse)(t.data) : t.data;\n        this.events.emit(\"payload\", e);\n    }\n    onError(t, e) {\n        const s = this.parseError(e), i = s.message || s.toString(), n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(t, i);\n        this.events.emit(\"payload\", n);\n    }\n    parseError(t, e = this.url) {\n        return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.parseConnectionError)(t, e, \"HTTP\");\n    }\n    resetMaxListeners() {\n        this.events.getMaxListeners() > g && this.events.setMaxListeners(g);\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonRpcProvider: () => (/* binding */ o),\n/* harmony export */   \"default\": () => (/* binding */ o)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\nclass o extends _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.IJsonRpcProvider {\n    constructor(t){\n        super(t), this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.hasRegisteredEventListeners = !1, this.connection = this.setConnection(t), this.connection.connected && this.registerEventListeners();\n    }\n    async connect(t = this.connection) {\n        await this.open(t);\n    }\n    async disconnect() {\n        await this.close();\n    }\n    on(t, e) {\n        this.events.on(t, e);\n    }\n    once(t, e) {\n        this.events.once(t, e);\n    }\n    off(t, e) {\n        this.events.off(t, e);\n    }\n    removeListener(t, e) {\n        this.events.removeListener(t, e);\n    }\n    async request(t, e) {\n        return this.requestStrict((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.formatJsonRpcRequest)(t.method, t.params || [], t.id || (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.getBigIntRpcId)().toString()), e);\n    }\n    async requestStrict(t, e) {\n        return new Promise(async (i, s)=>{\n            if (!this.connection.connected) try {\n                await this.open();\n            } catch (n) {\n                s(n);\n            }\n            this.events.on(`${t.id}`, (n)=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcError)(n) ? s(n.error) : i(n.result);\n            });\n            try {\n                await this.connection.send(t, e);\n            } catch (n) {\n                s(n);\n            }\n        });\n    }\n    setConnection(t = this.connection) {\n        return t;\n    }\n    onPayload(t) {\n        this.events.emit(\"payload\", t), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_1__.isJsonRpcResponse)(t) ? this.events.emit(`${t.id}`, t) : this.events.emit(\"message\", {\n            type: t.method,\n            data: t.params\n        });\n    }\n    onClose(t) {\n        t && t.code === 3e3 && this.events.emit(\"error\", new Error(`WebSocket connection closed abnormally with code: ${t.code} ${t.reason ? `(${t.reason})` : \"\"}`)), this.events.emit(\"disconnect\");\n    }\n    async open(t = this.connection) {\n        this.connection === t && this.connection.connected || (this.connection.connected && this.close(), typeof t == \"string\" && (await this.connection.open(t), t = this.connection), this.connection = this.setConnection(t), await this.connection.open(), this.registerEventListeners(), this.events.emit(\"connect\"));\n    }\n    async close() {\n        await this.connection.close();\n    }\n    registerEventListeners() {\n        this.hasRegisteredEventListeners || (this.connection.on(\"payload\", (t)=>this.onPayload(t)), this.connection.on(\"close\", (t)=>this.onClose(t)), this.connection.on(\"error\", (t)=>this.events.emit(\"error\", t)), this.connection.on(\"register_error\", (t)=>this.onClose()), this.hasRegisteredEventListeners = !0);\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy1wcm92aWRlci9kaXN0L2luZGV4LmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNDO0FBQXlKO0FBQUEsTUFBTVksVUFBVVQsMEVBQUNBO0lBQUNVLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUssQ0FBQ0EsSUFBRyxJQUFJLENBQUNDLE1BQU0sR0FBQyxJQUFJZCxnREFBQ0EsRUFBQyxJQUFJLENBQUNlLDJCQUEyQixHQUFDLENBQUMsR0FBRSxJQUFJLENBQUNDLFVBQVUsR0FBQyxJQUFJLENBQUNDLGFBQWEsQ0FBQ0osSUFBRyxJQUFJLENBQUNHLFVBQVUsQ0FBQ0UsU0FBUyxJQUFFLElBQUksQ0FBQ0Msc0JBQXNCO0lBQUU7SUFBQyxNQUFNQyxRQUFRUCxJQUFFLElBQUksQ0FBQ0csVUFBVSxFQUFDO1FBQUMsTUFBTSxJQUFJLENBQUNLLElBQUksQ0FBQ1I7SUFBRTtJQUFDLE1BQU1TLGFBQVk7UUFBQyxNQUFNLElBQUksQ0FBQ0MsS0FBSztJQUFFO0lBQUNDLEdBQUdYLENBQUMsRUFBQ1ksQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDWCxNQUFNLENBQUNVLEVBQUUsQ0FBQ1gsR0FBRVk7SUFBRTtJQUFDQyxLQUFLYixDQUFDLEVBQUNZLENBQUMsRUFBQztRQUFDLElBQUksQ0FBQ1gsTUFBTSxDQUFDWSxJQUFJLENBQUNiLEdBQUVZO0lBQUU7SUFBQ0UsSUFBSWQsQ0FBQyxFQUFDWSxDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUNYLE1BQU0sQ0FBQ2EsR0FBRyxDQUFDZCxHQUFFWTtJQUFFO0lBQUNHLGVBQWVmLENBQUMsRUFBQ1ksQ0FBQyxFQUFDO1FBQUMsSUFBSSxDQUFDWCxNQUFNLENBQUNjLGNBQWMsQ0FBQ2YsR0FBRVk7SUFBRTtJQUFDLE1BQU1JLFFBQVFoQixDQUFDLEVBQUNZLENBQUMsRUFBQztRQUFDLE9BQU8sSUFBSSxDQUFDSyxhQUFhLENBQUMxQixrRkFBQ0EsQ0FBQ1MsRUFBRWtCLE1BQU0sRUFBQ2xCLEVBQUVtQixNQUFNLElBQUUsRUFBRSxFQUFDbkIsRUFBRW9CLEVBQUUsSUFBRTNCLDRFQUFDQSxHQUFHNEIsUUFBUSxLQUFJVDtJQUFFO0lBQUMsTUFBTUssY0FBY2pCLENBQUMsRUFBQ1ksQ0FBQyxFQUFDO1FBQUMsT0FBTyxJQUFJVSxRQUFRLE9BQU1DLEdBQUVDO1lBQUssSUFBRyxDQUFDLElBQUksQ0FBQ3JCLFVBQVUsQ0FBQ0UsU0FBUyxFQUFDLElBQUc7Z0JBQUMsTUFBTSxJQUFJLENBQUNHLElBQUk7WUFBRSxFQUFDLE9BQU1pQixHQUFFO2dCQUFDRCxFQUFFQztZQUFFO1lBQUMsSUFBSSxDQUFDeEIsTUFBTSxDQUFDVSxFQUFFLENBQUMsQ0FBQyxFQUFFWCxFQUFFb0IsRUFBRSxDQUFDLENBQUMsRUFBQ0ssQ0FBQUE7Z0JBQUk5Qiw0RUFBQ0EsQ0FBQzhCLEtBQUdELEVBQUVDLEVBQUVDLEtBQUssSUFBRUgsRUFBRUUsRUFBRUUsTUFBTTtZQUFDO1lBQUcsSUFBRztnQkFBQyxNQUFNLElBQUksQ0FBQ3hCLFVBQVUsQ0FBQ3lCLElBQUksQ0FBQzVCLEdBQUVZO1lBQUUsRUFBQyxPQUFNYSxHQUFFO2dCQUFDRCxFQUFFQztZQUFFO1FBQUM7SUFBRTtJQUFDckIsY0FBY0osSUFBRSxJQUFJLENBQUNHLFVBQVUsRUFBQztRQUFDLE9BQU9IO0lBQUM7SUFBQzZCLFVBQVU3QixDQUFDLEVBQUM7UUFBQyxJQUFJLENBQUNDLE1BQU0sQ0FBQzZCLElBQUksQ0FBQyxXQUFVOUIsSUFBR0gsK0VBQUNBLENBQUNHLEtBQUcsSUFBSSxDQUFDQyxNQUFNLENBQUM2QixJQUFJLENBQUMsQ0FBQyxFQUFFOUIsRUFBRW9CLEVBQUUsQ0FBQyxDQUFDLEVBQUNwQixLQUFHLElBQUksQ0FBQ0MsTUFBTSxDQUFDNkIsSUFBSSxDQUFDLFdBQVU7WUFBQ0MsTUFBSy9CLEVBQUVrQixNQUFNO1lBQUNjLE1BQUtoQyxFQUFFbUIsTUFBTTtRQUFBO0lBQUU7SUFBQ2MsUUFBUWpDLENBQUMsRUFBQztRQUFDQSxLQUFHQSxFQUFFa0MsSUFBSSxLQUFHLE9BQUssSUFBSSxDQUFDakMsTUFBTSxDQUFDNkIsSUFBSSxDQUFDLFNBQVEsSUFBSUssTUFBTSxDQUFDLGtEQUFrRCxFQUFFbkMsRUFBRWtDLElBQUksQ0FBQyxDQUFDLEVBQUVsQyxFQUFFb0MsTUFBTSxHQUFDLENBQUMsQ0FBQyxFQUFFcEMsRUFBRW9DLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBQyxHQUFHLENBQUMsSUFBRyxJQUFJLENBQUNuQyxNQUFNLENBQUM2QixJQUFJLENBQUM7SUFBYTtJQUFDLE1BQU10QixLQUFLUixJQUFFLElBQUksQ0FBQ0csVUFBVSxFQUFDO1FBQUMsSUFBSSxDQUFDQSxVQUFVLEtBQUdILEtBQUcsSUFBSSxDQUFDRyxVQUFVLENBQUNFLFNBQVMsSUFBRyxLQUFJLENBQUNGLFVBQVUsQ0FBQ0UsU0FBUyxJQUFFLElBQUksQ0FBQ0ssS0FBSyxJQUFHLE9BQU9WLEtBQUcsWUFBVyxPQUFNLElBQUksQ0FBQ0csVUFBVSxDQUFDSyxJQUFJLENBQUNSLElBQUdBLElBQUUsSUFBSSxDQUFDRyxVQUFVLEdBQUUsSUFBSSxDQUFDQSxVQUFVLEdBQUMsSUFBSSxDQUFDQyxhQUFhLENBQUNKLElBQUcsTUFBTSxJQUFJLENBQUNHLFVBQVUsQ0FBQ0ssSUFBSSxJQUFHLElBQUksQ0FBQ0Ysc0JBQXNCLElBQUcsSUFBSSxDQUFDTCxNQUFNLENBQUM2QixJQUFJLENBQUMsVUFBUztJQUFFO0lBQUMsTUFBTXBCLFFBQU87UUFBQyxNQUFNLElBQUksQ0FBQ1AsVUFBVSxDQUFDTyxLQUFLO0lBQUU7SUFBQ0oseUJBQXdCO1FBQUMsSUFBSSxDQUFDSiwyQkFBMkIsSUFBRyxLQUFJLENBQUNDLFVBQVUsQ0FBQ1EsRUFBRSxDQUFDLFdBQVVYLENBQUFBLElBQUcsSUFBSSxDQUFDNkIsU0FBUyxDQUFDN0IsS0FBSSxJQUFJLENBQUNHLFVBQVUsQ0FBQ1EsRUFBRSxDQUFDLFNBQVFYLENBQUFBLElBQUcsSUFBSSxDQUFDaUMsT0FBTyxDQUFDakMsS0FBSSxJQUFJLENBQUNHLFVBQVUsQ0FBQ1EsRUFBRSxDQUFDLFNBQVFYLENBQUFBLElBQUcsSUFBSSxDQUFDQyxNQUFNLENBQUM2QixJQUFJLENBQUMsU0FBUTlCLEtBQUksSUFBSSxDQUFDRyxVQUFVLENBQUNRLEVBQUUsQ0FBQyxrQkFBaUJYLENBQUFBLElBQUcsSUFBSSxDQUFDaUMsT0FBTyxLQUFJLElBQUksQ0FBQy9CLDJCQUEyQixHQUFDLENBQUM7SUFBRTtBQUFDO0FBQTJDLENBQ3IrRCxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy1wcm92aWRlci9kaXN0L2luZGV4LmVzLmpzPzdlZTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0e0V2ZW50RW1pdHRlciBhcyBjfWZyb21cImV2ZW50c1wiO2ltcG9ydHtJSnNvblJwY1Byb3ZpZGVyIGFzIHIsZm9ybWF0SnNvblJwY1JlcXVlc3QgYXMgaCxnZXRCaWdJbnRScGNJZCBhcyBhLGlzSnNvblJwY0Vycm9yIGFzIGQsaXNKc29uUnBjUmVzcG9uc2UgYXMgdn1mcm9tXCJAd2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzXCI7Y2xhc3MgbyBleHRlbmRzIHJ7Y29uc3RydWN0b3IodCl7c3VwZXIodCksdGhpcy5ldmVudHM9bmV3IGMsdGhpcy5oYXNSZWdpc3RlcmVkRXZlbnRMaXN0ZW5lcnM9ITEsdGhpcy5jb25uZWN0aW9uPXRoaXMuc2V0Q29ubmVjdGlvbih0KSx0aGlzLmNvbm5lY3Rpb24uY29ubmVjdGVkJiZ0aGlzLnJlZ2lzdGVyRXZlbnRMaXN0ZW5lcnMoKX1hc3luYyBjb25uZWN0KHQ9dGhpcy5jb25uZWN0aW9uKXthd2FpdCB0aGlzLm9wZW4odCl9YXN5bmMgZGlzY29ubmVjdCgpe2F3YWl0IHRoaXMuY2xvc2UoKX1vbih0LGUpe3RoaXMuZXZlbnRzLm9uKHQsZSl9b25jZSh0LGUpe3RoaXMuZXZlbnRzLm9uY2UodCxlKX1vZmYodCxlKXt0aGlzLmV2ZW50cy5vZmYodCxlKX1yZW1vdmVMaXN0ZW5lcih0LGUpe3RoaXMuZXZlbnRzLnJlbW92ZUxpc3RlbmVyKHQsZSl9YXN5bmMgcmVxdWVzdCh0LGUpe3JldHVybiB0aGlzLnJlcXVlc3RTdHJpY3QoaCh0Lm1ldGhvZCx0LnBhcmFtc3x8W10sdC5pZHx8YSgpLnRvU3RyaW5nKCkpLGUpfWFzeW5jIHJlcXVlc3RTdHJpY3QodCxlKXtyZXR1cm4gbmV3IFByb21pc2UoYXN5bmMoaSxzKT0+e2lmKCF0aGlzLmNvbm5lY3Rpb24uY29ubmVjdGVkKXRyeXthd2FpdCB0aGlzLm9wZW4oKX1jYXRjaChuKXtzKG4pfXRoaXMuZXZlbnRzLm9uKGAke3QuaWR9YCxuPT57ZChuKT9zKG4uZXJyb3IpOmkobi5yZXN1bHQpfSk7dHJ5e2F3YWl0IHRoaXMuY29ubmVjdGlvbi5zZW5kKHQsZSl9Y2F0Y2gobil7cyhuKX19KX1zZXRDb25uZWN0aW9uKHQ9dGhpcy5jb25uZWN0aW9uKXtyZXR1cm4gdH1vblBheWxvYWQodCl7dGhpcy5ldmVudHMuZW1pdChcInBheWxvYWRcIix0KSx2KHQpP3RoaXMuZXZlbnRzLmVtaXQoYCR7dC5pZH1gLHQpOnRoaXMuZXZlbnRzLmVtaXQoXCJtZXNzYWdlXCIse3R5cGU6dC5tZXRob2QsZGF0YTp0LnBhcmFtc30pfW9uQ2xvc2UodCl7dCYmdC5jb2RlPT09M2UzJiZ0aGlzLmV2ZW50cy5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoYFdlYlNvY2tldCBjb25uZWN0aW9uIGNsb3NlZCBhYm5vcm1hbGx5IHdpdGggY29kZTogJHt0LmNvZGV9ICR7dC5yZWFzb24/YCgke3QucmVhc29ufSlgOlwiXCJ9YCkpLHRoaXMuZXZlbnRzLmVtaXQoXCJkaXNjb25uZWN0XCIpfWFzeW5jIG9wZW4odD10aGlzLmNvbm5lY3Rpb24pe3RoaXMuY29ubmVjdGlvbj09PXQmJnRoaXMuY29ubmVjdGlvbi5jb25uZWN0ZWR8fCh0aGlzLmNvbm5lY3Rpb24uY29ubmVjdGVkJiZ0aGlzLmNsb3NlKCksdHlwZW9mIHQ9PVwic3RyaW5nXCImJihhd2FpdCB0aGlzLmNvbm5lY3Rpb24ub3Blbih0KSx0PXRoaXMuY29ubmVjdGlvbiksdGhpcy5jb25uZWN0aW9uPXRoaXMuc2V0Q29ubmVjdGlvbih0KSxhd2FpdCB0aGlzLmNvbm5lY3Rpb24ub3BlbigpLHRoaXMucmVnaXN0ZXJFdmVudExpc3RlbmVycygpLHRoaXMuZXZlbnRzLmVtaXQoXCJjb25uZWN0XCIpKX1hc3luYyBjbG9zZSgpe2F3YWl0IHRoaXMuY29ubmVjdGlvbi5jbG9zZSgpfXJlZ2lzdGVyRXZlbnRMaXN0ZW5lcnMoKXt0aGlzLmhhc1JlZ2lzdGVyZWRFdmVudExpc3RlbmVyc3x8KHRoaXMuY29ubmVjdGlvbi5vbihcInBheWxvYWRcIix0PT50aGlzLm9uUGF5bG9hZCh0KSksdGhpcy5jb25uZWN0aW9uLm9uKFwiY2xvc2VcIix0PT50aGlzLm9uQ2xvc2UodCkpLHRoaXMuY29ubmVjdGlvbi5vbihcImVycm9yXCIsdD0+dGhpcy5ldmVudHMuZW1pdChcImVycm9yXCIsdCkpLHRoaXMuY29ubmVjdGlvbi5vbihcInJlZ2lzdGVyX2Vycm9yXCIsdD0+dGhpcy5vbkNsb3NlKCkpLHRoaXMuaGFzUmVnaXN0ZXJlZEV2ZW50TGlzdGVuZXJzPSEwKX19ZXhwb3J0e28gYXMgSnNvblJwY1Byb3ZpZGVyLG8gYXMgZGVmYXVsdH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lcy5qcy5tYXBcbiJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJjIiwiSUpzb25ScGNQcm92aWRlciIsInIiLCJmb3JtYXRKc29uUnBjUmVxdWVzdCIsImgiLCJnZXRCaWdJbnRScGNJZCIsImEiLCJpc0pzb25ScGNFcnJvciIsImQiLCJpc0pzb25ScGNSZXNwb25zZSIsInYiLCJvIiwiY29uc3RydWN0b3IiLCJ0IiwiZXZlbnRzIiwiaGFzUmVnaXN0ZXJlZEV2ZW50TGlzdGVuZXJzIiwiY29ubmVjdGlvbiIsInNldENvbm5lY3Rpb24iLCJjb25uZWN0ZWQiLCJyZWdpc3RlckV2ZW50TGlzdGVuZXJzIiwiY29ubmVjdCIsIm9wZW4iLCJkaXNjb25uZWN0IiwiY2xvc2UiLCJvbiIsImUiLCJvbmNlIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJyZXF1ZXN0IiwicmVxdWVzdFN0cmljdCIsIm1ldGhvZCIsInBhcmFtcyIsImlkIiwidG9TdHJpbmciLCJQcm9taXNlIiwiaSIsInMiLCJuIiwiZXJyb3IiLCJyZXN1bHQiLCJzZW5kIiwib25QYXlsb2FkIiwiZW1pdCIsInR5cGUiLCJkYXRhIiwib25DbG9zZSIsImNvZGUiLCJFcnJvciIsInJlYXNvbiIsIkpzb25ScGNQcm92aWRlciIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* binding */ n),\n/* harmony export */   IEvents: () => (/* binding */ e),\n/* harmony export */   IJsonRpcConnection: () => (/* binding */ o),\n/* harmony export */   IJsonRpcProvider: () => (/* binding */ r)\n/* harmony export */ });\nclass e {\n}\nclass o extends e {\n    constructor(c){\n        super();\n    }\n}\nclass n extends e {\n    constructor(){\n        super();\n    }\n}\nclass r extends n {\n    constructor(c){\n        super();\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy10eXBlcy9kaXN0L2luZGV4LmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxNQUFNQTtBQUFFO0FBQUMsTUFBTUMsVUFBVUQ7SUFBRUUsWUFBWUMsQ0FBQyxDQUFDO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNQyxVQUFVSjtJQUFFRSxhQUFhO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNRyxVQUFVRDtJQUFFRixZQUFZQyxDQUFDLENBQUM7UUFBQyxLQUFLO0lBQUU7QUFBQztBQUE4RixDQUNuTyxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy10eXBlcy9kaXN0L2luZGV4LmVzLmpzP2IxMjkiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgZXt9Y2xhc3MgbyBleHRlbmRzIGV7Y29uc3RydWN0b3IoYyl7c3VwZXIoKX19Y2xhc3MgbiBleHRlbmRzIGV7Y29uc3RydWN0b3IoKXtzdXBlcigpfX1jbGFzcyByIGV4dGVuZHMgbntjb25zdHJ1Y3RvcihjKXtzdXBlcigpfX1leHBvcnR7biBhcyBJQmFzZUpzb25ScGNQcm92aWRlcixlIGFzIElFdmVudHMsbyBhcyBJSnNvblJwY0Nvbm5lY3Rpb24sciBhcyBJSnNvblJwY1Byb3ZpZGVyfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbImUiLCJvIiwiY29uc3RydWN0b3IiLCJjIiwibiIsInIiLCJJQmFzZUpzb25ScGNQcm92aWRlciIsIklFdmVudHMiLCJJSnNvblJwY0Nvbm5lY3Rpb24iLCJJSnNvblJwY1Byb3ZpZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ERROR: () => (/* binding */ DEFAULT_ERROR),\n/* harmony export */   INTERNAL_ERROR: () => (/* binding */ INTERNAL_ERROR),\n/* harmony export */   INVALID_PARAMS: () => (/* binding */ INVALID_PARAMS),\n/* harmony export */   INVALID_REQUEST: () => (/* binding */ INVALID_REQUEST),\n/* harmony export */   METHOD_NOT_FOUND: () => (/* binding */ METHOD_NOT_FOUND),\n/* harmony export */   PARSE_ERROR: () => (/* binding */ PARSE_ERROR),\n/* harmony export */   RESERVED_ERROR_CODES: () => (/* binding */ RESERVED_ERROR_CODES),\n/* harmony export */   SERVER_ERROR: () => (/* binding */ SERVER_ERROR),\n/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* binding */ SERVER_ERROR_CODE_RANGE),\n/* harmony export */   STANDARD_ERROR_MAP: () => (/* binding */ STANDARD_ERROR_MAP)\n/* harmony export */ });\nconst PARSE_ERROR = \"PARSE_ERROR\";\nconst INVALID_REQUEST = \"INVALID_REQUEST\";\nconst METHOD_NOT_FOUND = \"METHOD_NOT_FOUND\";\nconst INVALID_PARAMS = \"INVALID_PARAMS\";\nconst INTERNAL_ERROR = \"INTERNAL_ERROR\";\nconst SERVER_ERROR = \"SERVER_ERROR\";\nconst RESERVED_ERROR_CODES = [\n    -32700,\n    -32600,\n    -32601,\n    -32602,\n    -32603\n];\nconst SERVER_ERROR_CODE_RANGE = [\n    -32000,\n    -32099\n];\nconst STANDARD_ERROR_MAP = {\n    [PARSE_ERROR]: {\n        code: -32700,\n        message: \"Parse error\"\n    },\n    [INVALID_REQUEST]: {\n        code: -32600,\n        message: \"Invalid Request\"\n    },\n    [METHOD_NOT_FOUND]: {\n        code: -32601,\n        message: \"Method not found\"\n    },\n    [INVALID_PARAMS]: {\n        code: -32602,\n        message: \"Invalid params\"\n    },\n    [INTERNAL_ERROR]: {\n        code: -32603,\n        message: \"Internal error\"\n    },\n    [SERVER_ERROR]: {\n        code: -32000,\n        message: \"Server error\"\n    }\n};\nconst DEFAULT_ERROR = SERVER_ERROR; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFPLE1BQU1BLGNBQWMsY0FBYztBQUNsQyxNQUFNQyxrQkFBa0Isa0JBQWtCO0FBQzFDLE1BQU1DLG1CQUFtQixtQkFBbUI7QUFDNUMsTUFBTUMsaUJBQWlCLGlCQUFpQjtBQUN4QyxNQUFNQyxpQkFBaUIsaUJBQWlCO0FBQ3hDLE1BQU1DLGVBQWUsZUFBZTtBQUNwQyxNQUFNQyx1QkFBdUI7SUFBQyxDQUFDO0lBQU8sQ0FBQztJQUFPLENBQUM7SUFBTyxDQUFDO0lBQU8sQ0FBQztDQUFNLENBQUM7QUFDdEUsTUFBTUMsMEJBQTBCO0lBQUMsQ0FBQztJQUFPLENBQUM7Q0FBTSxDQUFDO0FBQ2pELE1BQU1DLHFCQUFxQjtJQUM5QixDQUFDUixZQUFZLEVBQUU7UUFBRVMsTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBYztJQUN0RCxDQUFDVCxnQkFBZ0IsRUFBRTtRQUFFUSxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFrQjtJQUM5RCxDQUFDUixpQkFBaUIsRUFBRTtRQUFFTyxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFtQjtJQUNoRSxDQUFDUCxlQUFlLEVBQUU7UUFBRU0sTUFBTSxDQUFDO1FBQU9DLFNBQVM7SUFBaUI7SUFDNUQsQ0FBQ04sZUFBZSxFQUFFO1FBQUVLLE1BQU0sQ0FBQztRQUFPQyxTQUFTO0lBQWlCO0lBQzVELENBQUNMLGFBQWEsRUFBRTtRQUFFSSxNQUFNLENBQUM7UUFBT0MsU0FBUztJQUFlO0FBQzVELEVBQUU7QUFDSyxNQUFNQyxnQkFBZ0JOLGFBQWEsQ0FDMUMscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9rZW5mdW5kLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vY29uc3RhbnRzLmpzPzljMDUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFBBUlNFX0VSUk9SID0gXCJQQVJTRV9FUlJPUlwiO1xuZXhwb3J0IGNvbnN0IElOVkFMSURfUkVRVUVTVCA9IFwiSU5WQUxJRF9SRVFVRVNUXCI7XG5leHBvcnQgY29uc3QgTUVUSE9EX05PVF9GT1VORCA9IFwiTUVUSE9EX05PVF9GT1VORFwiO1xuZXhwb3J0IGNvbnN0IElOVkFMSURfUEFSQU1TID0gXCJJTlZBTElEX1BBUkFNU1wiO1xuZXhwb3J0IGNvbnN0IElOVEVSTkFMX0VSUk9SID0gXCJJTlRFUk5BTF9FUlJPUlwiO1xuZXhwb3J0IGNvbnN0IFNFUlZFUl9FUlJPUiA9IFwiU0VSVkVSX0VSUk9SXCI7XG5leHBvcnQgY29uc3QgUkVTRVJWRURfRVJST1JfQ09ERVMgPSBbLTMyNzAwLCAtMzI2MDAsIC0zMjYwMSwgLTMyNjAyLCAtMzI2MDNdO1xuZXhwb3J0IGNvbnN0IFNFUlZFUl9FUlJPUl9DT0RFX1JBTkdFID0gWy0zMjAwMCwgLTMyMDk5XTtcbmV4cG9ydCBjb25zdCBTVEFOREFSRF9FUlJPUl9NQVAgPSB7XG4gICAgW1BBUlNFX0VSUk9SXTogeyBjb2RlOiAtMzI3MDAsIG1lc3NhZ2U6IFwiUGFyc2UgZXJyb3JcIiB9LFxuICAgIFtJTlZBTElEX1JFUVVFU1RdOiB7IGNvZGU6IC0zMjYwMCwgbWVzc2FnZTogXCJJbnZhbGlkIFJlcXVlc3RcIiB9LFxuICAgIFtNRVRIT0RfTk9UX0ZPVU5EXTogeyBjb2RlOiAtMzI2MDEsIG1lc3NhZ2U6IFwiTWV0aG9kIG5vdCBmb3VuZFwiIH0sXG4gICAgW0lOVkFMSURfUEFSQU1TXTogeyBjb2RlOiAtMzI2MDIsIG1lc3NhZ2U6IFwiSW52YWxpZCBwYXJhbXNcIiB9LFxuICAgIFtJTlRFUk5BTF9FUlJPUl06IHsgY29kZTogLTMyNjAzLCBtZXNzYWdlOiBcIkludGVybmFsIGVycm9yXCIgfSxcbiAgICBbU0VSVkVSX0VSUk9SXTogeyBjb2RlOiAtMzIwMDAsIG1lc3NhZ2U6IFwiU2VydmVyIGVycm9yXCIgfSxcbn07XG5leHBvcnQgY29uc3QgREVGQVVMVF9FUlJPUiA9IFNFUlZFUl9FUlJPUjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOlsiUEFSU0VfRVJST1IiLCJJTlZBTElEX1JFUVVFU1QiLCJNRVRIT0RfTk9UX0ZPVU5EIiwiSU5WQUxJRF9QQVJBTVMiLCJJTlRFUk5BTF9FUlJPUiIsIlNFUlZFUl9FUlJPUiIsIlJFU0VSVkVEX0VSUk9SX0NPREVTIiwiU0VSVkVSX0VSUk9SX0NPREVfUkFOR0UiLCJTVEFOREFSRF9FUlJPUl9NQVAiLCJjb2RlIiwibWVzc2FnZSIsIkRFRkFVTFRfRVJST1IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNodeJs: () => (/* binding */ isNodeJs)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/environment */ \"(ssr)/./node_modules/@walletconnect/environment/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"isNodeJs\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\nconst isNodeJs = _walletconnect_environment__WEBPACK_IMPORTED_MODULE_0__.isNode;\n //# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9lbnYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9EO0FBQzdDLE1BQU1DLFdBQVdELDhEQUFNQSxDQUFDO0FBQ1ksQ0FDM0MsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9rZW5mdW5kLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vZW52LmpzPzY4NGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOb2RlIH0gZnJvbSBcIkB3YWxsZXRjb25uZWN0L2Vudmlyb25tZW50XCI7XG5leHBvcnQgY29uc3QgaXNOb2RlSnMgPSBpc05vZGU7XG5leHBvcnQgKiBmcm9tIFwiQHdhbGxldGNvbm5lY3QvZW52aXJvbm1lbnRcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudi5qcy5tYXAiXSwibmFtZXMiOlsiaXNOb2RlIiwiaXNOb2RlSnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getError: () => (/* binding */ getError),\n/* harmony export */   getErrorByCode: () => (/* binding */ getErrorByCode),\n/* harmony export */   isReservedErrorCode: () => (/* binding */ isReservedErrorCode),\n/* harmony export */   isServerErrorCode: () => (/* binding */ isServerErrorCode),\n/* harmony export */   isValidErrorCode: () => (/* binding */ isValidErrorCode),\n/* harmony export */   parseConnectionError: () => (/* binding */ parseConnectionError),\n/* harmony export */   validateJsonRpcError: () => (/* binding */ validateJsonRpcError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n\nfunction isServerErrorCode(code) {\n    return code <= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[0] && code >= _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE[1];\n}\nfunction isReservedErrorCode(code) {\n    return _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES.includes(code);\n}\nfunction isValidErrorCode(code) {\n    return typeof code === \"number\";\n}\nfunction getError(type) {\n    if (!Object.keys(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).includes(type)) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];\n    }\n    return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[type];\n}\nfunction getErrorByCode(code) {\n    const match = Object.values(_constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP).find((e)=>e.code === code);\n    if (!match) {\n        return _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR];\n    }\n    return match;\n}\nfunction validateJsonRpcError(response) {\n    if (typeof response.error.code === \"undefined\") {\n        return {\n            valid: false,\n            error: \"Missing code for JSON-RPC error\"\n        };\n    }\n    if (typeof response.error.message === \"undefined\") {\n        return {\n            valid: false,\n            error: \"Missing message for JSON-RPC error\"\n        };\n    }\n    if (!isValidErrorCode(response.error.code)) {\n        return {\n            valid: false,\n            error: `Invalid error code type for JSON-RPC: ${response.error.code}`\n        };\n    }\n    if (isReservedErrorCode(response.error.code)) {\n        const error = getErrorByCode(response.error.code);\n        if (error.message !== _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP[_constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR].message && response.error.message === error.message) {\n            return {\n                valid: false,\n                error: `Invalid error code message for JSON-RPC: ${response.error.code}`\n            };\n        }\n    }\n    return {\n        valid: true\n    };\n}\nfunction parseConnectionError(e, url, type) {\n    return e.message.includes(\"getaddrinfo ENOTFOUND\") || e.message.includes(\"connect ECONNREFUSED\") ? new Error(`Unavailable ${type} RPC url at ${url}`) : e;\n} //# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFnSDtBQUN6RyxTQUFTSSxrQkFBa0JDLElBQUk7SUFDbEMsT0FBT0EsUUFBUUwsK0RBQXVCLENBQUMsRUFBRSxJQUFJSyxRQUFRTCwrREFBdUIsQ0FBQyxFQUFFO0FBQ25GO0FBQ08sU0FBU00sb0JBQW9CRCxJQUFJO0lBQ3BDLE9BQU9KLDREQUFvQkEsQ0FBQ00sUUFBUSxDQUFDRjtBQUN6QztBQUNPLFNBQVNHLGlCQUFpQkgsSUFBSTtJQUNqQyxPQUFPLE9BQU9BLFNBQVM7QUFDM0I7QUFDTyxTQUFTSSxTQUFTQyxJQUFJO0lBQ3pCLElBQUksQ0FBQ0MsT0FBT0MsSUFBSSxDQUFDViwwREFBa0JBLEVBQUVLLFFBQVEsQ0FBQ0csT0FBTztRQUNqRCxPQUFPUiwwREFBa0IsQ0FBQ0MscURBQWFBLENBQUM7SUFDNUM7SUFDQSxPQUFPRCwwREFBa0IsQ0FBQ1EsS0FBSztBQUNuQztBQUNPLFNBQVNHLGVBQWVSLElBQUk7SUFDL0IsTUFBTVMsUUFBUUgsT0FBT0ksTUFBTSxDQUFDYiwwREFBa0JBLEVBQUVjLElBQUksQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRVosSUFBSSxLQUFLQTtJQUNyRSxJQUFJLENBQUNTLE9BQU87UUFDUixPQUFPWiwwREFBa0IsQ0FBQ0MscURBQWFBLENBQUM7SUFDNUM7SUFDQSxPQUFPVztBQUNYO0FBQ08sU0FBU0kscUJBQXFCQyxRQUFRO0lBQ3pDLElBQUksT0FBT0EsU0FBU0MsS0FBSyxDQUFDZixJQUFJLEtBQUssYUFBYTtRQUM1QyxPQUFPO1lBQUVnQixPQUFPO1lBQU9ELE9BQU87UUFBa0M7SUFDcEU7SUFDQSxJQUFJLE9BQU9ELFNBQVNDLEtBQUssQ0FBQ0UsT0FBTyxLQUFLLGFBQWE7UUFDL0MsT0FBTztZQUFFRCxPQUFPO1lBQU9ELE9BQU87UUFBcUM7SUFDdkU7SUFDQSxJQUFJLENBQUNaLGlCQUFpQlcsU0FBU0MsS0FBSyxDQUFDZixJQUFJLEdBQUc7UUFDeEMsT0FBTztZQUNIZ0IsT0FBTztZQUNQRCxPQUFPLENBQUMsc0NBQXNDLEVBQUVELFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxDQUFDLENBQUM7UUFDekU7SUFDSjtJQUNBLElBQUlDLG9CQUFvQmEsU0FBU0MsS0FBSyxDQUFDZixJQUFJLEdBQUc7UUFDMUMsTUFBTWUsUUFBUVAsZUFBZU0sU0FBU0MsS0FBSyxDQUFDZixJQUFJO1FBQ2hELElBQUllLE1BQU1FLE9BQU8sS0FBS3BCLDBEQUFrQixDQUFDQyxxREFBYUEsQ0FBQyxDQUFDbUIsT0FBTyxJQUMzREgsU0FBU0MsS0FBSyxDQUFDRSxPQUFPLEtBQUtGLE1BQU1FLE9BQU8sRUFBRTtZQUMxQyxPQUFPO2dCQUNIRCxPQUFPO2dCQUNQRCxPQUFPLENBQUMseUNBQXlDLEVBQUVELFNBQVNDLEtBQUssQ0FBQ2YsSUFBSSxDQUFDLENBQUM7WUFDNUU7UUFDSjtJQUNKO0lBQ0EsT0FBTztRQUFFZ0IsT0FBTztJQUFLO0FBQ3pCO0FBQ08sU0FBU0UscUJBQXFCTixDQUFDLEVBQUVPLEdBQUcsRUFBRWQsSUFBSTtJQUM3QyxPQUFPTyxFQUFFSyxPQUFPLENBQUNmLFFBQVEsQ0FBQyw0QkFBNEJVLEVBQUVLLE9BQU8sQ0FBQ2YsUUFBUSxDQUFDLDBCQUNuRSxJQUFJa0IsTUFBTSxDQUFDLFlBQVksRUFBRWYsS0FBSyxZQUFZLEVBQUVjLElBQUksQ0FBQyxJQUNqRFA7QUFDVixFQUNBLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rva2VuZnVuZC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9qc29ucnBjLXV0aWxzL2Rpc3QvZXNtL2Vycm9yLmpzPzU5NTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU0VSVkVSX0VSUk9SX0NPREVfUkFOR0UsIFJFU0VSVkVEX0VSUk9SX0NPREVTLCBTVEFOREFSRF9FUlJPUl9NQVAsIERFRkFVTFRfRVJST1IsIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5leHBvcnQgZnVuY3Rpb24gaXNTZXJ2ZXJFcnJvckNvZGUoY29kZSkge1xuICAgIHJldHVybiBjb2RlIDw9IFNFUlZFUl9FUlJPUl9DT0RFX1JBTkdFWzBdICYmIGNvZGUgPj0gU0VSVkVSX0VSUk9SX0NPREVfUkFOR0VbMV07XG59XG5leHBvcnQgZnVuY3Rpb24gaXNSZXNlcnZlZEVycm9yQ29kZShjb2RlKSB7XG4gICAgcmV0dXJuIFJFU0VSVkVEX0VSUk9SX0NPREVTLmluY2x1ZGVzKGNvZGUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRFcnJvckNvZGUoY29kZSkge1xuICAgIHJldHVybiB0eXBlb2YgY29kZSA9PT0gXCJudW1iZXJcIjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRFcnJvcih0eXBlKSB7XG4gICAgaWYgKCFPYmplY3Qua2V5cyhTVEFOREFSRF9FUlJPUl9NQVApLmluY2x1ZGVzKHR5cGUpKSB7XG4gICAgICAgIHJldHVybiBTVEFOREFSRF9FUlJPUl9NQVBbREVGQVVMVF9FUlJPUl07XG4gICAgfVxuICAgIHJldHVybiBTVEFOREFSRF9FUlJPUl9NQVBbdHlwZV07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RXJyb3JCeUNvZGUoY29kZSkge1xuICAgIGNvbnN0IG1hdGNoID0gT2JqZWN0LnZhbHVlcyhTVEFOREFSRF9FUlJPUl9NQVApLmZpbmQoZSA9PiBlLmNvZGUgPT09IGNvZGUpO1xuICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgcmV0dXJuIFNUQU5EQVJEX0VSUk9SX01BUFtERUZBVUxUX0VSUk9SXTtcbiAgICB9XG4gICAgcmV0dXJuIG1hdGNoO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlSnNvblJwY0Vycm9yKHJlc3BvbnNlKSB7XG4gICAgaWYgKHR5cGVvZiByZXNwb25zZS5lcnJvci5jb2RlID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJldHVybiB7IHZhbGlkOiBmYWxzZSwgZXJyb3I6IFwiTWlzc2luZyBjb2RlIGZvciBKU09OLVJQQyBlcnJvclwiIH07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVzcG9uc2UuZXJyb3IubWVzc2FnZSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICByZXR1cm4geyB2YWxpZDogZmFsc2UsIGVycm9yOiBcIk1pc3NpbmcgbWVzc2FnZSBmb3IgSlNPTi1SUEMgZXJyb3JcIiB9O1xuICAgIH1cbiAgICBpZiAoIWlzVmFsaWRFcnJvckNvZGUocmVzcG9uc2UuZXJyb3IuY29kZSkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbGlkOiBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yOiBgSW52YWxpZCBlcnJvciBjb2RlIHR5cGUgZm9yIEpTT04tUlBDOiAke3Jlc3BvbnNlLmVycm9yLmNvZGV9YCxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKGlzUmVzZXJ2ZWRFcnJvckNvZGUocmVzcG9uc2UuZXJyb3IuY29kZSkpIHtcbiAgICAgICAgY29uc3QgZXJyb3IgPSBnZXRFcnJvckJ5Q29kZShyZXNwb25zZS5lcnJvci5jb2RlKTtcbiAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UgIT09IFNUQU5EQVJEX0VSUk9SX01BUFtERUZBVUxUX0VSUk9SXS5tZXNzYWdlICYmXG4gICAgICAgICAgICByZXNwb25zZS5lcnJvci5tZXNzYWdlID09PSBlcnJvci5tZXNzYWdlKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHZhbGlkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlcnJvcjogYEludmFsaWQgZXJyb3IgY29kZSBtZXNzYWdlIGZvciBKU09OLVJQQzogJHtyZXNwb25zZS5lcnJvci5jb2RlfWAsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IHZhbGlkOiB0cnVlIH07XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VDb25uZWN0aW9uRXJyb3IoZSwgdXJsLCB0eXBlKSB7XG4gICAgcmV0dXJuIGUubWVzc2FnZS5pbmNsdWRlcyhcImdldGFkZHJpbmZvIEVOT1RGT1VORFwiKSB8fCBlLm1lc3NhZ2UuaW5jbHVkZXMoXCJjb25uZWN0IEVDT05OUkVGVVNFRFwiKVxuICAgICAgICA/IG5ldyBFcnJvcihgVW5hdmFpbGFibGUgJHt0eXBlfSBSUEMgdXJsIGF0ICR7dXJsfWApXG4gICAgICAgIDogZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6WyJTRVJWRVJfRVJST1JfQ09ERV9SQU5HRSIsIlJFU0VSVkVEX0VSUk9SX0NPREVTIiwiU1RBTkRBUkRfRVJST1JfTUFQIiwiREVGQVVMVF9FUlJPUiIsImlzU2VydmVyRXJyb3JDb2RlIiwiY29kZSIsImlzUmVzZXJ2ZWRFcnJvckNvZGUiLCJpbmNsdWRlcyIsImlzVmFsaWRFcnJvckNvZGUiLCJnZXRFcnJvciIsInR5cGUiLCJPYmplY3QiLCJrZXlzIiwiZ2V0RXJyb3JCeUNvZGUiLCJtYXRjaCIsInZhbHVlcyIsImZpbmQiLCJlIiwidmFsaWRhdGVKc29uUnBjRXJyb3IiLCJyZXNwb25zZSIsImVycm9yIiwidmFsaWQiLCJtZXNzYWdlIiwicGFyc2VDb25uZWN0aW9uRXJyb3IiLCJ1cmwiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatErrorMessage: () => (/* binding */ formatErrorMessage),\n/* harmony export */   formatJsonRpcError: () => (/* binding */ formatJsonRpcError),\n/* harmony export */   formatJsonRpcRequest: () => (/* binding */ formatJsonRpcRequest),\n/* harmony export */   formatJsonRpcResult: () => (/* binding */ formatJsonRpcResult),\n/* harmony export */   getBigIntRpcId: () => (/* binding */ getBigIntRpcId),\n/* harmony export */   payloadId: () => (/* binding */ payloadId)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n\n\nfunction payloadId(entropy = 3) {\n    const date = Date.now() * Math.pow(10, entropy);\n    const extra = Math.floor(Math.random() * Math.pow(10, entropy));\n    return date + extra;\n}\nfunction getBigIntRpcId(entropy = 6) {\n    return BigInt(payloadId(entropy));\n}\nfunction formatJsonRpcRequest(method, params, id) {\n    return {\n        id: id || payloadId(),\n        jsonrpc: \"2.0\",\n        method,\n        params\n    };\n}\nfunction formatJsonRpcResult(id, result) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        result\n    };\n}\nfunction formatJsonRpcError(id, error, data) {\n    return {\n        id,\n        jsonrpc: \"2.0\",\n        error: formatErrorMessage(error, data)\n    };\n}\nfunction formatErrorMessage(error, data) {\n    if (typeof error === \"undefined\") {\n        return (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.INTERNAL_ERROR);\n    }\n    if (typeof error === \"string\") {\n        error = Object.assign(Object.assign({}, (0,_error__WEBPACK_IMPORTED_MODULE_0__.getError)(_constants__WEBPACK_IMPORTED_MODULE_1__.SERVER_ERROR)), {\n            message: error\n        });\n    }\n    if (typeof data !== \"undefined\") {\n        error.data = data;\n    }\n    if ((0,_error__WEBPACK_IMPORTED_MODULE_0__.isReservedErrorCode)(error.code)) {\n        error = (0,_error__WEBPACK_IMPORTED_MODULE_0__.getErrorByCode)(error.code);\n    }\n    return error;\n} //# sourceMappingURL=format.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9mb3JtYXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBd0U7QUFDYjtBQUNwRCxTQUFTSyxVQUFVQyxVQUFVLENBQUM7SUFDakMsTUFBTUMsT0FBT0MsS0FBS0MsR0FBRyxLQUFLQyxLQUFLQyxHQUFHLENBQUMsSUFBSUw7SUFDdkMsTUFBTU0sUUFBUUYsS0FBS0csS0FBSyxDQUFDSCxLQUFLSSxNQUFNLEtBQUtKLEtBQUtDLEdBQUcsQ0FBQyxJQUFJTDtJQUN0RCxPQUFPQyxPQUFPSztBQUNsQjtBQUNPLFNBQVNHLGVBQWVULFVBQVUsQ0FBQztJQUN0QyxPQUFPVSxPQUFPWCxVQUFVQztBQUM1QjtBQUNPLFNBQVNXLHFCQUFxQkMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLEVBQUU7SUFDbkQsT0FBTztRQUNIQSxJQUFJQSxNQUFNZjtRQUNWZ0IsU0FBUztRQUNUSDtRQUNBQztJQUNKO0FBQ0o7QUFDTyxTQUFTRyxvQkFBb0JGLEVBQUUsRUFBRUcsTUFBTTtJQUMxQyxPQUFPO1FBQ0hIO1FBQ0FDLFNBQVM7UUFDVEU7SUFDSjtBQUNKO0FBQ08sU0FBU0MsbUJBQW1CSixFQUFFLEVBQUVLLEtBQUssRUFBRUMsSUFBSTtJQUM5QyxPQUFPO1FBQ0hOO1FBQ0FDLFNBQVM7UUFDVEksT0FBT0UsbUJBQW1CRixPQUFPQztJQUNyQztBQUNKO0FBQ08sU0FBU0MsbUJBQW1CRixLQUFLLEVBQUVDLElBQUk7SUFDMUMsSUFBSSxPQUFPRCxVQUFVLGFBQWE7UUFDOUIsT0FBT3pCLGdEQUFRQSxDQUFDRyxzREFBY0E7SUFDbEM7SUFDQSxJQUFJLE9BQU9zQixVQUFVLFVBQVU7UUFDM0JBLFFBQVFHLE9BQU9DLE1BQU0sQ0FBQ0QsT0FBT0MsTUFBTSxDQUFDLENBQUMsR0FBRzdCLGdEQUFRQSxDQUFDSSxvREFBWUEsSUFBSTtZQUFFMEIsU0FBU0w7UUFBTTtJQUN0RjtJQUNBLElBQUksT0FBT0MsU0FBUyxhQUFhO1FBQzdCRCxNQUFNQyxJQUFJLEdBQUdBO0lBQ2pCO0lBQ0EsSUFBSXhCLDJEQUFtQkEsQ0FBQ3VCLE1BQU1NLElBQUksR0FBRztRQUNqQ04sUUFBUXhCLHNEQUFjQSxDQUFDd0IsTUFBTU0sSUFBSTtJQUNyQztJQUNBLE9BQU9OO0FBQ1gsRUFDQSxrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9mb3JtYXQuanM/MjUwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRFcnJvciwgZ2V0RXJyb3JCeUNvZGUsIGlzUmVzZXJ2ZWRFcnJvckNvZGUgfSBmcm9tIFwiLi9lcnJvclwiO1xuaW1wb3J0IHsgSU5URVJOQUxfRVJST1IsIFNFUlZFUl9FUlJPUiB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHBheWxvYWRJZChlbnRyb3B5ID0gMykge1xuICAgIGNvbnN0IGRhdGUgPSBEYXRlLm5vdygpICogTWF0aC5wb3coMTAsIGVudHJvcHkpO1xuICAgIGNvbnN0IGV4dHJhID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogTWF0aC5wb3coMTAsIGVudHJvcHkpKTtcbiAgICByZXR1cm4gZGF0ZSArIGV4dHJhO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEJpZ0ludFJwY0lkKGVudHJvcHkgPSA2KSB7XG4gICAgcmV0dXJuIEJpZ0ludChwYXlsb2FkSWQoZW50cm9weSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEpzb25ScGNSZXF1ZXN0KG1ldGhvZCwgcGFyYW1zLCBpZCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkOiBpZCB8fCBwYXlsb2FkSWQoKSxcbiAgICAgICAganNvbnJwYzogXCIyLjBcIixcbiAgICAgICAgbWV0aG9kLFxuICAgICAgICBwYXJhbXMsXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRKc29uUnBjUmVzdWx0KGlkLCByZXN1bHQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBpZCxcbiAgICAgICAganNvbnJwYzogXCIyLjBcIixcbiAgICAgICAgcmVzdWx0LFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0SnNvblJwY0Vycm9yKGlkLCBlcnJvciwgZGF0YSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGlkLFxuICAgICAgICBqc29ucnBjOiBcIjIuMFwiLFxuICAgICAgICBlcnJvcjogZm9ybWF0RXJyb3JNZXNzYWdlKGVycm9yLCBkYXRhKSxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEVycm9yTWVzc2FnZShlcnJvciwgZGF0YSkge1xuICAgIGlmICh0eXBlb2YgZXJyb3IgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgcmV0dXJuIGdldEVycm9yKElOVEVSTkFMX0VSUk9SKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBlcnJvciA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBlcnJvciA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgZ2V0RXJyb3IoU0VSVkVSX0VSUk9SKSksIHsgbWVzc2FnZTogZXJyb3IgfSk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZGF0YSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBlcnJvci5kYXRhID0gZGF0YTtcbiAgICB9XG4gICAgaWYgKGlzUmVzZXJ2ZWRFcnJvckNvZGUoZXJyb3IuY29kZSkpIHtcbiAgICAgICAgZXJyb3IgPSBnZXRFcnJvckJ5Q29kZShlcnJvci5jb2RlKTtcbiAgICB9XG4gICAgcmV0dXJuIGVycm9yO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Zm9ybWF0LmpzLm1hcCJdLCJuYW1lcyI6WyJnZXRFcnJvciIsImdldEVycm9yQnlDb2RlIiwiaXNSZXNlcnZlZEVycm9yQ29kZSIsIklOVEVSTkFMX0VSUk9SIiwiU0VSVkVSX0VSUk9SIiwicGF5bG9hZElkIiwiZW50cm9weSIsImRhdGUiLCJEYXRlIiwibm93IiwiTWF0aCIsInBvdyIsImV4dHJhIiwiZmxvb3IiLCJyYW5kb20iLCJnZXRCaWdJbnRScGNJZCIsIkJpZ0ludCIsImZvcm1hdEpzb25ScGNSZXF1ZXN0IiwibWV0aG9kIiwicGFyYW1zIiwiaWQiLCJqc29ucnBjIiwiZm9ybWF0SnNvblJwY1Jlc3VsdCIsInJlc3VsdCIsImZvcm1hdEpzb25ScGNFcnJvciIsImVycm9yIiwiZGF0YSIsImZvcm1hdEVycm9yTWVzc2FnZSIsIk9iamVjdCIsImFzc2lnbiIsIm1lc3NhZ2UiLCJjb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_ERROR),\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _types__WEBPACK_IMPORTED_MODULE_5__.IJsonRpcProvider),\n/* harmony export */   INTERNAL_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INTERNAL_ERROR),\n/* harmony export */   INVALID_PARAMS: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_PARAMS),\n/* harmony export */   INVALID_REQUEST: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.INVALID_REQUEST),\n/* harmony export */   METHOD_NOT_FOUND: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.METHOD_NOT_FOUND),\n/* harmony export */   PARSE_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.PARSE_ERROR),\n/* harmony export */   RESERVED_ERROR_CODES: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.RESERVED_ERROR_CODES),\n/* harmony export */   SERVER_ERROR: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR),\n/* harmony export */   SERVER_ERROR_CODE_RANGE: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.SERVER_ERROR_CODE_RANGE),\n/* harmony export */   STANDARD_ERROR_MAP: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.STANDARD_ERROR_MAP),\n/* harmony export */   formatErrorMessage: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatErrorMessage),\n/* harmony export */   formatJsonRpcError: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError),\n/* harmony export */   formatJsonRpcRequest: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest),\n/* harmony export */   formatJsonRpcResult: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult),\n/* harmony export */   getBigIntRpcId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId),\n/* harmony export */   getError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getError),\n/* harmony export */   getErrorByCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.getErrorByCode),\n/* harmony export */   isHttpUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isHttpUrl),\n/* harmony export */   isJsonRpcError: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcError),\n/* harmony export */   isJsonRpcPayload: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcPayload),\n/* harmony export */   isJsonRpcRequest: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcRequest),\n/* harmony export */   isJsonRpcResponse: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResponse),\n/* harmony export */   isJsonRpcResult: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcResult),\n/* harmony export */   isJsonRpcValidationInvalid: () => (/* reexport safe */ _validators__WEBPACK_IMPORTED_MODULE_7__.isJsonRpcValidationInvalid),\n/* harmony export */   isLocalhostUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isLocalhostUrl),\n/* harmony export */   isReservedErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isReservedErrorCode),\n/* harmony export */   isServerErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isServerErrorCode),\n/* harmony export */   isValidDefaultRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidDefaultRoute),\n/* harmony export */   isValidErrorCode: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.isValidErrorCode),\n/* harmony export */   isValidLeadingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidLeadingWildcardRoute),\n/* harmony export */   isValidRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidRoute),\n/* harmony export */   isValidTrailingWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidTrailingWildcardRoute),\n/* harmony export */   isValidWildcardRoute: () => (/* reexport safe */ _routing__WEBPACK_IMPORTED_MODULE_4__.isValidWildcardRoute),\n/* harmony export */   isWsUrl: () => (/* reexport safe */ _url__WEBPACK_IMPORTED_MODULE_6__.isWsUrl),\n/* harmony export */   parseConnectionError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.parseConnectionError),\n/* harmony export */   payloadId: () => (/* reexport safe */ _format__WEBPACK_IMPORTED_MODULE_3__.payloadId),\n/* harmony export */   validateJsonRpcError: () => (/* reexport safe */ _error__WEBPACK_IMPORTED_MODULE_1__.validateJsonRpcError)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js\");\n/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./env */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _env__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"DEFAULT_ERROR\",\"INTERNAL_ERROR\",\"INVALID_PARAMS\",\"INVALID_REQUEST\",\"METHOD_NOT_FOUND\",\"PARSE_ERROR\",\"RESERVED_ERROR_CODES\",\"SERVER_ERROR\",\"SERVER_ERROR_CODE_RANGE\",\"STANDARD_ERROR_MAP\",\"getError\",\"getErrorByCode\",\"isReservedErrorCode\",\"isServerErrorCode\",\"isValidErrorCode\",\"parseConnectionError\",\"validateJsonRpcError\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _env__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./format */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js\");\n/* harmony import */ var _routing__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./routing */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js\");\n/* harmony import */ var _url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./url */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js\");\n/* harmony import */ var _validators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./validators */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js\");\n\n\n\n\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTRCO0FBQ0o7QUFDRjtBQUNHO0FBQ0M7QUFDRjtBQUNGO0FBQ08sQ0FDN0IsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9rZW5mdW5kLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vaW5kZXguanM/NjgwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb25zdGFudHNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Vycm9yXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9lbnZcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Zvcm1hdFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vcm91dGluZ1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdHlwZXNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3VybFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vdmFsaWRhdG9yc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isValidDefaultRoute: () => (/* binding */ isValidDefaultRoute),\n/* harmony export */   isValidLeadingWildcardRoute: () => (/* binding */ isValidLeadingWildcardRoute),\n/* harmony export */   isValidRoute: () => (/* binding */ isValidRoute),\n/* harmony export */   isValidTrailingWildcardRoute: () => (/* binding */ isValidTrailingWildcardRoute),\n/* harmony export */   isValidWildcardRoute: () => (/* binding */ isValidWildcardRoute)\n/* harmony export */ });\nfunction isValidRoute(route) {\n    if (route.includes(\"*\")) {\n        return isValidWildcardRoute(route);\n    }\n    if (/\\W/g.test(route)) {\n        return false;\n    }\n    return true;\n}\nfunction isValidDefaultRoute(route) {\n    return route === \"*\";\n}\nfunction isValidWildcardRoute(route) {\n    if (isValidDefaultRoute(route)) {\n        return true;\n    }\n    if (!route.includes(\"*\")) {\n        return false;\n    }\n    if (route.split(\"*\").length !== 2) {\n        return false;\n    }\n    if (route.split(\"*\").filter((x)=>x.trim() === \"\").length !== 1) {\n        return false;\n    }\n    return true;\n}\nfunction isValidLeadingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[0].trim();\n}\nfunction isValidTrailingWildcardRoute(route) {\n    return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split(\"*\")[1].trim();\n} //# sourceMappingURL=routing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS9yb3V0aW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU8sU0FBU0EsYUFBYUMsS0FBSztJQUM5QixJQUFJQSxNQUFNQyxRQUFRLENBQUMsTUFBTTtRQUNyQixPQUFPQyxxQkFBcUJGO0lBQ2hDO0lBQ0EsSUFBSSxNQUFNRyxJQUFJLENBQUNILFFBQVE7UUFDbkIsT0FBTztJQUNYO0lBQ0EsT0FBTztBQUNYO0FBQ08sU0FBU0ksb0JBQW9CSixLQUFLO0lBQ3JDLE9BQU9BLFVBQVU7QUFDckI7QUFDTyxTQUFTRSxxQkFBcUJGLEtBQUs7SUFDdEMsSUFBSUksb0JBQW9CSixRQUFRO1FBQzVCLE9BQU87SUFDWDtJQUNBLElBQUksQ0FBQ0EsTUFBTUMsUUFBUSxDQUFDLE1BQU07UUFDdEIsT0FBTztJQUNYO0lBQ0EsSUFBSUQsTUFBTUssS0FBSyxDQUFDLEtBQUtDLE1BQU0sS0FBSyxHQUFHO1FBQy9CLE9BQU87SUFDWDtJQUNBLElBQUlOLE1BQU1LLEtBQUssQ0FBQyxLQUFLRSxNQUFNLENBQUNDLENBQUFBLElBQUtBLEVBQUVDLElBQUksT0FBTyxJQUFJSCxNQUFNLEtBQUssR0FBRztRQUM1RCxPQUFPO0lBQ1g7SUFDQSxPQUFPO0FBQ1g7QUFDTyxTQUFTSSw0QkFBNEJWLEtBQUs7SUFDN0MsT0FBTyxDQUFDSSxvQkFBb0JKLFVBQVVFLHFCQUFxQkYsVUFBVSxDQUFDQSxNQUFNSyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQ0ksSUFBSTtBQUNsRztBQUNPLFNBQVNFLDZCQUE2QlgsS0FBSztJQUM5QyxPQUFPLENBQUNJLG9CQUFvQkosVUFBVUUscUJBQXFCRixVQUFVLENBQUNBLE1BQU1LLEtBQUssQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDSSxJQUFJO0FBQ2xHLEVBQ0EsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9rZW5mdW5kLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L2pzb25ycGMtdXRpbHMvZGlzdC9lc20vcm91dGluZy5qcz85NjBkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkUm91dGUocm91dGUpIHtcbiAgICBpZiAocm91dGUuaW5jbHVkZXMoXCIqXCIpKSB7XG4gICAgICAgIHJldHVybiBpc1ZhbGlkV2lsZGNhcmRSb3V0ZShyb3V0ZSk7XG4gICAgfVxuICAgIGlmICgvXFxXL2cudGVzdChyb3V0ZSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkRGVmYXVsdFJvdXRlKHJvdXRlKSB7XG4gICAgcmV0dXJuIHJvdXRlID09PSBcIipcIjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkV2lsZGNhcmRSb3V0ZShyb3V0ZSkge1xuICAgIGlmIChpc1ZhbGlkRGVmYXVsdFJvdXRlKHJvdXRlKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKCFyb3V0ZS5pbmNsdWRlcyhcIipcIikpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAocm91dGUuc3BsaXQoXCIqXCIpLmxlbmd0aCAhPT0gMikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChyb3V0ZS5zcGxpdChcIipcIikuZmlsdGVyKHggPT4geC50cmltKCkgPT09IFwiXCIpLmxlbmd0aCAhPT0gMSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRMZWFkaW5nV2lsZGNhcmRSb3V0ZShyb3V0ZSkge1xuICAgIHJldHVybiAhaXNWYWxpZERlZmF1bHRSb3V0ZShyb3V0ZSkgJiYgaXNWYWxpZFdpbGRjYXJkUm91dGUocm91dGUpICYmICFyb3V0ZS5zcGxpdChcIipcIilbMF0udHJpbSgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRUcmFpbGluZ1dpbGRjYXJkUm91dGUocm91dGUpIHtcbiAgICByZXR1cm4gIWlzVmFsaWREZWZhdWx0Um91dGUocm91dGUpICYmIGlzVmFsaWRXaWxkY2FyZFJvdXRlKHJvdXRlKSAmJiAhcm91dGUuc3BsaXQoXCIqXCIpWzFdLnRyaW0oKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRpbmcuanMubWFwIl0sIm5hbWVzIjpbImlzVmFsaWRSb3V0ZSIsInJvdXRlIiwiaW5jbHVkZXMiLCJpc1ZhbGlkV2lsZGNhcmRSb3V0ZSIsInRlc3QiLCJpc1ZhbGlkRGVmYXVsdFJvdXRlIiwic3BsaXQiLCJsZW5ndGgiLCJmaWx0ZXIiLCJ4IiwidHJpbSIsImlzVmFsaWRMZWFkaW5nV2lsZGNhcmRSb3V0ZSIsImlzVmFsaWRUcmFpbGluZ1dpbGRjYXJkUm91dGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IBaseJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IBaseJsonRpcProvider),\n/* harmony export */   IEvents: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IEvents),\n/* harmony export */   IJsonRpcConnection: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcConnection),\n/* harmony export */   IJsonRpcProvider: () => (/* reexport safe */ _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__.IJsonRpcProvider)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_jsonrpc_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/jsonrpc-types */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-types/dist/index.es.js\");\n //# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2QyxDQUM3QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS90eXBlcy5qcz8yNjI0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCJAd2FsbGV0Y29ubmVjdC9qc29ucnBjLXR5cGVzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHttpUrl: () => (/* binding */ isHttpUrl),\n/* harmony export */   isLocalhostUrl: () => (/* binding */ isLocalhostUrl),\n/* harmony export */   isWsUrl: () => (/* binding */ isWsUrl)\n/* harmony export */ });\nconst HTTP_REGEX = \"^https?:\";\nconst WS_REGEX = \"^wss?:\";\nfunction getUrlProtocol(url) {\n    const matches = url.match(new RegExp(/^\\w+:/, \"gi\"));\n    if (!matches || !matches.length) return;\n    return matches[0];\n}\nfunction matchRegexProtocol(url, regex) {\n    const protocol = getUrlProtocol(url);\n    if (typeof protocol === \"undefined\") return false;\n    return new RegExp(regex).test(protocol);\n}\nfunction isHttpUrl(url) {\n    return matchRegexProtocol(url, HTTP_REGEX);\n}\nfunction isWsUrl(url) {\n    return matchRegexProtocol(url, WS_REGEX);\n}\nfunction isLocalhostUrl(url) {\n    return new RegExp(\"wss?://localhost(:d{2,5})?\").test(url);\n} //# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS91cmwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsTUFBTUEsYUFBYTtBQUNuQixNQUFNQyxXQUFXO0FBQ2pCLFNBQVNDLGVBQWVDLEdBQUc7SUFDdkIsTUFBTUMsVUFBVUQsSUFBSUUsS0FBSyxDQUFDLElBQUlDLE9BQU8sU0FBUztJQUM5QyxJQUFJLENBQUNGLFdBQVcsQ0FBQ0EsUUFBUUcsTUFBTSxFQUMzQjtJQUNKLE9BQU9ILE9BQU8sQ0FBQyxFQUFFO0FBQ3JCO0FBQ0EsU0FBU0ksbUJBQW1CTCxHQUFHLEVBQUVNLEtBQUs7SUFDbEMsTUFBTUMsV0FBV1IsZUFBZUM7SUFDaEMsSUFBSSxPQUFPTyxhQUFhLGFBQ3BCLE9BQU87SUFDWCxPQUFPLElBQUlKLE9BQU9HLE9BQU9FLElBQUksQ0FBQ0Q7QUFDbEM7QUFDTyxTQUFTRSxVQUFVVCxHQUFHO0lBQ3pCLE9BQU9LLG1CQUFtQkwsS0FBS0g7QUFDbkM7QUFDTyxTQUFTYSxRQUFRVixHQUFHO0lBQ3ZCLE9BQU9LLG1CQUFtQkwsS0FBS0Y7QUFDbkM7QUFDTyxTQUFTYSxlQUFlWCxHQUFHO0lBQzlCLE9BQU8sSUFBSUcsT0FBTyw4QkFBOEJLLElBQUksQ0FBQ1I7QUFDekQsRUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS91cmwuanM/ODMyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBIVFRQX1JFR0VYID0gXCJeaHR0cHM/OlwiO1xuY29uc3QgV1NfUkVHRVggPSBcIl53c3M/OlwiO1xuZnVuY3Rpb24gZ2V0VXJsUHJvdG9jb2wodXJsKSB7XG4gICAgY29uc3QgbWF0Y2hlcyA9IHVybC5tYXRjaChuZXcgUmVnRXhwKC9eXFx3KzovLCBcImdpXCIpKTtcbiAgICBpZiAoIW1hdGNoZXMgfHwgIW1hdGNoZXMubGVuZ3RoKVxuICAgICAgICByZXR1cm47XG4gICAgcmV0dXJuIG1hdGNoZXNbMF07XG59XG5mdW5jdGlvbiBtYXRjaFJlZ2V4UHJvdG9jb2wodXJsLCByZWdleCkge1xuICAgIGNvbnN0IHByb3RvY29sID0gZ2V0VXJsUHJvdG9jb2wodXJsKTtcbiAgICBpZiAodHlwZW9mIHByb3RvY29sID09PSBcInVuZGVmaW5lZFwiKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIG5ldyBSZWdFeHAocmVnZXgpLnRlc3QocHJvdG9jb2wpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSHR0cFVybCh1cmwpIHtcbiAgICByZXR1cm4gbWF0Y2hSZWdleFByb3RvY29sKHVybCwgSFRUUF9SRUdFWCk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNXc1VybCh1cmwpIHtcbiAgICByZXR1cm4gbWF0Y2hSZWdleFByb3RvY29sKHVybCwgV1NfUkVHRVgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzTG9jYWxob3N0VXJsKHVybCkge1xuICAgIHJldHVybiBuZXcgUmVnRXhwKFwid3NzPzovL2xvY2FsaG9zdCg6ZHsyLDV9KT9cIikudGVzdCh1cmwpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJsLmpzLm1hcCJdLCJuYW1lcyI6WyJIVFRQX1JFR0VYIiwiV1NfUkVHRVgiLCJnZXRVcmxQcm90b2NvbCIsInVybCIsIm1hdGNoZXMiLCJtYXRjaCIsIlJlZ0V4cCIsImxlbmd0aCIsIm1hdGNoUmVnZXhQcm90b2NvbCIsInJlZ2V4IiwicHJvdG9jb2wiLCJ0ZXN0IiwiaXNIdHRwVXJsIiwiaXNXc1VybCIsImlzTG9jYWxob3N0VXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isJsonRpcError: () => (/* binding */ isJsonRpcError),\n/* harmony export */   isJsonRpcPayload: () => (/* binding */ isJsonRpcPayload),\n/* harmony export */   isJsonRpcRequest: () => (/* binding */ isJsonRpcRequest),\n/* harmony export */   isJsonRpcResponse: () => (/* binding */ isJsonRpcResponse),\n/* harmony export */   isJsonRpcResult: () => (/* binding */ isJsonRpcResult),\n/* harmony export */   isJsonRpcValidationInvalid: () => (/* binding */ isJsonRpcValidationInvalid)\n/* harmony export */ });\nfunction isJsonRpcPayload(payload) {\n    return typeof payload === \"object\" && \"id\" in payload && \"jsonrpc\" in payload && payload.jsonrpc === \"2.0\";\n}\nfunction isJsonRpcRequest(payload) {\n    return isJsonRpcPayload(payload) && \"method\" in payload;\n}\nfunction isJsonRpcResponse(payload) {\n    return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));\n}\nfunction isJsonRpcResult(payload) {\n    return \"result\" in payload;\n}\nfunction isJsonRpcError(payload) {\n    return \"error\" in payload;\n}\nfunction isJsonRpcValidationInvalid(validation) {\n    return \"error\" in validation && validation.valid === false;\n} //# sourceMappingURL=validators.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS92YWxpZGF0b3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFPLFNBQVNBLGlCQUFpQkMsT0FBTztJQUNwQyxPQUFRLE9BQU9BLFlBQVksWUFDdkIsUUFBUUEsV0FDUixhQUFhQSxXQUNiQSxRQUFRQyxPQUFPLEtBQUs7QUFDNUI7QUFDTyxTQUFTQyxpQkFBaUJGLE9BQU87SUFDcEMsT0FBT0QsaUJBQWlCQyxZQUFZLFlBQVlBO0FBQ3BEO0FBQ08sU0FBU0csa0JBQWtCSCxPQUFPO0lBQ3JDLE9BQU9ELGlCQUFpQkMsWUFBYUksQ0FBQUEsZ0JBQWdCSixZQUFZSyxlQUFlTCxRQUFPO0FBQzNGO0FBQ08sU0FBU0ksZ0JBQWdCSixPQUFPO0lBQ25DLE9BQU8sWUFBWUE7QUFDdkI7QUFDTyxTQUFTSyxlQUFlTCxPQUFPO0lBQ2xDLE9BQU8sV0FBV0E7QUFDdEI7QUFDTyxTQUFTTSwyQkFBMkJDLFVBQVU7SUFDakQsT0FBTyxXQUFXQSxjQUFjQSxXQUFXQyxLQUFLLEtBQUs7QUFDekQsRUFDQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvanNvbnJwYy11dGlscy9kaXN0L2VzbS92YWxpZGF0b3JzLmpzPzQ3NGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY1BheWxvYWQocGF5bG9hZCkge1xuICAgIHJldHVybiAodHlwZW9mIHBheWxvYWQgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgXCJpZFwiIGluIHBheWxvYWQgJiZcbiAgICAgICAgXCJqc29ucnBjXCIgaW4gcGF5bG9hZCAmJlxuICAgICAgICBwYXlsb2FkLmpzb25ycGMgPT09IFwiMi4wXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY1JlcXVlc3QocGF5bG9hZCkge1xuICAgIHJldHVybiBpc0pzb25ScGNQYXlsb2FkKHBheWxvYWQpICYmIFwibWV0aG9kXCIgaW4gcGF5bG9hZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0pzb25ScGNSZXNwb25zZShwYXlsb2FkKSB7XG4gICAgcmV0dXJuIGlzSnNvblJwY1BheWxvYWQocGF5bG9hZCkgJiYgKGlzSnNvblJwY1Jlc3VsdChwYXlsb2FkKSB8fCBpc0pzb25ScGNFcnJvcihwYXlsb2FkKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNKc29uUnBjUmVzdWx0KHBheWxvYWQpIHtcbiAgICByZXR1cm4gXCJyZXN1bHRcIiBpbiBwYXlsb2FkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSnNvblJwY0Vycm9yKHBheWxvYWQpIHtcbiAgICByZXR1cm4gXCJlcnJvclwiIGluIHBheWxvYWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNKc29uUnBjVmFsaWRhdGlvbkludmFsaWQodmFsaWRhdGlvbikge1xuICAgIHJldHVybiBcImVycm9yXCIgaW4gdmFsaWRhdGlvbiAmJiB2YWxpZGF0aW9uLnZhbGlkID09PSBmYWxzZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhbGlkYXRvcnMuanMubWFwIl0sIm5hbWVzIjpbImlzSnNvblJwY1BheWxvYWQiLCJwYXlsb2FkIiwianNvbnJwYyIsImlzSnNvblJwY1JlcXVlc3QiLCJpc0pzb25ScGNSZXNwb25zZSIsImlzSnNvblJwY1Jlc3VsdCIsImlzSnNvblJwY0Vycm9yIiwiaXNKc29uUnBjVmFsaWRhdGlvbkludmFsaWQiLCJ2YWxpZGF0aW9uIiwidmFsaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WsConnection: () => (/* binding */ f),\n/* harmony export */   \"default\": () => (/* binding */ f)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\nconst v = ()=>typeof WebSocket < \"u\" ? WebSocket : typeof global < \"u\" && typeof global.WebSocket < \"u\" ? global.WebSocket :  false ? 0 : typeof self < \"u\" && typeof self.WebSocket < \"u\" ? self.WebSocket : __webpack_require__(/*! ws */ \"(ssr)/./node_modules/ws/index.js\"), w = ()=>typeof WebSocket < \"u\" || typeof global < \"u\" && typeof global.WebSocket < \"u\" ||  false && 0 || typeof self < \"u\" && typeof self.WebSocket < \"u\", d = (r)=>r.split(\"?\")[0], h = 10, b = v();\nclass f {\n    constructor(e){\n        if (this.url = e, this.events = new events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter, this.registering = !1, !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);\n        this.url = e;\n    }\n    get connected() {\n        return typeof this.socket < \"u\";\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(e, t) {\n        this.events.on(e, t);\n    }\n    once(e, t) {\n        this.events.once(e, t);\n    }\n    off(e, t) {\n        this.events.off(e, t);\n    }\n    removeListener(e, t) {\n        this.events.removeListener(e, t);\n    }\n    async open(e = this.url) {\n        await this.register(e);\n    }\n    async close() {\n        return new Promise((e, t)=>{\n            if (typeof this.socket > \"u\") {\n                t(new Error(\"Connection already closed\"));\n                return;\n            }\n            this.socket.onclose = (n)=>{\n                this.onClose(n), e();\n            }, this.socket.close();\n        });\n    }\n    async send(e) {\n        typeof this.socket > \"u\" && (this.socket = await this.register());\n        try {\n            this.socket.send((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)(e));\n        } catch (t) {\n            this.onError(e.id, t);\n        }\n    }\n    register(e = this.url) {\n        if (!(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isWsUrl)(e)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e}`);\n        if (this.registering) {\n            const t = this.events.getMaxListeners();\n            return (this.events.listenerCount(\"register_error\") >= t || this.events.listenerCount(\"open\") >= t) && this.events.setMaxListeners(t + 1), new Promise((n, s)=>{\n                this.events.once(\"register_error\", (o)=>{\n                    this.resetMaxListeners(), s(o);\n                }), this.events.once(\"open\", ()=>{\n                    if (this.resetMaxListeners(), typeof this.socket > \"u\") return s(new Error(\"WebSocket connection is missing or invalid\"));\n                    n(this.socket);\n                });\n            });\n        }\n        return this.url = e, this.registering = !0, new Promise((t, n)=>{\n            const s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isReactNative)() ? void 0 : {\n                rejectUnauthorized: !(0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.isLocalhostUrl)(e)\n            }, o = new b(e, [], s);\n            w() ? o.onerror = (i)=>{\n                const a = i;\n                n(this.emitError(a.error));\n            } : o.on(\"error\", (i)=>{\n                n(this.emitError(i));\n            }), o.onopen = ()=>{\n                this.onOpen(o), t(o);\n            };\n        });\n    }\n    onOpen(e) {\n        e.onmessage = (t)=>this.onPayload(t), e.onclose = (t)=>this.onClose(t), this.socket = e, this.registering = !1, this.events.emit(\"open\");\n    }\n    onClose(e) {\n        this.socket = void 0, this.registering = !1, this.events.emit(\"close\", e);\n    }\n    onPayload(e) {\n        if (typeof e.data > \"u\") return;\n        const t = typeof e.data == \"string\" ? (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonParse)(e.data) : e.data;\n        this.events.emit(\"payload\", t);\n    }\n    onError(e, t) {\n        const n = this.parseError(t), s = n.message || n.toString(), o = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.formatJsonRpcError)(e, s);\n        this.events.emit(\"payload\", o);\n    }\n    parseError(e, t = this.url) {\n        return (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_2__.parseConnectionError)(e, d(t), \"WS\");\n    }\n    resetMaxListeners() {\n        this.events.getMaxListeners() > h && this.events.setMaxListeners(h);\n    }\n    emitError(e) {\n        const t = this.parseError(new Error(e?.message || `WebSocket connection failed for host: ${d(this.url)}`));\n        return this.events.emit(\"register_error\", t), t;\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KeyValueStorage: () => (/* binding */ h),\n/* harmony export */   \"default\": () => (/* binding */ h)\n/* harmony export */ });\n/* harmony import */ var unstorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unstorage */ \"(ssr)/./node_modules/unstorage/dist/index.mjs\");\n/* harmony import */ var idb_keyval__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! idb-keyval */ \"(ssr)/./node_modules/idb-keyval/dist/index.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n\n\n\nfunction C(i) {\n    return i;\n}\nconst x = \"idb-keyval\";\nvar z = (i = {})=>{\n    const t = i.base && i.base.length > 0 ? `${i.base}:` : \"\", e = (s)=>t + s;\n    let n;\n    return i.dbName && i.storeName && (n = (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.createStore)(i.dbName, i.storeName)), {\n        name: x,\n        options: i,\n        async hasItem (s) {\n            return !(typeof await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s), n) > \"u\");\n        },\n        async getItem (s) {\n            return await (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.get)(e(s), n) ?? null;\n        },\n        setItem (s, a) {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.set)(e(s), a, n);\n        },\n        removeItem (s) {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.del)(e(s), n);\n        },\n        getKeys () {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.keys)(n);\n        },\n        clear () {\n            return (0,idb_keyval__WEBPACK_IMPORTED_MODULE_1__.clear)(n);\n        }\n    };\n};\nconst D = \"WALLET_CONNECT_V2_INDEXED_DB\", E = \"keyvaluestorage\";\nclass _ {\n    constructor(){\n        this.indexedDb = (0,unstorage__WEBPACK_IMPORTED_MODULE_2__.createStorage)({\n            driver: z({\n                dbName: D,\n                storeName: E\n            })\n        });\n    }\n    async getKeys() {\n        return this.indexedDb.getKeys();\n    }\n    async getEntries() {\n        return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t)=>[\n                t.key,\n                t.value\n            ]);\n    }\n    async getItem(t) {\n        const e = await this.indexedDb.getItem(t);\n        if (e !== null) return e;\n    }\n    async setItem(t, e) {\n        await this.indexedDb.setItem(t, (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify)(e));\n    }\n    async removeItem(t) {\n        await this.indexedDb.removeItem(t);\n    }\n}\nvar l = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, c = {\n    exports: {}\n};\n(function() {\n    let i;\n    function t() {}\n    i = t, i.prototype.getItem = function(e) {\n        return this.hasOwnProperty(e) ? String(this[e]) : null;\n    }, i.prototype.setItem = function(e, n) {\n        this[e] = String(n);\n    }, i.prototype.removeItem = function(e) {\n        delete this[e];\n    }, i.prototype.clear = function() {\n        const e = this;\n        Object.keys(e).forEach(function(n) {\n            e[n] = void 0, delete e[n];\n        });\n    }, i.prototype.key = function(e) {\n        return e = e || 0, Object.keys(this)[e];\n    }, i.prototype.__defineGetter__(\"length\", function() {\n        return Object.keys(this).length;\n    }), typeof l < \"u\" && l.localStorage ? c.exports = l.localStorage :  false ? 0 : c.exports = new t;\n})();\nfunction k(i) {\n    var t;\n    return [\n        i[0],\n        (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)((t = i[1]) != null ? t : \"\")\n    ];\n}\nclass K {\n    constructor(){\n        this.localStorage = c.exports;\n    }\n    async getKeys() {\n        return Object.keys(this.localStorage);\n    }\n    async getEntries() {\n        return Object.entries(this.localStorage).map(k);\n    }\n    async getItem(t) {\n        const e = this.localStorage.getItem(t);\n        if (e !== null) return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonParse)(e);\n    }\n    async setItem(t, e) {\n        this.localStorage.setItem(t, (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_0__.safeJsonStringify)(e));\n    }\n    async removeItem(t) {\n        this.localStorage.removeItem(t);\n    }\n}\nconst N = \"wc_storage_version\", y = 1, O = async (i, t, e)=>{\n    const n = N, s = await t.getItem(n);\n    if (s && s >= y) {\n        e(t);\n        return;\n    }\n    const a = await i.getKeys();\n    if (!a.length) {\n        e(t);\n        return;\n    }\n    const m = [];\n    for(; a.length;){\n        const r = a.shift();\n        if (!r) continue;\n        const o = r.toLowerCase();\n        if (o.includes(\"wc@\") || o.includes(\"walletconnect\") || o.includes(\"wc_\") || o.includes(\"wallet_connect\")) {\n            const f = await i.getItem(r);\n            await t.setItem(r, f), m.push(r);\n        }\n    }\n    await t.setItem(n, y), e(t), j(i, m);\n}, j = async (i, t)=>{\n    t.length && t.forEach(async (e)=>{\n        await i.removeItem(e);\n    });\n};\nclass h {\n    constructor(){\n        this.initialized = !1, this.setInitialized = (e)=>{\n            this.storage = e, this.initialized = !0;\n        };\n        const t = new K;\n        this.storage = t;\n        try {\n            const e = new _;\n            O(t, e, this.setInitialized);\n        } catch  {\n            this.initialized = !0;\n        }\n    }\n    async getKeys() {\n        return await this.initialize(), this.storage.getKeys();\n    }\n    async getEntries() {\n        return await this.initialize(), this.storage.getEntries();\n    }\n    async getItem(t) {\n        return await this.initialize(), this.storage.getItem(t);\n    }\n    async setItem(t, e) {\n        return await this.initialize(), this.storage.setItem(t, e);\n    }\n    async removeItem(t) {\n        return await this.initialize(), this.storage.removeItem(t);\n    }\n    async initialize() {\n        this.initialized || await new Promise((t)=>{\n            const e = setInterval(()=>{\n                this.initialized && (clearInterval(e), t());\n            }, 20);\n        });\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/keyvaluestorage/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js":
/*!*************************************************************!*\
  !*** ./node_modules/@walletconnect/logger/dist/index.es.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_LOG_SIZE_IN_BYTES_DEFAULT: () => (/* binding */ l),\n/* harmony export */   PINO_CUSTOM_CONTEXT_KEY: () => (/* binding */ n),\n/* harmony export */   PINO_LOGGER_DEFAULTS: () => (/* binding */ c),\n/* harmony export */   formatChildLoggerContext: () => (/* binding */ w),\n/* harmony export */   generateChildLogger: () => (/* binding */ E),\n/* harmony export */   generateClientLogger: () => (/* binding */ C),\n/* harmony export */   generatePlatformLogger: () => (/* binding */ A),\n/* harmony export */   generateServerLogger: () => (/* binding */ I),\n/* harmony export */   getBrowserLoggerContext: () => (/* binding */ v),\n/* harmony export */   getDefaultLoggerOptions: () => (/* binding */ k),\n/* harmony export */   getLoggerContext: () => (/* binding */ y),\n/* harmony export */   pino: () => (/* reexport default from dynamic */ pino__WEBPACK_IMPORTED_MODULE_0___default.a),\n/* harmony export */   setBrowserLoggerContext: () => (/* binding */ b)\n/* harmony export */ });\n/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pino */ \"(ssr)/./node_modules/pino/pino.js\");\n/* harmony import */ var pino__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pino__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n\n\n\nconst c = {\n    level: \"info\"\n}, n = \"custom_context\", l = 1e3 * 1024;\nclass O {\n    constructor(e){\n        this.nodeValue = e, this.sizeInBytes = new TextEncoder().encode(this.nodeValue).length, this.next = null;\n    }\n    get value() {\n        return this.nodeValue;\n    }\n    get size() {\n        return this.sizeInBytes;\n    }\n}\nclass d {\n    constructor(e){\n        this.head = null, this.tail = null, this.lengthInNodes = 0, this.maxSizeInBytes = e, this.sizeInBytes = 0;\n    }\n    append(e) {\n        const t = new O(e);\n        if (t.size > this.maxSizeInBytes) throw new Error(`[LinkedList] Value too big to insert into list: ${e} with size ${t.size}`);\n        for(; this.size + t.size > this.maxSizeInBytes;)this.shift();\n        this.head ? (this.tail && (this.tail.next = t), this.tail = t) : (this.head = t, this.tail = t), this.lengthInNodes++, this.sizeInBytes += t.size;\n    }\n    shift() {\n        if (!this.head) return;\n        const e = this.head;\n        this.head = this.head.next, this.head || (this.tail = null), this.lengthInNodes--, this.sizeInBytes -= e.size;\n    }\n    toArray() {\n        const e = [];\n        let t = this.head;\n        for(; t !== null;)e.push(t.value), t = t.next;\n        return e;\n    }\n    get length() {\n        return this.lengthInNodes;\n    }\n    get size() {\n        return this.sizeInBytes;\n    }\n    toOrderedArray() {\n        return Array.from(this);\n    }\n    [Symbol.iterator]() {\n        let e = this.head;\n        return {\n            next: ()=>{\n                if (!e) return {\n                    done: !0,\n                    value: null\n                };\n                const t = e.value;\n                return e = e.next, {\n                    done: !1,\n                    value: t\n                };\n            }\n        };\n    }\n}\nclass L {\n    constructor(e, t = l){\n        this.level = e ?? \"error\", this.levelValue = pino__WEBPACK_IMPORTED_MODULE_0__.levels.values[this.level], this.MAX_LOG_SIZE_IN_BYTES = t, this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES);\n    }\n    forwardToConsole(e, t) {\n        t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.error ? console.error(e) : t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.warn ? console.warn(e) : t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.debug ? console.debug(e) : t === pino__WEBPACK_IMPORTED_MODULE_0__.levels.values.trace ? console.trace(e) : console.log(e);\n    }\n    appendToLogs(e) {\n        this.logs.append((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)({\n            timestamp: new Date().toISOString(),\n            log: e\n        }));\n        const t = typeof e == \"string\" ? JSON.parse(e).level : e.level;\n        t >= this.levelValue && this.forwardToConsole(e, t);\n    }\n    getLogs() {\n        return this.logs;\n    }\n    clearLogs() {\n        this.logs = new d(this.MAX_LOG_SIZE_IN_BYTES);\n    }\n    getLogArray() {\n        return Array.from(this.logs);\n    }\n    logsToBlob(e) {\n        const t = this.getLogArray();\n        return t.push((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_1__.safeJsonStringify)({\n            extraMetadata: e\n        })), new Blob(t, {\n            type: \"application/json\"\n        });\n    }\n}\nclass m {\n    constructor(e, t = l){\n        this.baseChunkLogger = new L(e, t);\n    }\n    write(e) {\n        this.baseChunkLogger.appendToLogs(e);\n    }\n    getLogs() {\n        return this.baseChunkLogger.getLogs();\n    }\n    clearLogs() {\n        this.baseChunkLogger.clearLogs();\n    }\n    getLogArray() {\n        return this.baseChunkLogger.getLogArray();\n    }\n    logsToBlob(e) {\n        return this.baseChunkLogger.logsToBlob(e);\n    }\n    downloadLogsBlobInBrowser(e) {\n        const t = URL.createObjectURL(this.logsToBlob(e)), o = document.createElement(\"a\");\n        o.href = t, o.download = `walletconnect-logs-${new Date().toISOString()}.txt`, document.body.appendChild(o), o.click(), document.body.removeChild(o), URL.revokeObjectURL(t);\n    }\n}\nclass B {\n    constructor(e, t = l){\n        this.baseChunkLogger = new L(e, t);\n    }\n    write(e) {\n        this.baseChunkLogger.appendToLogs(e);\n    }\n    getLogs() {\n        return this.baseChunkLogger.getLogs();\n    }\n    clearLogs() {\n        this.baseChunkLogger.clearLogs();\n    }\n    getLogArray() {\n        return this.baseChunkLogger.getLogArray();\n    }\n    logsToBlob(e) {\n        return this.baseChunkLogger.logsToBlob(e);\n    }\n}\nvar x = Object.defineProperty, S = Object.defineProperties, _ = Object.getOwnPropertyDescriptors, p = Object.getOwnPropertySymbols, T = Object.prototype.hasOwnProperty, z = Object.prototype.propertyIsEnumerable, f = (r, e, t)=>e in r ? x(r, e, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : r[e] = t, i = (r, e)=>{\n    for(var t in e || (e = {}))T.call(e, t) && f(r, t, e[t]);\n    if (p) for (var t of p(e))z.call(e, t) && f(r, t, e[t]);\n    return r;\n}, g = (r, e)=>S(r, _(e));\nfunction k(r) {\n    return g(i({}, r), {\n        level: r?.level || c.level\n    });\n}\nfunction v(r, e = n) {\n    return r[e] || \"\";\n}\nfunction b(r, e, t = n) {\n    return r[t] = e, r;\n}\nfunction y(r, e = n) {\n    let t = \"\";\n    return typeof r.bindings > \"u\" ? t = v(r, e) : t = r.bindings().context || \"\", t;\n}\nfunction w(r, e, t = n) {\n    const o = y(r, t);\n    return o.trim() ? `${o}/${e}` : e;\n}\nfunction E(r, e, t = n) {\n    const o = w(r, e, t), a = r.child({\n        context: o\n    });\n    return b(a, o, t);\n}\nfunction C(r) {\n    var e, t;\n    const o = new m((e = r.opts) == null ? void 0 : e.level, r.maxSizeInBytes);\n    return {\n        logger: pino__WEBPACK_IMPORTED_MODULE_0___default()(g(i({}, r.opts), {\n            level: \"trace\",\n            browser: g(i({}, (t = r.opts) == null ? void 0 : t.browser), {\n                write: (a)=>o.write(a)\n            })\n        })),\n        chunkLoggerController: o\n    };\n}\nfunction I(r) {\n    var e;\n    const t = new B((e = r.opts) == null ? void 0 : e.level, r.maxSizeInBytes);\n    return {\n        logger: pino__WEBPACK_IMPORTED_MODULE_0___default()(g(i({}, r.opts), {\n            level: \"trace\"\n        }), t),\n        chunkLoggerController: t\n    };\n}\nfunction A(r) {\n    return typeof r.loggerOverride < \"u\" && typeof r.loggerOverride != \"string\" ? {\n        logger: r.loggerOverride,\n        chunkLoggerController: null\n    } :  false ? 0 : I(r);\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-api/dist/index.es.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-api/dist/index.es.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RELAY_JSONRPC: () => (/* binding */ C),\n/* harmony export */   isPublishMethod: () => (/* binding */ c),\n/* harmony export */   isPublishParams: () => (/* binding */ h),\n/* harmony export */   isPublishRequest: () => (/* binding */ P),\n/* harmony export */   isSubscribeMethod: () => (/* binding */ b),\n/* harmony export */   isSubscribeParams: () => (/* binding */ a),\n/* harmony export */   isSubscribeRequest: () => (/* binding */ R),\n/* harmony export */   isSubscriptionMethod: () => (/* binding */ m),\n/* harmony export */   isSubscriptionParams: () => (/* binding */ d),\n/* harmony export */   isSubscriptionRequest: () => (/* binding */ S),\n/* harmony export */   isUnsubscribeMethod: () => (/* binding */ o),\n/* harmony export */   isUnsubscribeParams: () => (/* binding */ p),\n/* harmony export */   isUnsubscribeRequest: () => (/* binding */ _),\n/* harmony export */   parsePublishRequest: () => (/* binding */ q),\n/* harmony export */   parseSubscribeRequest: () => (/* binding */ g),\n/* harmony export */   parseSubscriptionRequest: () => (/* binding */ k),\n/* harmony export */   parseUnsubscribeRequest: () => (/* binding */ E)\n/* harmony export */ });\nfunction e(s, r, i = \"string\") {\n    if (!s[r] || typeof s[r] !== i) throw new Error(`Missing or invalid \"${r}\" param`);\n}\nfunction l(s, r) {\n    let i = !0;\n    return r.forEach((t)=>{\n        t in s || (i = !1);\n    }), i;\n}\nfunction f(s, r) {\n    return Array.isArray(s) ? s.length === r : Object.keys(s).length === r;\n}\nfunction w(s, r) {\n    return Array.isArray(s) ? s.length >= r : Object.keys(s).length >= r;\n}\nfunction u(s, r, i) {\n    return (i.length ? w(s, r.length) : f(s, r.length)) ? l(s, r) : !1;\n}\nfunction n(s, r, i = \"_\") {\n    const t = s.split(i);\n    return t[t.length - 1].trim().toLowerCase() === r.trim().toLowerCase();\n}\nfunction R(s) {\n    return b(s.method) && a(s.params);\n}\nfunction b(s) {\n    return n(s, \"subscribe\");\n}\nfunction a(s) {\n    return u(s, [\n        \"topic\"\n    ], []);\n}\nfunction P(s) {\n    return c(s.method) && h(s.params);\n}\nfunction c(s) {\n    return n(s, \"publish\");\n}\nfunction h(s) {\n    return u(s, [\n        \"message\",\n        \"topic\",\n        \"ttl\"\n    ], [\n        \"prompt\",\n        \"tag\"\n    ]);\n}\nfunction _(s) {\n    return o(s.method) && p(s.params);\n}\nfunction o(s) {\n    return n(s, \"unsubscribe\");\n}\nfunction p(s) {\n    return u(s, [\n        \"id\",\n        \"topic\"\n    ], []);\n}\nfunction S(s) {\n    return m(s.method) && d(s.params);\n}\nfunction m(s) {\n    return n(s, \"subscription\");\n}\nfunction d(s) {\n    return u(s, [\n        \"id\",\n        \"data\"\n    ], []);\n}\nfunction g(s) {\n    if (!b(s.method)) throw new Error(\"JSON-RPC Request has invalid subscribe method\");\n    if (!a(s.params)) throw new Error(\"JSON-RPC Request has invalid subscribe params\");\n    const r = s.params;\n    return e(r, \"topic\"), r;\n}\nfunction q(s) {\n    if (!c(s.method)) throw new Error(\"JSON-RPC Request has invalid publish method\");\n    if (!h(s.params)) throw new Error(\"JSON-RPC Request has invalid publish params\");\n    const r = s.params;\n    return e(r, \"topic\"), e(r, \"message\"), e(r, \"ttl\", \"number\"), r;\n}\nfunction E(s) {\n    if (!o(s.method)) throw new Error(\"JSON-RPC Request has invalid unsubscribe method\");\n    if (!p(s.params)) throw new Error(\"JSON-RPC Request has invalid unsubscribe params\");\n    const r = s.params;\n    return e(r, \"id\"), r;\n}\nfunction k(s) {\n    if (!m(s.method)) throw new Error(\"JSON-RPC Request has invalid subscription method\");\n    if (!d(s.params)) throw new Error(\"JSON-RPC Request has invalid subscription params\");\n    const r = s.params;\n    return e(r, \"id\"), e(r, \"data\"), r;\n}\nconst C = {\n    waku: {\n        publish: \"waku_publish\",\n        batchPublish: \"waku_batchPublish\",\n        subscribe: \"waku_subscribe\",\n        batchSubscribe: \"waku_batchSubscribe\",\n        subscription: \"waku_subscription\",\n        unsubscribe: \"waku_unsubscribe\",\n        batchUnsubscribe: \"waku_batchUnsubscribe\",\n        batchFetchMessages: \"waku_batchFetchMessages\"\n    },\n    irn: {\n        publish: \"irn_publish\",\n        batchPublish: \"irn_batchPublish\",\n        subscribe: \"irn_subscribe\",\n        batchSubscribe: \"irn_batchSubscribe\",\n        subscription: \"irn_subscription\",\n        unsubscribe: \"irn_unsubscribe\",\n        batchUnsubscribe: \"irn_batchUnsubscribe\",\n        batchFetchMessages: \"irn_batchFetchMessages\"\n    },\n    iridium: {\n        publish: \"iridium_publish\",\n        batchPublish: \"iridium_batchPublish\",\n        subscribe: \"iridium_subscribe\",\n        batchSubscribe: \"iridium_batchSubscribe\",\n        subscription: \"iridium_subscription\",\n        unsubscribe: \"iridium_unsubscribe\",\n        batchUnsubscribe: \"iridium_batchUnsubscribe\",\n        batchFetchMessages: \"iridium_batchFetchMessages\"\n    }\n};\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-api/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/api.js":
/*!****************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/api.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateKeyPair: () => (/* binding */ generateKeyPair),\n/* harmony export */   signJWT: () => (/* binding */ signJWT),\n/* harmony export */   verifyJWT: () => (/* binding */ verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @stablelib/ed25519 */ \"(ssr)/./node_modules/@stablelib/ed25519/lib/ed25519.js\");\n/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @stablelib/random */ \"(ssr)/./node_modules/@stablelib/random/lib/random.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js\");\n\n\n\n\n\nfunction generateKeyPair(seed = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(_constants__WEBPACK_IMPORTED_MODULE_3__.KEY_PAIR_SEED_LENGTH)) {\n    return _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.generateKeyPairFromSeed(seed);\n}\nasync function signJWT(sub, aud, ttl, keyPair, iat = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_2__.fromMiliseconds)(Date.now())) {\n    const header = {\n        alg: _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_ALG,\n        typ: _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_TYP\n    };\n    const iss = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeIss)(keyPair.publicKey);\n    const exp = iat + ttl;\n    const payload = {\n        iss,\n        sub,\n        aud,\n        iat,\n        exp\n    };\n    const data = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeData)({\n        header,\n        payload\n    });\n    const signature = _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.sign(keyPair.secretKey, data);\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.encodeJWT)({\n        header,\n        payload,\n        signature\n    });\n}\nasync function verifyJWT(jwt) {\n    const { header, payload, data, signature } = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decodeJWT)(jwt);\n    if (header.alg !== _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_ALG || header.typ !== _constants__WEBPACK_IMPORTED_MODULE_3__.JWT_IRIDIUM_TYP) {\n        throw new Error(\"JWT must use EdDSA algorithm\");\n    }\n    const publicKey = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.decodeIss)(payload.iss);\n    return _stablelib_ed25519__WEBPACK_IMPORTED_MODULE_0__.verify(publicKey, data, signature);\n} //# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9hcGkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ0U7QUFDTTtBQUNnQztBQUNKO0FBQzNFLFNBQVNXLGdCQUFnQkMsT0FBT1gsOERBQVdBLENBQUNJLDREQUFvQkEsQ0FBQztJQUNwRSxPQUFPTCx1RUFBK0IsQ0FBQ1k7QUFDM0M7QUFDTyxlQUFlRSxRQUFRQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxPQUFPLEVBQUVDLE1BQU1qQixvRUFBZUEsQ0FBQ2tCLEtBQUtDLEdBQUcsR0FBRztJQUNuRixNQUFNQyxTQUFTO1FBQUVDLEtBQUtwQix1REFBZUE7UUFBRXFCLEtBQUtwQix1REFBZUE7SUFBQztJQUM1RCxNQUFNcUIsTUFBTWhCLGlEQUFTQSxDQUFDUyxRQUFRUSxTQUFTO0lBQ3ZDLE1BQU1DLE1BQU1SLE1BQU1GO0lBQ2xCLE1BQU1XLFVBQVU7UUFBRUg7UUFBS1Y7UUFBS0M7UUFBS0c7UUFBS1E7SUFBSTtJQUMxQyxNQUFNRSxPQUFPckIsa0RBQVVBLENBQUM7UUFBRWM7UUFBUU07SUFBUTtJQUMxQyxNQUFNRSxZQUFZOUIsb0RBQVksQ0FBQ2tCLFFBQVFjLFNBQVMsRUFBRUg7SUFDbEQsT0FBT25CLGlEQUFTQSxDQUFDO1FBQUVZO1FBQVFNO1FBQVNFO0lBQVU7QUFDbEQ7QUFDTyxlQUFlRyxVQUFVQyxHQUFHO0lBQy9CLE1BQU0sRUFBRVosTUFBTSxFQUFFTSxPQUFPLEVBQUVDLElBQUksRUFBRUMsU0FBUyxFQUFFLEdBQUd2QixpREFBU0EsQ0FBQzJCO0lBQ3ZELElBQUlaLE9BQU9DLEdBQUcsS0FBS3BCLHVEQUFlQSxJQUFJbUIsT0FBT0UsR0FBRyxLQUFLcEIsdURBQWVBLEVBQUU7UUFDbEUsTUFBTSxJQUFJK0IsTUFBTTtJQUNwQjtJQUNBLE1BQU1ULFlBQVlwQixpREFBU0EsQ0FBQ3NCLFFBQVFILEdBQUc7SUFDdkMsT0FBT3pCLHNEQUFjLENBQUMwQixXQUFXRyxNQUFNQztBQUMzQyxFQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Rva2VuZnVuZC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC9yZWxheS1hdXRoL2Rpc3QvZXNtL2FwaS5qcz8yYzQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGVkMjU1MTkgZnJvbSBcIkBzdGFibGVsaWIvZWQyNTUxOVwiO1xuaW1wb3J0IHsgcmFuZG9tQnl0ZXMgfSBmcm9tIFwiQHN0YWJsZWxpYi9yYW5kb21cIjtcbmltcG9ydCB7IGZyb21NaWxpc2Vjb25kcyB9IGZyb20gXCJAd2FsbGV0Y29ubmVjdC90aW1lXCI7XG5pbXBvcnQgeyBKV1RfSVJJRElVTV9BTEcsIEpXVF9JUklESVVNX1RZUCwgS0VZX1BBSVJfU0VFRF9MRU5HVEgsIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBkZWNvZGVJc3MsIGRlY29kZUpXVCwgZW5jb2RlRGF0YSwgZW5jb2RlSXNzLCBlbmNvZGVKV1QsIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUtleVBhaXIoc2VlZCA9IHJhbmRvbUJ5dGVzKEtFWV9QQUlSX1NFRURfTEVOR1RIKSkge1xuICAgIHJldHVybiBlZDI1NTE5LmdlbmVyYXRlS2V5UGFpckZyb21TZWVkKHNlZWQpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpZ25KV1Qoc3ViLCBhdWQsIHR0bCwga2V5UGFpciwgaWF0ID0gZnJvbU1pbGlzZWNvbmRzKERhdGUubm93KCkpKSB7XG4gICAgY29uc3QgaGVhZGVyID0geyBhbGc6IEpXVF9JUklESVVNX0FMRywgdHlwOiBKV1RfSVJJRElVTV9UWVAgfTtcbiAgICBjb25zdCBpc3MgPSBlbmNvZGVJc3Moa2V5UGFpci5wdWJsaWNLZXkpO1xuICAgIGNvbnN0IGV4cCA9IGlhdCArIHR0bDtcbiAgICBjb25zdCBwYXlsb2FkID0geyBpc3MsIHN1YiwgYXVkLCBpYXQsIGV4cCB9O1xuICAgIGNvbnN0IGRhdGEgPSBlbmNvZGVEYXRhKHsgaGVhZGVyLCBwYXlsb2FkIH0pO1xuICAgIGNvbnN0IHNpZ25hdHVyZSA9IGVkMjU1MTkuc2lnbihrZXlQYWlyLnNlY3JldEtleSwgZGF0YSk7XG4gICAgcmV0dXJuIGVuY29kZUpXVCh7IGhlYWRlciwgcGF5bG9hZCwgc2lnbmF0dXJlIH0pO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHZlcmlmeUpXVChqd3QpIHtcbiAgICBjb25zdCB7IGhlYWRlciwgcGF5bG9hZCwgZGF0YSwgc2lnbmF0dXJlIH0gPSBkZWNvZGVKV1Qoand0KTtcbiAgICBpZiAoaGVhZGVyLmFsZyAhPT0gSldUX0lSSURJVU1fQUxHIHx8IGhlYWRlci50eXAgIT09IEpXVF9JUklESVVNX1RZUCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJKV1QgbXVzdCB1c2UgRWREU0EgYWxnb3JpdGhtXCIpO1xuICAgIH1cbiAgICBjb25zdCBwdWJsaWNLZXkgPSBkZWNvZGVJc3MocGF5bG9hZC5pc3MpO1xuICAgIHJldHVybiBlZDI1NTE5LnZlcmlmeShwdWJsaWNLZXksIGRhdGEsIHNpZ25hdHVyZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcGkuanMubWFwIl0sIm5hbWVzIjpbImVkMjU1MTkiLCJyYW5kb21CeXRlcyIsImZyb21NaWxpc2Vjb25kcyIsIkpXVF9JUklESVVNX0FMRyIsIkpXVF9JUklESVVNX1RZUCIsIktFWV9QQUlSX1NFRURfTEVOR1RIIiwiZGVjb2RlSXNzIiwiZGVjb2RlSldUIiwiZW5jb2RlRGF0YSIsImVuY29kZUlzcyIsImVuY29kZUpXVCIsImdlbmVyYXRlS2V5UGFpciIsInNlZWQiLCJnZW5lcmF0ZUtleVBhaXJGcm9tU2VlZCIsInNpZ25KV1QiLCJzdWIiLCJhdWQiLCJ0dGwiLCJrZXlQYWlyIiwiaWF0IiwiRGF0ZSIsIm5vdyIsImhlYWRlciIsImFsZyIsInR5cCIsImlzcyIsInB1YmxpY0tleSIsImV4cCIsInBheWxvYWQiLCJkYXRhIiwic2lnbmF0dXJlIiwic2lnbiIsInNlY3JldEtleSIsInZlcmlmeUpXVCIsImp3dCIsIkVycm9yIiwidmVyaWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/constants.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_ENCODING: () => (/* binding */ DATA_ENCODING),\n/* harmony export */   DID_DELIMITER: () => (/* binding */ DID_DELIMITER),\n/* harmony export */   DID_METHOD: () => (/* binding */ DID_METHOD),\n/* harmony export */   DID_PREFIX: () => (/* binding */ DID_PREFIX),\n/* harmony export */   JSON_ENCODING: () => (/* binding */ JSON_ENCODING),\n/* harmony export */   JWT_DELIMITER: () => (/* binding */ JWT_DELIMITER),\n/* harmony export */   JWT_ENCODING: () => (/* binding */ JWT_ENCODING),\n/* harmony export */   JWT_IRIDIUM_ALG: () => (/* binding */ JWT_IRIDIUM_ALG),\n/* harmony export */   JWT_IRIDIUM_TYP: () => (/* binding */ JWT_IRIDIUM_TYP),\n/* harmony export */   KEY_PAIR_SEED_LENGTH: () => (/* binding */ KEY_PAIR_SEED_LENGTH),\n/* harmony export */   MULTICODEC_ED25519_BASE: () => (/* binding */ MULTICODEC_ED25519_BASE),\n/* harmony export */   MULTICODEC_ED25519_ENCODING: () => (/* binding */ MULTICODEC_ED25519_ENCODING),\n/* harmony export */   MULTICODEC_ED25519_HEADER: () => (/* binding */ MULTICODEC_ED25519_HEADER),\n/* harmony export */   MULTICODEC_ED25519_LENGTH: () => (/* binding */ MULTICODEC_ED25519_LENGTH)\n/* harmony export */ });\nconst JWT_IRIDIUM_ALG = \"EdDSA\";\nconst JWT_IRIDIUM_TYP = \"JWT\";\nconst JWT_DELIMITER = \".\";\nconst JWT_ENCODING = \"base64url\";\nconst JSON_ENCODING = \"utf8\";\nconst DATA_ENCODING = \"utf8\";\nconst DID_DELIMITER = \":\";\nconst DID_PREFIX = \"did\";\nconst DID_METHOD = \"key\";\nconst MULTICODEC_ED25519_ENCODING = \"base58btc\";\nconst MULTICODEC_ED25519_BASE = \"z\";\nconst MULTICODEC_ED25519_HEADER = \"K36\";\nconst MULTICODEC_ED25519_LENGTH = 32;\nconst KEY_PAIR_SEED_LENGTH = 32; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxrQkFBa0IsUUFBUTtBQUNoQyxNQUFNQyxrQkFBa0IsTUFBTTtBQUM5QixNQUFNQyxnQkFBZ0IsSUFBSTtBQUMxQixNQUFNQyxlQUFlLFlBQVk7QUFDakMsTUFBTUMsZ0JBQWdCLE9BQU87QUFDN0IsTUFBTUMsZ0JBQWdCLE9BQU87QUFDN0IsTUFBTUMsZ0JBQWdCLElBQUk7QUFDMUIsTUFBTUMsYUFBYSxNQUFNO0FBQ3pCLE1BQU1DLGFBQWEsTUFBTTtBQUN6QixNQUFNQyw4QkFBOEIsWUFBWTtBQUNoRCxNQUFNQywwQkFBMEIsSUFBSTtBQUNwQyxNQUFNQyw0QkFBNEIsTUFBTTtBQUN4QyxNQUFNQyw0QkFBNEIsR0FBRztBQUNyQyxNQUFNQyx1QkFBdUIsR0FBRyxDQUN2QyxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9jb25zdGFudHMuanM/NWQ4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgSldUX0lSSURJVU1fQUxHID0gXCJFZERTQVwiO1xuZXhwb3J0IGNvbnN0IEpXVF9JUklESVVNX1RZUCA9IFwiSldUXCI7XG5leHBvcnQgY29uc3QgSldUX0RFTElNSVRFUiA9IFwiLlwiO1xuZXhwb3J0IGNvbnN0IEpXVF9FTkNPRElORyA9IFwiYmFzZTY0dXJsXCI7XG5leHBvcnQgY29uc3QgSlNPTl9FTkNPRElORyA9IFwidXRmOFwiO1xuZXhwb3J0IGNvbnN0IERBVEFfRU5DT0RJTkcgPSBcInV0ZjhcIjtcbmV4cG9ydCBjb25zdCBESURfREVMSU1JVEVSID0gXCI6XCI7XG5leHBvcnQgY29uc3QgRElEX1BSRUZJWCA9IFwiZGlkXCI7XG5leHBvcnQgY29uc3QgRElEX01FVEhPRCA9IFwia2V5XCI7XG5leHBvcnQgY29uc3QgTVVMVElDT0RFQ19FRDI1NTE5X0VOQ09ESU5HID0gXCJiYXNlNThidGNcIjtcbmV4cG9ydCBjb25zdCBNVUxUSUNPREVDX0VEMjU1MTlfQkFTRSA9IFwielwiO1xuZXhwb3J0IGNvbnN0IE1VTFRJQ09ERUNfRUQyNTUxOV9IRUFERVIgPSBcIkszNlwiO1xuZXhwb3J0IGNvbnN0IE1VTFRJQ09ERUNfRUQyNTUxOV9MRU5HVEggPSAzMjtcbmV4cG9ydCBjb25zdCBLRVlfUEFJUl9TRUVEX0xFTkdUSCA9IDMyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6WyJKV1RfSVJJRElVTV9BTEciLCJKV1RfSVJJRElVTV9UWVAiLCJKV1RfREVMSU1JVEVSIiwiSldUX0VOQ09ESU5HIiwiSlNPTl9FTkNPRElORyIsIkRBVEFfRU5DT0RJTkciLCJESURfREVMSU1JVEVSIiwiRElEX1BSRUZJWCIsIkRJRF9NRVRIT0QiLCJNVUxUSUNPREVDX0VEMjU1MTlfRU5DT0RJTkciLCJNVUxUSUNPREVDX0VEMjU1MTlfQkFTRSIsIk1VTFRJQ09ERUNfRUQyNTUxOV9IRUFERVIiLCJNVUxUSUNPREVDX0VEMjU1MTlfTEVOR1RIIiwiS0VZX1BBSVJfU0VFRF9MRU5HVEgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DATA_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DATA_ENCODING),\n/* harmony export */   DID_DELIMITER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_DELIMITER),\n/* harmony export */   DID_METHOD: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_METHOD),\n/* harmony export */   DID_PREFIX: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.DID_PREFIX),\n/* harmony export */   JSON_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JSON_ENCODING),\n/* harmony export */   JWT_DELIMITER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_DELIMITER),\n/* harmony export */   JWT_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_ENCODING),\n/* harmony export */   JWT_IRIDIUM_ALG: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_IRIDIUM_ALG),\n/* harmony export */   JWT_IRIDIUM_TYP: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.JWT_IRIDIUM_TYP),\n/* harmony export */   KEY_PAIR_SEED_LENGTH: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.KEY_PAIR_SEED_LENGTH),\n/* harmony export */   MULTICODEC_ED25519_BASE: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_BASE),\n/* harmony export */   MULTICODEC_ED25519_ENCODING: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_ENCODING),\n/* harmony export */   MULTICODEC_ED25519_HEADER: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_HEADER),\n/* harmony export */   MULTICODEC_ED25519_LENGTH: () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_1__.MULTICODEC_ED25519_LENGTH),\n/* harmony export */   decodeData: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeData),\n/* harmony export */   decodeIss: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeIss),\n/* harmony export */   decodeJSON: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeJSON),\n/* harmony export */   decodeJWT: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeJWT),\n/* harmony export */   decodeSig: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.decodeSig),\n/* harmony export */   encodeData: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeData),\n/* harmony export */   encodeIss: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeIss),\n/* harmony export */   encodeJSON: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeJSON),\n/* harmony export */   encodeJWT: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeJWT),\n/* harmony export */   encodeSig: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.encodeSig),\n/* harmony export */   generateKeyPair: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.generateKeyPair),\n/* harmony export */   signJWT: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.signJWT),\n/* harmony export */   verifyJWT: () => (/* reexport safe */ _api__WEBPACK_IMPORTED_MODULE_0__.verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/api.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/types.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _types__WEBPACK_IMPORTED_MODULE_2__) if([\"default\",\"generateKeyPair\",\"signJWT\",\"verifyJWT\",\"DATA_ENCODING\",\"DID_DELIMITER\",\"DID_METHOD\",\"DID_PREFIX\",\"JSON_ENCODING\",\"JWT_DELIMITER\",\"JWT_ENCODING\",\"JWT_IRIDIUM_ALG\",\"JWT_IRIDIUM_TYP\",\"KEY_PAIR_SEED_LENGTH\",\"MULTICODEC_ED25519_BASE\",\"MULTICODEC_ED25519_ENCODING\",\"MULTICODEC_ED25519_HEADER\",\"MULTICODEC_ED25519_LENGTH\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _types__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js\");\n\n\n\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFzQjtBQUNNO0FBQ0o7QUFDQSxDQUN4QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS9pbmRleC5qcz81NGUwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2FwaVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi90eXBlc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHNcIjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/types.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/types.js ***!
  \******************************************************************/
/***/ (() => {

eval("//# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS90eXBlcy5qcz82NzNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpQ0FBaUMiLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvcmVsYXktYXV0aC9kaXN0L2VzbS90eXBlcy5qcyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/relay-auth/dist/esm/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeData: () => (/* binding */ decodeData),\n/* harmony export */   decodeIss: () => (/* binding */ decodeIss),\n/* harmony export */   decodeJSON: () => (/* binding */ decodeJSON),\n/* harmony export */   decodeJWT: () => (/* binding */ decodeJWT),\n/* harmony export */   decodeSig: () => (/* binding */ decodeSig),\n/* harmony export */   encodeData: () => (/* binding */ encodeData),\n/* harmony export */   encodeIss: () => (/* binding */ encodeIss),\n/* harmony export */   encodeJSON: () => (/* binding */ encodeJSON),\n/* harmony export */   encodeJWT: () => (/* binding */ encodeJWT),\n/* harmony export */   encodeSig: () => (/* binding */ encodeSig)\n/* harmony export */ });\n/* harmony import */ var uint8arrays_concat__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uint8arrays/concat */ \"(ssr)/./node_modules/uint8arrays/esm/src/concat.js\");\n/* harmony import */ var uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uint8arrays/to-string */ \"(ssr)/./node_modules/uint8arrays/esm/src/to-string.js\");\n/* harmony import */ var uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uint8arrays/from-string */ \"(ssr)/./node_modules/uint8arrays/esm/src/from-string.js\");\n/* harmony import */ var _walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/safe-json */ \"(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/constants.js\");\n\n\n\n\n\nfunction decodeJSON(str) {\n    return (0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__.safeJsonParse)((0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(str, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING), _constants__WEBPACK_IMPORTED_MODULE_4__.JSON_ENCODING));\n}\nfunction encodeJSON(val) {\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)((0,_walletconnect_safe_json__WEBPACK_IMPORTED_MODULE_3__.safeJsonStringify)(val), _constants__WEBPACK_IMPORTED_MODULE_4__.JSON_ENCODING), _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction encodeIss(publicKey) {\n    const header = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(_constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_HEADER, _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    const multicodec = _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_BASE + (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)((0,uint8arrays_concat__WEBPACK_IMPORTED_MODULE_0__.concat)([\n        header,\n        publicKey\n    ]), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    return [\n        _constants__WEBPACK_IMPORTED_MODULE_4__.DID_PREFIX,\n        _constants__WEBPACK_IMPORTED_MODULE_4__.DID_METHOD,\n        multicodec\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.DID_DELIMITER);\n}\nfunction decodeIss(issuer) {\n    const [prefix, method, multicodec] = issuer.split(_constants__WEBPACK_IMPORTED_MODULE_4__.DID_DELIMITER);\n    if (prefix !== _constants__WEBPACK_IMPORTED_MODULE_4__.DID_PREFIX || method !== _constants__WEBPACK_IMPORTED_MODULE_4__.DID_METHOD) {\n        throw new Error(`Issuer must be a DID with method \"key\"`);\n    }\n    const base = multicodec.slice(0, 1);\n    if (base !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_BASE) {\n        throw new Error(`Issuer must be a key in mulicodec format`);\n    }\n    const bytes = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(multicodec.slice(1), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    const type = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes.slice(0, 2), _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_ENCODING);\n    if (type !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_HEADER) {\n        throw new Error(`Issuer must be a public key with type \"Ed25519\"`);\n    }\n    const publicKey = bytes.slice(2);\n    if (publicKey.length !== _constants__WEBPACK_IMPORTED_MODULE_4__.MULTICODEC_ED25519_LENGTH) {\n        throw new Error(`Issuer must be a public key with length 32 bytes`);\n    }\n    return publicKey;\n}\nfunction encodeSig(bytes) {\n    return (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(bytes, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction decodeSig(encoded) {\n    return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(encoded, _constants__WEBPACK_IMPORTED_MODULE_4__.JWT_ENCODING);\n}\nfunction encodeData(params) {\n    return (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)([\n        encodeJSON(params.header),\n        encodeJSON(params.payload)\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER), _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING);\n}\nfunction decodeData(data) {\n    const params = (0,uint8arrays_to_string__WEBPACK_IMPORTED_MODULE_1__.toString)(data, _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING).split(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    return {\n        header,\n        payload\n    };\n}\nfunction encodeJWT(params) {\n    return [\n        encodeJSON(params.header),\n        encodeJSON(params.payload),\n        encodeSig(params.signature)\n    ].join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n}\nfunction decodeJWT(jwt) {\n    const params = jwt.split(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER);\n    const header = decodeJSON(params[0]);\n    const payload = decodeJSON(params[1]);\n    const signature = decodeSig(params[2]);\n    const data = (0,uint8arrays_from_string__WEBPACK_IMPORTED_MODULE_2__.fromString)(params.slice(0, 2).join(_constants__WEBPACK_IMPORTED_MODULE_4__.JWT_DELIMITER), _constants__WEBPACK_IMPORTED_MODULE_4__.DATA_ENCODING);\n    return {\n        header,\n        payload,\n        signature,\n        data\n    };\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@walletconnect/safe-json/dist/esm/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   safeJsonParse: () => (/* binding */ safeJsonParse),\n/* harmony export */   safeJsonStringify: () => (/* binding */ safeJsonStringify)\n/* harmony export */ });\nconst JSONStringify = (data)=>JSON.stringify(data, (_, value)=>typeof value === \"bigint\" ? value.toString() + \"n\" : value);\nconst JSONParse = (json)=>{\n    const numbersBiggerThanMaxInt = /([\\[:])?(\\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\\}\\]])/g;\n    const serializedData = json.replace(numbersBiggerThanMaxInt, '$1\"$2n\"$3');\n    return JSON.parse(serializedData, (_, value)=>{\n        const isCustomFormatBigInt = typeof value === \"string\" && value.match(/^\\d+n$/);\n        if (isCustomFormatBigInt) return BigInt(value.substring(0, value.length - 1));\n        return value;\n    });\n};\nfunction safeJsonParse(value) {\n    if (typeof value !== \"string\") {\n        throw new Error(`Cannot safe json parse value of type ${typeof value}`);\n    }\n    try {\n        return JSONParse(value);\n    } catch (_a) {\n        return value;\n    }\n}\nfunction safeJsonStringify(value) {\n    return typeof value === \"string\" ? value : JSONStringify(value) || \"\";\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qvc2FmZS1qc29uL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsZ0JBQWdCQyxDQUFBQSxPQUFRQyxLQUFLQyxTQUFTLENBQUNGLE1BQU0sQ0FBQ0csR0FBR0MsUUFBVSxPQUFPQSxVQUFVLFdBQVdBLE1BQU1DLFFBQVEsS0FBSyxNQUFNRDtBQUN0SCxNQUFNRSxZQUFZQyxDQUFBQTtJQUNkLE1BQU1DLDBCQUEwQjtJQUNoQyxNQUFNQyxpQkFBaUJGLEtBQUtHLE9BQU8sQ0FBQ0YseUJBQXlCO0lBQzdELE9BQU9QLEtBQUtVLEtBQUssQ0FBQ0YsZ0JBQWdCLENBQUNOLEdBQUdDO1FBQ2xDLE1BQU1RLHVCQUF1QixPQUFPUixVQUFVLFlBQVlBLE1BQU1TLEtBQUssQ0FBQztRQUN0RSxJQUFJRCxzQkFDQSxPQUFPRSxPQUFPVixNQUFNVyxTQUFTLENBQUMsR0FBR1gsTUFBTVksTUFBTSxHQUFHO1FBQ3BELE9BQU9aO0lBQ1g7QUFDSjtBQUNPLFNBQVNhLGNBQWNiLEtBQUs7SUFDL0IsSUFBSSxPQUFPQSxVQUFVLFVBQVU7UUFDM0IsTUFBTSxJQUFJYyxNQUFNLENBQUMscUNBQXFDLEVBQUUsT0FBT2QsTUFBTSxDQUFDO0lBQzFFO0lBQ0EsSUFBSTtRQUNBLE9BQU9FLFVBQVVGO0lBQ3JCLEVBQ0EsT0FBT2UsSUFBSTtRQUNQLE9BQU9mO0lBQ1g7QUFDSjtBQUNPLFNBQVNnQixrQkFBa0JoQixLQUFLO0lBQ25DLE9BQU8sT0FBT0EsVUFBVSxXQUFXQSxRQUFRTCxjQUFjSyxVQUFVO0FBQ3ZFLEVBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9rZW5mdW5kLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3NhZmUtanNvbi9kaXN0L2VzbS9pbmRleC5qcz9lMmQ5Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEpTT05TdHJpbmdpZnkgPSBkYXRhID0+IEpTT04uc3RyaW5naWZ5KGRhdGEsIChfLCB2YWx1ZSkgPT4gdHlwZW9mIHZhbHVlID09PSBcImJpZ2ludFwiID8gdmFsdWUudG9TdHJpbmcoKSArIFwiblwiIDogdmFsdWUpO1xuY29uc3QgSlNPTlBhcnNlID0ganNvbiA9PiB7XG4gICAgY29uc3QgbnVtYmVyc0JpZ2dlclRoYW5NYXhJbnQgPSAvKFtcXFs6XSk/KFxcZHsxNyx9fCg/Ols5XSg/OlsxLTldMDcxOTkyNTQ3NDA5OTF8MFsxLTldNzE5OTI1NDc0MDk5MXwwMFs4LTldMTk5MjU0NzQwOTkxfDAwN1syLTldOTkyNTQ3NDA5OTF8MDA3MTk5WzMtOV01NDc0MDk5MXwwMDcxOTkyWzYtOV00NzQwOTkxfDAwNzE5OTI1WzUtOV03NDA5OTF8MDA3MTk5MjU0WzgtOV00MDk5MXwwMDcxOTkyNTQ3WzUtOV0wOTkxfDAwNzE5OTI1NDc0WzEtOV05OTF8MDA3MTk5MjU0NzQwOTlbMi05XSkpKShbLFxcfVxcXV0pL2c7XG4gICAgY29uc3Qgc2VyaWFsaXplZERhdGEgPSBqc29uLnJlcGxhY2UobnVtYmVyc0JpZ2dlclRoYW5NYXhJbnQsIFwiJDFcXFwiJDJuXFxcIiQzXCIpO1xuICAgIHJldHVybiBKU09OLnBhcnNlKHNlcmlhbGl6ZWREYXRhLCAoXywgdmFsdWUpID0+IHtcbiAgICAgICAgY29uc3QgaXNDdXN0b21Gb3JtYXRCaWdJbnQgPSB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiYgdmFsdWUubWF0Y2goL15cXGQrbiQvKTtcbiAgICAgICAgaWYgKGlzQ3VzdG9tRm9ybWF0QmlnSW50KVxuICAgICAgICAgICAgcmV0dXJuIEJpZ0ludCh2YWx1ZS5zdWJzdHJpbmcoMCwgdmFsdWUubGVuZ3RoIC0gMSkpO1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIHNhZmVKc29uUGFyc2UodmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IHNhZmUganNvbiBwYXJzZSB2YWx1ZSBvZiB0eXBlICR7dHlwZW9mIHZhbHVlfWApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gSlNPTlBhcnNlKHZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc2FmZUpzb25TdHJpbmdpZnkodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiID8gdmFsdWUgOiBKU09OU3RyaW5naWZ5KHZhbHVlKSB8fCBcIlwiO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIkpTT05TdHJpbmdpZnkiLCJkYXRhIiwiSlNPTiIsInN0cmluZ2lmeSIsIl8iLCJ2YWx1ZSIsInRvU3RyaW5nIiwiSlNPTlBhcnNlIiwianNvbiIsIm51bWJlcnNCaWdnZXJUaGFuTWF4SW50Iiwic2VyaWFsaXplZERhdGEiLCJyZXBsYWNlIiwicGFyc2UiLCJpc0N1c3RvbUZvcm1hdEJpZ0ludCIsIm1hdGNoIiwiQmlnSW50Iiwic3Vic3RyaW5nIiwibGVuZ3RoIiwic2FmZUpzb25QYXJzZSIsIkVycm9yIiwiX2EiLCJzYWZlSnNvblN0cmluZ2lmeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/safe-json/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/sign-client/dist/index.es.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/sign-client/dist/index.es.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AUTH_CONTEXT: () => (/* binding */ pt),\n/* harmony export */   AUTH_KEYS_CONTEXT: () => (/* binding */ ht),\n/* harmony export */   AUTH_PAIRING_TOPIC_CONTEXT: () => (/* binding */ dt),\n/* harmony export */   AUTH_PROTOCOL: () => (/* binding */ lt),\n/* harmony export */   AUTH_PUBLIC_KEY_NAME: () => (/* binding */ ae),\n/* harmony export */   AUTH_REQUEST_CONTEXT: () => (/* binding */ ut),\n/* harmony export */   AUTH_STORAGE_PREFIX: () => (/* binding */ oe),\n/* harmony export */   AUTH_VERSION: () => (/* binding */ gs),\n/* harmony export */   ENGINE_CONTEXT: () => (/* binding */ ot),\n/* harmony export */   ENGINE_QUEUE_STATES: () => (/* binding */ L),\n/* harmony export */   ENGINE_RPC_OPTS: () => (/* binding */ v),\n/* harmony export */   HISTORY_CONTEXT: () => (/* binding */ hs),\n/* harmony export */   HISTORY_EVENTS: () => (/* binding */ ps),\n/* harmony export */   HISTORY_STORAGE_VERSION: () => (/* binding */ ds),\n/* harmony export */   METHODS_TO_VERIFY: () => (/* binding */ ct),\n/* harmony export */   PROPOSAL_CONTEXT: () => (/* binding */ it),\n/* harmony export */   PROPOSAL_EXPIRY: () => (/* binding */ us),\n/* harmony export */   PROPOSAL_EXPIRY_MESSAGE: () => (/* binding */ rt),\n/* harmony export */   REQUEST_CONTEXT: () => (/* binding */ at),\n/* harmony export */   SESSION_CONTEXT: () => (/* binding */ nt),\n/* harmony export */   SESSION_EXPIRY: () => (/* binding */ H),\n/* harmony export */   SESSION_REQUEST_EXPIRY_BOUNDARIES: () => (/* binding */ me),\n/* harmony export */   SIGN_CLIENT_CONTEXT: () => (/* binding */ Le),\n/* harmony export */   SIGN_CLIENT_DEFAULT: () => (/* binding */ we),\n/* harmony export */   SIGN_CLIENT_EVENTS: () => (/* binding */ cs),\n/* harmony export */   SIGN_CLIENT_PROTOCOL: () => (/* binding */ Ce),\n/* harmony export */   SIGN_CLIENT_STORAGE_OPTIONS: () => (/* binding */ ls),\n/* harmony export */   SIGN_CLIENT_STORAGE_PREFIX: () => (/* binding */ ye),\n/* harmony export */   SIGN_CLIENT_VERSION: () => (/* binding */ xe),\n/* harmony export */   SessionStore: () => (/* binding */ Ns),\n/* harmony export */   SignClient: () => (/* binding */ Ps),\n/* harmony export */   WALLETCONNECT_DEEPLINK_CHOICE: () => (/* binding */ De),\n/* harmony export */   \"default\": () => (/* binding */ _e)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/core */ \"(ssr)/./node_modules/@walletconnect/core/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\");\n/* harmony import */ var _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/types */ \"(ssr)/./node_modules/@walletconnect/types/dist/index.es.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n\n\n\n\n\n\n\nconst Ce = \"wc\", xe = 2, Le = \"client\", ye = `${Ce}@${xe}:${Le}:`, we = {\n    name: Le,\n    logger: \"error\",\n    controller: !1,\n    relayUrl: \"wss://relay.walletconnect.org\"\n}, cs = {\n    session_proposal: \"session_proposal\",\n    session_update: \"session_update\",\n    session_extend: \"session_extend\",\n    session_ping: \"session_ping\",\n    session_delete: \"session_delete\",\n    session_expire: \"session_expire\",\n    session_request: \"session_request\",\n    session_request_sent: \"session_request_sent\",\n    session_event: \"session_event\",\n    proposal_expire: \"proposal_expire\",\n    session_authenticate: \"session_authenticate\",\n    session_request_expire: \"session_request_expire\"\n}, ls = {\n    database: \":memory:\"\n}, De = \"WALLETCONNECT_DEEPLINK_CHOICE\", ps = {\n    created: \"history_created\",\n    updated: \"history_updated\",\n    deleted: \"history_deleted\",\n    sync: \"history_sync\"\n}, hs = \"history\", ds = \"0.3\", it = \"proposal\", us = _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.THIRTY_DAYS, rt = \"Proposal expired\", nt = \"session\", H = _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.SEVEN_DAYS, ot = \"engine\", v = {\n    wc_sessionPropose: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1100\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1101\n        },\n        reject: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1120\n        },\n        autoReject: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1121\n        }\n    },\n    wc_sessionSettle: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1102\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1103\n        }\n    },\n    wc_sessionUpdate: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.ONE_DAY,\n            prompt: !1,\n            tag: 1104\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.ONE_DAY,\n            prompt: !1,\n            tag: 1105\n        }\n    },\n    wc_sessionExtend: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.ONE_DAY,\n            prompt: !1,\n            tag: 1106\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.ONE_DAY,\n            prompt: !1,\n            tag: 1107\n        }\n    },\n    wc_sessionRequest: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1108\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1109\n        }\n    },\n    wc_sessionEvent: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,\n            prompt: !0,\n            tag: 1110\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1111\n        }\n    },\n    wc_sessionDelete: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.ONE_DAY,\n            prompt: !1,\n            tag: 1112\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.ONE_DAY,\n            prompt: !1,\n            tag: 1113\n        }\n    },\n    wc_sessionPing: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.ONE_DAY,\n            prompt: !1,\n            tag: 1114\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.ONE_DAY,\n            prompt: !1,\n            tag: 1115\n        }\n    },\n    wc_sessionAuthenticate: {\n        req: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.ONE_HOUR,\n            prompt: !0,\n            tag: 1116\n        },\n        res: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.ONE_HOUR,\n            prompt: !1,\n            tag: 1117\n        },\n        reject: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1118\n        },\n        autoReject: {\n            ttl: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,\n            prompt: !1,\n            tag: 1119\n        }\n    }\n}, me = {\n    min: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES,\n    max: _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.SEVEN_DAYS\n}, L = {\n    idle: \"IDLE\",\n    active: \"ACTIVE\"\n}, at = \"request\", ct = [\n    \"wc_sessionPropose\",\n    \"wc_sessionRequest\",\n    \"wc_authRequest\",\n    \"wc_sessionAuthenticate\"\n], lt = \"wc\", gs = 1.5, pt = \"auth\", ht = \"authKeys\", dt = \"pairingTopics\", ut = \"requests\", oe = `${lt}@${1.5}:${pt}:`, ae = `${oe}:PUB_KEY`;\nvar ys = Object.defineProperty, ws = Object.defineProperties, ms = Object.getOwnPropertyDescriptors, gt = Object.getOwnPropertySymbols, _s = Object.prototype.hasOwnProperty, Es = Object.prototype.propertyIsEnumerable, yt = (q, o, e)=>o in q ? ys(q, o, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : q[o] = e, I = (q, o)=>{\n    for(var e in o || (o = {}))_s.call(o, e) && yt(q, e, o[e]);\n    if (gt) for (var e of gt(o))Es.call(o, e) && yt(q, e, o[e]);\n    return q;\n}, D = (q, o)=>ws(q, ms(o));\nclass Rs extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.IEngine {\n    constructor(o){\n        super(o), this.name = ot, this.events = new (events__WEBPACK_IMPORTED_MODULE_2___default()), this.initialized = !1, this.requestQueue = {\n            state: L.idle,\n            queue: []\n        }, this.sessionRequestQueue = {\n            state: L.idle,\n            queue: []\n        }, this.requestQueueDelay = _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.ONE_SECOND, this.expectedPairingMethodMap = new Map, this.recentlyDeletedMap = new Map, this.recentlyDeletedLimit = 200, this.relayMessageCache = [], this.init = async ()=>{\n            this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), await this.registerLinkModeListeners(), this.client.core.pairing.register({\n                methods: Object.keys(v)\n            }), this.initialized = !0, setTimeout(()=>{\n                this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(this.requestQueueDelay)));\n        }, this.connect = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            const t = D(I({}, e), {\n                requiredNamespaces: e.requiredNamespaces || {},\n                optionalNamespaces: e.optionalNamespaces || {}\n            });\n            await this.isValidConnect(t);\n            const { pairingTopic: s, requiredNamespaces: i, optionalNamespaces: r, sessionProperties: n, relays: a } = t;\n            let c = s, h, p = !1;\n            try {\n                if (c) {\n                    const E = this.client.core.pairing.pairings.get(c);\n                    this.client.logger.warn(\"connect() with existing pairing topic is deprecated and will be removed in the next major release.\"), p = E.active;\n                }\n            } catch (E) {\n                throw this.client.logger.error(`connect() -> pairing.get(${c}) failed`), E;\n            }\n            if (!c || !p) {\n                const { topic: E, uri: S } = await this.client.core.pairing.create();\n                c = E, h = S;\n            }\n            if (!c) {\n                const { message: E } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `connect() pairing topic: ${c}`);\n                throw new Error(E);\n            }\n            const d = await this.client.core.crypto.generateKeyPair(), l = v.wc_sessionPropose.req.ttl || _walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.FIVE_MINUTES, w = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(l), m = I({\n                requiredNamespaces: i,\n                optionalNamespaces: r,\n                relays: a ?? [\n                    {\n                        protocol: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_DEFAULT_PROTOCOL\n                    }\n                ],\n                proposer: {\n                    publicKey: d,\n                    metadata: this.client.metadata\n                },\n                expiryTimestamp: w,\n                pairingTopic: c\n            }, n && {\n                sessionProperties: n\n            }), { reject: y, resolve: _, done: R } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(l, rt);\n            this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), async ({ error: E, session: S })=>{\n                if (E) y(E);\n                else if (S) {\n                    S.self.publicKey = d;\n                    const M = D(I({}, S), {\n                        pairingTopic: m.pairingTopic,\n                        requiredNamespaces: m.requiredNamespaces,\n                        optionalNamespaces: m.optionalNamespaces,\n                        transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay\n                    });\n                    await this.client.session.set(S.topic, M), await this.setExpiry(S.topic, S.expiry), c && await this.client.core.pairing.updateMetadata({\n                        topic: c,\n                        metadata: S.peer.metadata\n                    }), this.cleanupDuplicatePairings(M), _(M);\n                }\n            });\n            const V = await this.sendRequest({\n                topic: c,\n                method: \"wc_sessionPropose\",\n                params: m,\n                throwOnFailedPublish: !0\n            });\n            return await this.setProposal(V, I({\n                id: V\n            }, m)), {\n                uri: h,\n                approval: R\n            };\n        }, this.pair = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                return await this.client.core.pairing.pair(e);\n            } catch (t) {\n                throw this.client.logger.error(\"pair() failed\"), t;\n            }\n        }, this.approve = async (e)=>{\n            var t, s, i;\n            const r = this.client.core.eventClient.createEvent({\n                properties: {\n                    topic: (t = e?.id) == null ? void 0 : t.toString(),\n                    trace: [\n                        _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_approve_started\n                    ]\n                }\n            });\n            try {\n                this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            } catch (N) {\n                throw r.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.no_internet_connection), N;\n            }\n            try {\n                await this.isValidProposalId(e?.id);\n            } catch (N) {\n                throw this.client.logger.error(`approve() -> proposal.get(${e?.id}) failed`), r.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.proposal_not_found), N;\n            }\n            try {\n                await this.isValidApprove(e);\n            } catch (N) {\n                throw this.client.logger.error(\"approve() -> isValidApprove() failed\"), r.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.session_approve_namespace_validation_failure), N;\n            }\n            const { id: n, relayProtocol: a, namespaces: c, sessionProperties: h, sessionConfig: p } = e, d = this.client.proposal.get(n);\n            this.client.core.eventClient.deleteEvent({\n                eventId: r.eventId\n            });\n            const { pairingTopic: l, proposer: w, requiredNamespaces: m, optionalNamespaces: y } = d;\n            let _ = (s = this.client.core.eventClient) == null ? void 0 : s.getEvent({\n                topic: l\n            });\n            _ || (_ = (i = this.client.core.eventClient) == null ? void 0 : i.createEvent({\n                type: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_approve_started,\n                properties: {\n                    topic: l,\n                    trace: [\n                        _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_approve_started,\n                        _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_namespaces_validation_success\n                    ]\n                }\n            }));\n            const R = await this.client.core.crypto.generateKeyPair(), V = w.publicKey, E = await this.client.core.crypto.generateSharedKey(R, V), S = I(I({\n                relay: {\n                    protocol: a ?? \"irn\"\n                },\n                namespaces: c,\n                controller: {\n                    publicKey: R,\n                    metadata: this.client.metadata\n                },\n                expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(H)\n            }, h && {\n                sessionProperties: h\n            }), p && {\n                sessionConfig: p\n            }), M = _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay;\n            _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.subscribing_session_topic);\n            try {\n                await this.client.core.relayer.subscribe(E, {\n                    transportType: M\n                });\n            } catch (N) {\n                throw _.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.subscribe_session_topic_failure), N;\n            }\n            _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.subscribe_session_topic_success);\n            const W = D(I({}, S), {\n                topic: E,\n                requiredNamespaces: m,\n                optionalNamespaces: y,\n                pairingTopic: l,\n                acknowledged: !1,\n                self: S.controller,\n                peer: {\n                    publicKey: w.publicKey,\n                    metadata: w.metadata\n                },\n                controller: R,\n                transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay\n            });\n            await this.client.session.set(E, W), _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.store_session);\n            try {\n                _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.publishing_session_settle), await this.sendRequest({\n                    topic: E,\n                    method: \"wc_sessionSettle\",\n                    params: S,\n                    throwOnFailedPublish: !0\n                }).catch((N)=>{\n                    throw _?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.session_settle_publish_failure), N;\n                }), _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_settle_publish_success), _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.publishing_session_approve), await this.sendResult({\n                    id: n,\n                    topic: l,\n                    result: {\n                        relay: {\n                            protocol: a ?? \"irn\"\n                        },\n                        responderPublicKey: R\n                    },\n                    throwOnFailedPublish: !0\n                }).catch((N)=>{\n                    throw _?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.session_approve_publish_failure), N;\n                }), _.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_TRACES.session_approve_publish_success);\n            } catch (N) {\n                throw this.client.logger.error(N), this.client.session.delete(E, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), await this.client.core.relayer.unsubscribe(E), N;\n            }\n            return this.client.core.eventClient.deleteEvent({\n                eventId: _.eventId\n            }), await this.client.core.pairing.updateMetadata({\n                topic: l,\n                metadata: w.metadata\n            }), await this.client.proposal.delete(n, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), await this.client.core.pairing.activate({\n                topic: l\n            }), await this.setExpiry(E, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(H)), {\n                topic: E,\n                acknowledged: ()=>Promise.resolve(this.client.session.get(E))\n            };\n        }, this.reject = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                await this.isValidReject(e);\n            } catch (r) {\n                throw this.client.logger.error(\"reject() -> isValidReject() failed\"), r;\n            }\n            const { id: t, reason: s } = e;\n            let i;\n            try {\n                i = this.client.proposal.get(t).pairingTopic;\n            } catch (r) {\n                throw this.client.logger.error(`reject() -> proposal.get(${t}) failed`), r;\n            }\n            i && (await this.sendError({\n                id: t,\n                topic: i,\n                error: s,\n                rpcOpts: v.wc_sessionPropose.reject\n            }), await this.client.proposal.delete(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")));\n        }, this.update = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                await this.isValidUpdate(e);\n            } catch (p) {\n                throw this.client.logger.error(\"update() -> isValidUpdate() failed\"), p;\n            }\n            const { topic: t, namespaces: s } = e, { done: i, resolve: r, reject: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(), a = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString(), h = this.client.session.get(t).namespaces;\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", a), ({ error: p })=>{\n                p ? n(p) : r();\n            }), await this.client.session.update(t, {\n                namespaces: s\n            }), await this.sendRequest({\n                topic: t,\n                method: \"wc_sessionUpdate\",\n                params: {\n                    namespaces: s\n                },\n                throwOnFailedPublish: !0,\n                clientRpcId: a,\n                relayRpcId: c\n            }).catch((p)=>{\n                this.client.logger.error(p), this.client.session.update(t, {\n                    namespaces: h\n                }), n(p);\n            }), {\n                acknowledged: i\n            };\n        }, this.extend = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                await this.isValidExtend(e);\n            } catch (a) {\n                throw this.client.logger.error(\"extend() -> isValidExtend() failed\"), a;\n            }\n            const { topic: t } = e, s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), { done: i, resolve: r, reject: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n            return this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s), ({ error: a })=>{\n                a ? n(a) : r();\n            }), await this.setExpiry(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(H)), this.sendRequest({\n                topic: t,\n                method: \"wc_sessionExtend\",\n                params: {},\n                clientRpcId: s,\n                throwOnFailedPublish: !0\n            }).catch((a)=>{\n                n(a);\n            }), {\n                acknowledged: i\n            };\n        }, this.request = async (e)=>{\n            this.isInitialized();\n            try {\n                await this.isValidRequest(e);\n            } catch (w) {\n                throw this.client.logger.error(\"request() -> isValidRequest() failed\"), w;\n            }\n            const { chainId: t, request: s, topic: i, expiry: r = v.wc_sessionRequest.req.ttl } = e, n = this.client.session.get(i);\n            n?.transportType === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const a = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString(), { done: h, resolve: p, reject: d } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(r, \"Request expired. Please try again.\");\n            this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", a), ({ error: w, result: m })=>{\n                w ? d(w) : p(m);\n            });\n            const l = this.getAppLinkIfEnabled(n.peer.metadata, n.transportType);\n            return l ? (await this.sendRequest({\n                clientRpcId: a,\n                relayRpcId: c,\n                topic: i,\n                method: \"wc_sessionRequest\",\n                params: {\n                    request: D(I({}, s), {\n                        expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(r)\n                    }),\n                    chainId: t\n                },\n                expiry: r,\n                throwOnFailedPublish: !0,\n                appLink: l\n            }).catch((w)=>d(w)), this.client.events.emit(\"session_request_sent\", {\n                topic: i,\n                request: s,\n                chainId: t,\n                id: a\n            }), await h()) : await Promise.all([\n                new Promise(async (w)=>{\n                    await this.sendRequest({\n                        clientRpcId: a,\n                        relayRpcId: c,\n                        topic: i,\n                        method: \"wc_sessionRequest\",\n                        params: {\n                            request: D(I({}, s), {\n                                expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(r)\n                            }),\n                            chainId: t\n                        },\n                        expiry: r,\n                        throwOnFailedPublish: !0\n                    }).catch((m)=>d(m)), this.client.events.emit(\"session_request_sent\", {\n                        topic: i,\n                        request: s,\n                        chainId: t,\n                        id: a\n                    }), w();\n                }),\n                new Promise(async (w)=>{\n                    var m;\n                    if (!((m = n.sessionConfig) != null && m.disableDeepLink)) {\n                        const y = await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDeepLink)(this.client.core.storage, De);\n                        await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.handleDeeplinkRedirect)({\n                            id: a,\n                            topic: i,\n                            wcDeepLink: y\n                        });\n                    }\n                    w();\n                }),\n                h()\n            ]).then((w)=>w[2]);\n        }, this.respond = async (e)=>{\n            this.isInitialized(), await this.isValidRespond(e);\n            const { topic: t, response: s } = e, { id: i } = s, r = this.client.session.get(t);\n            r.transportType === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const n = this.getAppLinkIfEnabled(r.peer.metadata, r.transportType);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(s) ? await this.sendResult({\n                id: i,\n                topic: t,\n                result: s.result,\n                throwOnFailedPublish: !0,\n                appLink: n\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(s) && await this.sendError({\n                id: i,\n                topic: t,\n                error: s.error,\n                appLink: n\n            }), this.cleanupAfterResponse(e);\n        }, this.ping = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow();\n            try {\n                await this.isValidPing(e);\n            } catch (s) {\n                throw this.client.logger.error(\"ping() -> isValidPing() failed\"), s;\n            }\n            const { topic: t } = e;\n            if (this.client.session.keys.includes(t)) {\n                const s = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), i = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString(), { done: r, resolve: n, reject: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)();\n                this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s), ({ error: c })=>{\n                    c ? a(c) : n();\n                }), await Promise.all([\n                    this.sendRequest({\n                        topic: t,\n                        method: \"wc_sessionPing\",\n                        params: {},\n                        throwOnFailedPublish: !0,\n                        clientRpcId: s,\n                        relayRpcId: i\n                    }),\n                    r()\n                ]);\n            } else this.client.core.pairing.pairings.keys.includes(t) && (this.client.logger.warn(\"ping() on pairing topic is deprecated and will be removed in the next major release.\"), await this.client.core.pairing.ping({\n                topic: t\n            }));\n        }, this.emit = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidEmit(e);\n            const { topic: t, event: s, chainId: i } = e, r = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.getBigIntRpcId)().toString(), n = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)();\n            await this.sendRequest({\n                topic: t,\n                method: \"wc_sessionEvent\",\n                params: {\n                    event: s,\n                    chainId: i\n                },\n                throwOnFailedPublish: !0,\n                relayRpcId: r,\n                clientRpcId: n\n            });\n        }, this.disconnect = async (e)=>{\n            this.isInitialized(), await this.confirmOnlineStateOrThrow(), await this.isValidDisconnect(e);\n            const { topic: t } = e;\n            if (this.client.session.keys.includes(t)) await this.sendRequest({\n                topic: t,\n                method: \"wc_sessionDelete\",\n                params: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"),\n                throwOnFailedPublish: !0\n            }), await this.deleteSession({\n                topic: t,\n                emitEvent: !1\n            });\n            else if (this.client.core.pairing.pairings.keys.includes(t)) await this.client.core.pairing.disconnect({\n                topic: t\n            });\n            else {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISMATCHED_TOPIC\", `Session or pairing topic not found: ${t}`);\n                throw new Error(s);\n            }\n        }, this.find = (e)=>(this.isInitialized(), this.client.session.getAll().filter((t)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isSessionCompatible)(t, e))), this.getPendingSessionRequests = ()=>this.client.pendingRequest.getAll(), this.authenticate = async (e, t)=>{\n            var s;\n            this.isInitialized(), this.isValidAuthenticate(e);\n            const i = t && this.client.core.linkModeSupportedApps.includes(t) && ((s = this.client.metadata.redirect) == null ? void 0 : s.linkMode), r = i ? _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode : _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay;\n            r === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const { chains: n, statement: a = \"\", uri: c, domain: h, nonce: p, type: d, exp: l, nbf: w, methods: m = [], expiry: y } = e, _ = [\n                ...e.resources || []\n            ], { topic: R, uri: V } = await this.client.core.pairing.create({\n                methods: [\n                    \"wc_sessionAuthenticate\"\n                ],\n                transportType: r\n            });\n            this.client.logger.info({\n                message: \"Generated new pairing\",\n                pairing: {\n                    topic: R,\n                    uri: V\n                }\n            });\n            const E = await this.client.core.crypto.generateKeyPair(), S = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashKey)(E);\n            if (await Promise.all([\n                this.client.auth.authKeys.set(ae, {\n                    responseTopic: S,\n                    publicKey: E\n                }),\n                this.client.auth.pairingTopics.set(S, {\n                    topic: S,\n                    pairingTopic: R\n                })\n            ]), await this.client.core.relayer.subscribe(S, {\n                transportType: r\n            }), this.client.logger.info(`sending request to new pairing topic: ${R}`), m.length > 0) {\n                const { namespace: O } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(n[0]);\n                let T = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createEncodedRecap)(O, \"request\", m);\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRecapFromResources)(_) && (T = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.mergeEncodedRecaps)(T, _.pop())), _.push(T);\n            }\n            const M = y && y > v.wc_sessionAuthenticate.req.ttl ? y : v.wc_sessionAuthenticate.req.ttl, W = {\n                authPayload: {\n                    type: d ?? \"caip122\",\n                    chains: n,\n                    statement: a,\n                    aud: c,\n                    domain: h,\n                    version: \"1\",\n                    nonce: p,\n                    iat: new Date().toISOString(),\n                    exp: l,\n                    nbf: w,\n                    resources: _\n                },\n                requester: {\n                    publicKey: E,\n                    metadata: this.client.metadata\n                },\n                expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(M)\n            }, N = {\n                eip155: {\n                    chains: n,\n                    methods: [\n                        ...new Set([\n                            \"personal_sign\",\n                            ...m\n                        ])\n                    ],\n                    events: [\n                        \"chainChanged\",\n                        \"accountsChanged\"\n                    ]\n                }\n            }, Ve = {\n                requiredNamespaces: {},\n                optionalNamespaces: N,\n                relays: [\n                    {\n                        protocol: \"irn\"\n                    }\n                ],\n                pairingTopic: R,\n                proposer: {\n                    publicKey: E,\n                    metadata: this.client.metadata\n                },\n                expiryTimestamp: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(v.wc_sessionPropose.req.ttl)\n            }, { done: mt, resolve: Me, reject: Ee } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.createDelayedPromise)(M, \"Request expired\"), ce = async ({ error: O, session: T })=>{\n                if (this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", G), Re), O) Ee(O);\n                else if (T) {\n                    T.self.publicKey = E, await this.client.session.set(T.topic, T), await this.setExpiry(T.topic, T.expiry), R && await this.client.core.pairing.updateMetadata({\n                        topic: R,\n                        metadata: T.peer.metadata\n                    });\n                    const le = this.client.session.get(T.topic);\n                    await this.deleteProposal(Z), Me({\n                        session: le\n                    });\n                }\n            }, Re = async (O)=>{\n                var T, le, ke;\n                if (await this.deletePendingAuthRequest(G, {\n                    message: \"fulfilled\",\n                    code: 0\n                }), O.error) {\n                    const te = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"WC_METHOD_UNSUPPORTED\", \"wc_sessionAuthenticate\");\n                    return O.error.code === te.code ? void 0 : (this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), ce), Ee(O.error.message));\n                }\n                await this.deleteProposal(Z), this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), ce);\n                const { cacaos: $e, responder: j } = O.result, Ie = [], Ke = [];\n                for (const te of $e){\n                    await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.validateSignedCacao)({\n                        cacao: te,\n                        projectId: this.client.core.projectId\n                    }) || (this.client.logger.error(te, \"Signature verification failed\"), Ee((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"SESSION_SETTLEMENT_FAILED\", \"Signature verification failed\")));\n                    const { p: fe } = te, ve = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRecapFromResources)(fe.resources), Ue = [\n                        (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getNamespacedDidChainId)(fe.iss)\n                    ], _t = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDidAddress)(fe.iss);\n                    if (ve) {\n                        const qe = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getMethodsFromRecap)(ve), Et = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getChainsFromRecap)(ve);\n                        Ie.push(...qe), Ue.push(...Et);\n                    }\n                    for (const qe of Ue)Ke.push(`${qe}:${_t}`);\n                }\n                const ee = await this.client.core.crypto.generateSharedKey(E, j.publicKey);\n                let pe;\n                Ie.length > 0 && (pe = {\n                    topic: ee,\n                    acknowledged: !0,\n                    self: {\n                        publicKey: E,\n                        metadata: this.client.metadata\n                    },\n                    peer: j,\n                    controller: j.publicKey,\n                    expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(H),\n                    requiredNamespaces: {},\n                    optionalNamespaces: {},\n                    relay: {\n                        protocol: \"irn\"\n                    },\n                    pairingTopic: R,\n                    namespaces: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.buildNamespacesFromAuth)([\n                        ...new Set(Ie)\n                    ], [\n                        ...new Set(Ke)\n                    ]),\n                    transportType: r\n                }, await this.client.core.relayer.subscribe(ee, {\n                    transportType: r\n                }), await this.client.session.set(ee, pe), R && await this.client.core.pairing.updateMetadata({\n                    topic: R,\n                    metadata: j.metadata\n                }), pe = this.client.session.get(ee)), (T = this.client.metadata.redirect) != null && T.linkMode && (le = j.metadata.redirect) != null && le.linkMode && (ke = j.metadata.redirect) != null && ke.universal && t && (this.client.core.addLinkModeSupportedApp(j.metadata.redirect.universal), this.client.session.update(ee, {\n                    transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode\n                })), Me({\n                    auths: $e,\n                    session: pe\n                });\n            }, G = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)(), Z = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.payloadId)();\n            this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), ce), this.events.once((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", G), Re);\n            let Se;\n            try {\n                if (i) {\n                    const O = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionAuthenticate\", W, G);\n                    this.client.core.history.set(R, O);\n                    const T = await this.client.core.crypto.encode(\"\", O, {\n                        type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_2,\n                        encoding: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL\n                    });\n                    Se = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getLinkModeURL)(t, R, T);\n                } else await Promise.all([\n                    this.sendRequest({\n                        topic: R,\n                        method: \"wc_sessionAuthenticate\",\n                        params: W,\n                        expiry: e.expiry,\n                        throwOnFailedPublish: !0,\n                        clientRpcId: G\n                    }),\n                    this.sendRequest({\n                        topic: R,\n                        method: \"wc_sessionPropose\",\n                        params: Ve,\n                        expiry: v.wc_sessionPropose.req.ttl,\n                        throwOnFailedPublish: !0,\n                        clientRpcId: Z\n                    })\n                ]);\n            } catch (O) {\n                throw this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), ce), this.events.off((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", G), Re), O;\n            }\n            return await this.setProposal(Z, I({\n                id: Z\n            }, Ve)), await this.setAuthRequest(G, {\n                request: D(I({}, W), {\n                    verifyContext: {}\n                }),\n                pairingTopic: R,\n                transportType: r\n            }), {\n                uri: Se ?? V,\n                response: mt\n            };\n        }, this.approveSessionAuthenticate = async (e)=>{\n            const { id: t, auths: s } = e, i = this.client.core.eventClient.createEvent({\n                properties: {\n                    topic: t.toString(),\n                    trace: [\n                        _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.authenticated_session_approve_started\n                    ]\n                }\n            });\n            try {\n                this.isInitialized();\n            } catch (y) {\n                throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.no_internet_connection), y;\n            }\n            const r = this.getPendingAuthRequest(t);\n            if (!r) throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.authenticated_session_pending_request_not_found), new Error(`Could not find pending auth request with id ${t}`);\n            const n = r.transportType || _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay;\n            n === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const a = r.requester.publicKey, c = await this.client.core.crypto.generateKeyPair(), h = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashKey)(a), p = {\n                type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1,\n                receiverPublicKey: a,\n                senderPublicKey: c\n            }, d = [], l = [];\n            for (const y of s){\n                if (!await (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.validateSignedCacao)({\n                    cacao: y,\n                    projectId: this.client.core.projectId\n                })) {\n                    i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.invalid_cacao);\n                    const S = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"SESSION_SETTLEMENT_FAILED\", \"Signature verification failed\");\n                    throw await this.sendError({\n                        id: t,\n                        topic: h,\n                        error: S,\n                        encodeOpts: p\n                    }), new Error(S.message);\n                }\n                i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.cacaos_verified);\n                const { p: _ } = y, R = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getRecapFromResources)(_.resources), V = [\n                    (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getNamespacedDidChainId)(_.iss)\n                ], E = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getDidAddress)(_.iss);\n                if (R) {\n                    const S = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getMethodsFromRecap)(R), M = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getChainsFromRecap)(R);\n                    d.push(...S), V.push(...M);\n                }\n                for (const S of V)l.push(`${S}:${E}`);\n            }\n            const w = await this.client.core.crypto.generateSharedKey(c, a);\n            i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.create_authenticated_session_topic);\n            let m;\n            if (d?.length > 0) {\n                m = {\n                    topic: w,\n                    acknowledged: !0,\n                    self: {\n                        publicKey: c,\n                        metadata: this.client.metadata\n                    },\n                    peer: {\n                        publicKey: a,\n                        metadata: r.requester.metadata\n                    },\n                    controller: a,\n                    expiry: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(H),\n                    authentication: s,\n                    requiredNamespaces: {},\n                    optionalNamespaces: {},\n                    relay: {\n                        protocol: \"irn\"\n                    },\n                    pairingTopic: r.pairingTopic,\n                    namespaces: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.buildNamespacesFromAuth)([\n                        ...new Set(d)\n                    ], [\n                        ...new Set(l)\n                    ]),\n                    transportType: n\n                }, i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.subscribing_authenticated_session_topic);\n                try {\n                    await this.client.core.relayer.subscribe(w, {\n                        transportType: n\n                    });\n                } catch (y) {\n                    throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.subscribe_authenticated_session_topic_failure), y;\n                }\n                i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.subscribe_authenticated_session_topic_success), await this.client.session.set(w, m), i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.store_authenticated_session), await this.client.core.pairing.updateMetadata({\n                    topic: r.pairingTopic,\n                    metadata: r.requester.metadata\n                });\n            }\n            i.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_TRACES.publishing_authenticated_session_approve);\n            try {\n                await this.sendResult({\n                    topic: h,\n                    id: t,\n                    result: {\n                        cacaos: s,\n                        responder: {\n                            publicKey: c,\n                            metadata: this.client.metadata\n                        }\n                    },\n                    encodeOpts: p,\n                    throwOnFailedPublish: !0,\n                    appLink: this.getAppLinkIfEnabled(r.requester.metadata, n)\n                });\n            } catch (y) {\n                throw i.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_AUTHENTICATE_ERRORS.authenticated_session_approve_publish_failure), y;\n            }\n            return await this.client.auth.requests.delete(t, {\n                message: \"fulfilled\",\n                code: 0\n            }), await this.client.core.pairing.activate({\n                topic: r.pairingTopic\n            }), this.client.core.eventClient.deleteEvent({\n                eventId: i.eventId\n            }), {\n                session: m\n            };\n        }, this.rejectSessionAuthenticate = async (e)=>{\n            this.isInitialized();\n            const { id: t, reason: s } = e, i = this.getPendingAuthRequest(t);\n            if (!i) throw new Error(`Could not find pending auth request with id ${t}`);\n            i.transportType === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay && await this.confirmOnlineStateOrThrow();\n            const r = i.requester.publicKey, n = await this.client.core.crypto.generateKeyPair(), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashKey)(r), c = {\n                type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1,\n                receiverPublicKey: r,\n                senderPublicKey: n\n            };\n            await this.sendError({\n                id: t,\n                topic: a,\n                error: s,\n                encodeOpts: c,\n                rpcOpts: v.wc_sessionAuthenticate.reject,\n                appLink: this.getAppLinkIfEnabled(i.requester.metadata, i.transportType)\n            }), await this.client.auth.requests.delete(t, {\n                message: \"rejected\",\n                code: 0\n            }), await this.client.proposal.delete(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n        }, this.formatAuthMessage = (e)=>{\n            this.isInitialized();\n            const { request: t, iss: s } = e;\n            return (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.formatMessage)(t, s);\n        }, this.processRelayMessageCache = ()=>{\n            setTimeout(async ()=>{\n                if (this.relayMessageCache.length !== 0) for(; this.relayMessageCache.length > 0;)try {\n                    const e = this.relayMessageCache.shift();\n                    e && await this.onRelayMessage(e);\n                } catch (e) {\n                    this.client.logger.error(e);\n                }\n            }, 50);\n        }, this.cleanupDuplicatePairings = async (e)=>{\n            if (e.pairingTopic) try {\n                const t = this.client.core.pairing.pairings.get(e.pairingTopic), s = this.client.core.pairing.pairings.getAll().filter((i)=>{\n                    var r, n;\n                    return ((r = i.peerMetadata) == null ? void 0 : r.url) && ((n = i.peerMetadata) == null ? void 0 : n.url) === e.peer.metadata.url && i.topic && i.topic !== t.topic;\n                });\n                if (s.length === 0) return;\n                this.client.logger.info(`Cleaning up ${s.length} duplicate pairing(s)`), await Promise.all(s.map((i)=>this.client.core.pairing.disconnect({\n                        topic: i.topic\n                    }))), this.client.logger.info(\"Duplicate pairings clean up finished\");\n            } catch (t) {\n                this.client.logger.error(t);\n            }\n        }, this.deleteSession = async (e)=>{\n            var t;\n            const { topic: s, expirerHasDeleted: i = !1, emitEvent: r = !0, id: n = 0 } = e, { self: a } = this.client.session.get(s);\n            await this.client.core.relayer.unsubscribe(s), await this.client.session.delete(s, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.addToRecentlyDeleted(s, \"session\"), this.client.core.crypto.keychain.has(a.publicKey) && await this.client.core.crypto.deleteKeyPair(a.publicKey), this.client.core.crypto.keychain.has(s) && await this.client.core.crypto.deleteSymKey(s), i || this.client.core.expirer.del(s), this.client.core.storage.removeItem(De).catch((c)=>this.client.logger.warn(c)), this.getPendingSessionRequests().forEach((c)=>{\n                c.topic === s && this.deletePendingSessionRequest(c.id, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n            }), s === ((t = this.sessionRequestQueue.queue[0]) == null ? void 0 : t.topic) && (this.sessionRequestQueue.state = L.idle), r && this.client.events.emit(\"session_delete\", {\n                id: n,\n                topic: s\n            });\n        }, this.deleteProposal = async (e, t)=>{\n            if (t) try {\n                const s = this.client.proposal.get(e), i = this.client.core.eventClient.getEvent({\n                    topic: s.pairingTopic\n                });\n                i?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_SESSION_ERRORS.proposal_expired);\n            } catch  {}\n            await Promise.all([\n                this.client.proposal.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")),\n                t ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]), this.addToRecentlyDeleted(e, \"proposal\");\n        }, this.deletePendingSessionRequest = async (e, t, s = !1)=>{\n            await Promise.all([\n                this.client.pendingRequest.delete(e, t),\n                s ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]), this.addToRecentlyDeleted(e, \"request\"), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((i)=>i.id !== e), s && (this.sessionRequestQueue.state = L.idle, this.client.events.emit(\"session_request_expire\", {\n                id: e\n            }));\n        }, this.deletePendingAuthRequest = async (e, t, s = !1)=>{\n            await Promise.all([\n                this.client.auth.requests.delete(e, t),\n                s ? Promise.resolve() : this.client.core.expirer.del(e)\n            ]);\n        }, this.setExpiry = async (e, t)=>{\n            this.client.session.keys.includes(e) && (this.client.core.expirer.set(e, t), await this.client.session.update(e, {\n                expiry: t\n            }));\n        }, this.setProposal = async (e, t)=>{\n            this.client.core.expirer.set(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(v.wc_sessionPropose.req.ttl)), await this.client.proposal.set(e, t);\n        }, this.setAuthRequest = async (e, t)=>{\n            const { request: s, pairingTopic: i, transportType: r = _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay } = t;\n            this.client.core.expirer.set(e, s.expiryTimestamp), await this.client.auth.requests.set(e, {\n                authPayload: s.authPayload,\n                requester: s.requester,\n                expiryTimestamp: s.expiryTimestamp,\n                id: e,\n                pairingTopic: i,\n                verifyContext: s.verifyContext,\n                transportType: r\n            });\n        }, this.setPendingSessionRequest = async (e)=>{\n            const { id: t, topic: s, params: i, verifyContext: r } = e, n = i.request.expiryTimestamp || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(v.wc_sessionRequest.req.ttl);\n            this.client.core.expirer.set(t, n), await this.client.pendingRequest.set(t, {\n                id: t,\n                topic: s,\n                params: i,\n                verifyContext: r\n            });\n        }, this.sendRequest = async (e)=>{\n            const { topic: t, method: s, params: i, expiry: r, relayRpcId: n, clientRpcId: a, throwOnFailedPublish: c, appLink: h } = e, p = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(s, i, a);\n            let d;\n            const l = !!h;\n            try {\n                const y = l ? _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL : _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64;\n                d = await this.client.core.crypto.encode(t, p, {\n                    encoding: y\n                });\n            } catch (y) {\n                throw await this.cleanup(), this.client.logger.error(`sendRequest() -> core.crypto.encode() for topic ${t} failed`), y;\n            }\n            let w;\n            if (ct.includes(s)) {\n                const y = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(p)), _ = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(d);\n                w = await this.client.core.verify.register({\n                    id: _,\n                    decryptedId: y\n                });\n            }\n            const m = v[s].req;\n            if (m.attestation = w, r && (m.ttl = r), n && (m.id = n), this.client.core.history.set(t, p), l) {\n                const y = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getLinkModeURL)(h, t, d);\n                await global.Linking.openURL(y, this.client.name);\n            } else {\n                const y = v[s].req;\n                r && (y.ttl = r), n && (y.id = n), c ? (y.internal = D(I({}, y.internal), {\n                    throwOnFailedPublish: !0\n                }), await this.client.core.relayer.publish(t, d, y)) : this.client.core.relayer.publish(t, d, y).catch((_)=>this.client.logger.error(_));\n            }\n            return p.id;\n        }, this.sendResult = async (e)=>{\n            const { id: t, topic: s, result: i, throwOnFailedPublish: r, encodeOpts: n, appLink: a } = e, c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcResult)(t, i);\n            let h;\n            const p = a && typeof (global == null ? void 0 : global.Linking) < \"u\";\n            try {\n                const l = p ? _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL : _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64;\n                h = await this.client.core.crypto.encode(s, c, D(I({}, n || {}), {\n                    encoding: l\n                }));\n            } catch (l) {\n                throw await this.cleanup(), this.client.logger.error(`sendResult() -> core.crypto.encode() for topic ${s} failed`), l;\n            }\n            let d;\n            try {\n                d = await this.client.core.history.get(s, t);\n            } catch (l) {\n                throw this.client.logger.error(`sendResult() -> history.get(${s}, ${t}) failed`), l;\n            }\n            if (p) {\n                const l = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getLinkModeURL)(a, s, h);\n                await global.Linking.openURL(l, this.client.name);\n            } else {\n                const l = v[d.request.method].res;\n                r ? (l.internal = D(I({}, l.internal), {\n                    throwOnFailedPublish: !0\n                }), await this.client.core.relayer.publish(s, h, l)) : this.client.core.relayer.publish(s, h, l).catch((w)=>this.client.logger.error(w));\n            }\n            await this.client.core.history.resolve(c);\n        }, this.sendError = async (e)=>{\n            const { id: t, topic: s, error: i, encodeOpts: r, rpcOpts: n, appLink: a } = e, c = (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcError)(t, i);\n            let h;\n            const p = a && typeof (global == null ? void 0 : global.Linking) < \"u\";\n            try {\n                const l = p ? _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL : _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64;\n                h = await this.client.core.crypto.encode(s, c, D(I({}, r || {}), {\n                    encoding: l\n                }));\n            } catch (l) {\n                throw await this.cleanup(), this.client.logger.error(`sendError() -> core.crypto.encode() for topic ${s} failed`), l;\n            }\n            let d;\n            try {\n                d = await this.client.core.history.get(s, t);\n            } catch (l) {\n                throw this.client.logger.error(`sendError() -> history.get(${s}, ${t}) failed`), l;\n            }\n            if (p) {\n                const l = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getLinkModeURL)(a, s, h);\n                await global.Linking.openURL(l, this.client.name);\n            } else {\n                const l = n || v[d.request.method].res;\n                this.client.core.relayer.publish(s, h, l);\n            }\n            await this.client.core.history.resolve(c);\n        }, this.cleanup = async ()=>{\n            const e = [], t = [];\n            this.client.session.getAll().forEach((s)=>{\n                let i = !1;\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(s.expiry) && (i = !0), this.client.core.crypto.keychain.has(s.topic) || (i = !0), i && e.push(s.topic);\n            }), this.client.proposal.getAll().forEach((s)=>{\n                (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(s.expiryTimestamp) && t.push(s.id);\n            }), await Promise.all([\n                ...e.map((s)=>this.deleteSession({\n                        topic: s\n                    })),\n                ...t.map((s)=>this.deleteProposal(s))\n            ]);\n        }, this.onRelayEventRequest = async (e)=>{\n            this.requestQueue.queue.push(e), await this.processRequestsQueue();\n        }, this.processRequestsQueue = async ()=>{\n            if (this.requestQueue.state === L.active) {\n                this.client.logger.info(\"Request queue already active, skipping...\");\n                return;\n            }\n            for(this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0;){\n                this.requestQueue.state = L.active;\n                const e = this.requestQueue.queue.shift();\n                if (e) try {\n                    await this.processRequest(e);\n                } catch (t) {\n                    this.client.logger.warn(t);\n                }\n            }\n            this.requestQueue.state = L.idle;\n        }, this.processRequest = async (e)=>{\n            const { topic: t, payload: s, attestation: i, transportType: r, encryptedId: n } = e, a = s.method;\n            if (!this.shouldIgnorePairingRequest({\n                topic: t,\n                requestMethod: a\n            })) switch(a){\n                case \"wc_sessionPropose\":\n                    return await this.onSessionProposeRequest({\n                        topic: t,\n                        payload: s,\n                        attestation: i,\n                        encryptedId: n\n                    });\n                case \"wc_sessionSettle\":\n                    return await this.onSessionSettleRequest(t, s);\n                case \"wc_sessionUpdate\":\n                    return await this.onSessionUpdateRequest(t, s);\n                case \"wc_sessionExtend\":\n                    return await this.onSessionExtendRequest(t, s);\n                case \"wc_sessionPing\":\n                    return await this.onSessionPingRequest(t, s);\n                case \"wc_sessionDelete\":\n                    return await this.onSessionDeleteRequest(t, s);\n                case \"wc_sessionRequest\":\n                    return await this.onSessionRequest({\n                        topic: t,\n                        payload: s,\n                        attestation: i,\n                        encryptedId: n,\n                        transportType: r\n                    });\n                case \"wc_sessionEvent\":\n                    return await this.onSessionEventRequest(t, s);\n                case \"wc_sessionAuthenticate\":\n                    return await this.onSessionAuthenticateRequest({\n                        topic: t,\n                        payload: s,\n                        attestation: i,\n                        encryptedId: n,\n                        transportType: r\n                    });\n                default:\n                    return this.client.logger.info(`Unsupported request method ${a}`);\n            }\n        }, this.onRelayEventResponse = async (e)=>{\n            const { topic: t, payload: s, transportType: i } = e, r = (await this.client.core.history.get(t, s.id)).request.method;\n            switch(r){\n                case \"wc_sessionPropose\":\n                    return this.onSessionProposeResponse(t, s, i);\n                case \"wc_sessionSettle\":\n                    return this.onSessionSettleResponse(t, s);\n                case \"wc_sessionUpdate\":\n                    return this.onSessionUpdateResponse(t, s);\n                case \"wc_sessionExtend\":\n                    return this.onSessionExtendResponse(t, s);\n                case \"wc_sessionPing\":\n                    return this.onSessionPingResponse(t, s);\n                case \"wc_sessionRequest\":\n                    return this.onSessionRequestResponse(t, s);\n                case \"wc_sessionAuthenticate\":\n                    return this.onSessionAuthenticateResponse(t, s);\n                default:\n                    return this.client.logger.info(`Unsupported response method ${r}`);\n            }\n        }, this.onRelayEventUnknownPayload = (e)=>{\n            const { topic: t } = e, { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `Decoded payload on topic ${t} is not identifiable as a JSON-RPC request or a response.`);\n            throw new Error(s);\n        }, this.shouldIgnorePairingRequest = (e)=>{\n            const { topic: t, requestMethod: s } = e, i = this.expectedPairingMethodMap.get(t);\n            return !i || i.includes(s) ? !1 : !!(i.includes(\"wc_sessionAuthenticate\") && this.client.events.listenerCount(\"session_authenticate\") > 0);\n        }, this.onSessionProposeRequest = async (e)=>{\n            const { topic: t, payload: s, attestation: i, encryptedId: r } = e, { params: n, id: a } = s;\n            try {\n                const c = this.client.core.eventClient.getEvent({\n                    topic: t\n                });\n                this.client.events.listenerCount(\"session_proposal\") === 0 && (console.warn(\"No listener for session_proposal event\"), c?.setError(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_PAIRING_ERRORS.proposal_listener_not_found)), this.isValidConnect(I({}, s.params));\n                const h = n.expiryTimestamp || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(v.wc_sessionPropose.req.ttl), p = I({\n                    id: a,\n                    pairingTopic: t,\n                    expiryTimestamp: h\n                }, n);\n                await this.setProposal(a, p);\n                const d = await this.getVerifyContext({\n                    attestationId: i,\n                    hash: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(s)),\n                    encryptedId: r,\n                    metadata: p.proposer.metadata\n                });\n                c?.addTrace(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EVENT_CLIENT_PAIRING_TRACES.emit_session_proposal), this.client.events.emit(\"session_proposal\", {\n                    id: a,\n                    params: p,\n                    verifyContext: d\n                });\n            } catch (c) {\n                await this.sendError({\n                    id: a,\n                    topic: t,\n                    error: c,\n                    rpcOpts: v.wc_sessionPropose.autoReject\n                }), this.client.logger.error(c);\n            }\n        }, this.onSessionProposeResponse = async (e, t, s)=>{\n            const { id: i } = t;\n            if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t)) {\n                const { result: r } = t;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    result: r\n                });\n                const n = this.client.proposal.get(i);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    proposal: n\n                });\n                const a = n.proposer.publicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    selfPublicKey: a\n                });\n                const c = r.responderPublicKey;\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    peerPublicKey: c\n                });\n                const h = await this.client.core.crypto.generateSharedKey(a, c);\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    sessionTopic: h\n                });\n                const p = await this.client.core.relayer.subscribe(h, {\n                    transportType: s\n                });\n                this.client.logger.trace({\n                    type: \"method\",\n                    method: \"onSessionProposeResponse\",\n                    subscriptionId: p\n                }), await this.client.core.pairing.activate({\n                    topic: e\n                });\n            } else if ((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t)) {\n                await this.client.proposal.delete(i, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\"));\n                const r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\");\n                if (this.events.listenerCount(r) === 0) throw new Error(`emitting ${r} without any listeners, 954`);\n                this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                    error: t.error\n                });\n            }\n        }, this.onSessionSettleRequest = async (e, t)=>{\n            const { id: s, params: i } = t;\n            try {\n                this.isValidSessionSettleRequest(i);\n                const { relay: r, controller: n, expiry: a, namespaces: c, sessionProperties: h, sessionConfig: p } = t.params, d = D(I(I({\n                    topic: e,\n                    relay: r,\n                    expiry: a,\n                    namespaces: c,\n                    acknowledged: !0,\n                    pairingTopic: \"\",\n                    requiredNamespaces: {},\n                    optionalNamespaces: {},\n                    controller: n.publicKey,\n                    self: {\n                        publicKey: \"\",\n                        metadata: this.client.metadata\n                    },\n                    peer: {\n                        publicKey: n.publicKey,\n                        metadata: n.metadata\n                    }\n                }, h && {\n                    sessionProperties: h\n                }), p && {\n                    sessionConfig: p\n                }), {\n                    transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.relay\n                }), l = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\");\n                if (this.events.listenerCount(l) === 0) throw new Error(`emitting ${l} without any listeners 997`);\n                this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_connect\"), {\n                    session: d\n                }), await this.sendResult({\n                    id: t.id,\n                    topic: e,\n                    result: !0,\n                    throwOnFailedPublish: !0\n                });\n            } catch (r) {\n                await this.sendError({\n                    id: s,\n                    topic: e,\n                    error: r\n                }), this.client.logger.error(r);\n            }\n        }, this.onSessionSettleResponse = async (e, t)=>{\n            const { id: s } = t;\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? (await this.client.session.update(e, {\n                acknowledged: !0\n            }), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", s), {})) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && (await this.client.session.delete(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")), this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_approve\", s), {\n                error: t.error\n            }));\n        }, this.onSessionUpdateRequest = async (e, t)=>{\n            const { params: s, id: i } = t;\n            try {\n                const r = `${e}_session_update`, n = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(r);\n                if (n && this.isRequestOutOfSync(n, i)) {\n                    this.client.logger.warn(`Discarding out of sync request - ${i}`), this.sendError({\n                        id: i,\n                        topic: e,\n                        error: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"INVALID_UPDATE_REQUEST\")\n                    });\n                    return;\n                }\n                this.isValidUpdate(I({\n                    topic: e\n                }, s));\n                try {\n                    _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(r, i), await this.client.session.update(e, {\n                        namespaces: s.namespaces\n                    }), await this.sendResult({\n                        id: i,\n                        topic: e,\n                        result: !0,\n                        throwOnFailedPublish: !0\n                    });\n                } catch (a) {\n                    throw _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.delete(r), a;\n                }\n                this.client.events.emit(\"session_update\", {\n                    id: i,\n                    topic: e,\n                    params: s\n                });\n            } catch (r) {\n                await this.sendError({\n                    id: i,\n                    topic: e,\n                    error: r\n                }), this.client.logger.error(r);\n            }\n        }, this.isRequestOutOfSync = (e, t)=>t.toString().slice(0, -3) < e.toString().slice(0, -3), this.onSessionUpdateResponse = (e, t)=>{\n            const { id: s } = t, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", s), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_update\", s), {\n                error: t.error\n            });\n        }, this.onSessionExtendRequest = async (e, t)=>{\n            const { id: s } = t;\n            try {\n                this.isValidExtend({\n                    topic: e\n                }), await this.setExpiry(e, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.calcExpiry)(H)), await this.sendResult({\n                    id: s,\n                    topic: e,\n                    result: !0,\n                    throwOnFailedPublish: !0\n                }), this.client.events.emit(\"session_extend\", {\n                    id: s,\n                    topic: e\n                });\n            } catch (i) {\n                await this.sendError({\n                    id: s,\n                    topic: e,\n                    error: i\n                }), this.client.logger.error(i);\n            }\n        }, this.onSessionExtendResponse = (e, t)=>{\n            const { id: s } = t, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_extend\", s), {\n                error: t.error\n            });\n        }, this.onSessionPingRequest = async (e, t)=>{\n            const { id: s } = t;\n            try {\n                this.isValidPing({\n                    topic: e\n                }), await this.sendResult({\n                    id: s,\n                    topic: e,\n                    result: !0,\n                    throwOnFailedPublish: !0\n                }), this.client.events.emit(\"session_ping\", {\n                    id: s,\n                    topic: e\n                });\n            } catch (i) {\n                await this.sendError({\n                    id: s,\n                    topic: e,\n                    error: i\n                }), this.client.logger.error(i);\n            }\n        }, this.onSessionPingResponse = (e, t)=>{\n            const { id: s } = t, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            setTimeout(()=>{\n                (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s), {}) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_ping\", s), {\n                    error: t.error\n                });\n            }, 500);\n        }, this.onSessionDeleteRequest = async (e, t)=>{\n            const { id: s } = t;\n            try {\n                this.isValidDisconnect({\n                    topic: e,\n                    reason: t.params\n                }), Promise.all([\n                    new Promise((i)=>{\n                        this.client.core.relayer.once(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.publish, async ()=>{\n                            i(await this.deleteSession({\n                                topic: e,\n                                id: s\n                            }));\n                        });\n                    }),\n                    this.sendResult({\n                        id: s,\n                        topic: e,\n                        result: !0,\n                        throwOnFailedPublish: !0\n                    }),\n                    this.cleanupPendingSentRequestsForTopic({\n                        topic: e,\n                        error: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSdkError)(\"USER_DISCONNECTED\")\n                    })\n                ]).catch((i)=>this.client.logger.error(i));\n            } catch (i) {\n                this.client.logger.error(i);\n            }\n        }, this.onSessionRequest = async (e)=>{\n            var t, s, i;\n            const { topic: r, payload: n, attestation: a, encryptedId: c, transportType: h } = e, { id: p, params: d } = n;\n            try {\n                await this.isValidRequest(I({\n                    topic: r\n                }, d));\n                const l = this.client.session.get(r), w = await this.getVerifyContext({\n                    attestationId: a,\n                    hash: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionRequest\", d, p))),\n                    encryptedId: c,\n                    metadata: l.peer.metadata,\n                    transportType: h\n                }), m = {\n                    id: p,\n                    topic: r,\n                    params: d,\n                    verifyContext: w\n                };\n                await this.setPendingSessionRequest(m), h === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode && (t = l.peer.metadata.redirect) != null && t.universal && this.client.core.addLinkModeSupportedApp((s = l.peer.metadata.redirect) == null ? void 0 : s.universal), (i = this.client.signConfig) != null && i.disableRequestQueue ? this.emitSessionRequest(m) : (this.addSessionRequestToSessionRequestQueue(m), this.processSessionRequestQueue());\n            } catch (l) {\n                await this.sendError({\n                    id: p,\n                    topic: r,\n                    error: l\n                }), this.client.logger.error(l);\n            }\n        }, this.onSessionRequestResponse = (e, t)=>{\n            const { id: s } = t, i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s);\n            if (this.events.listenerCount(i) === 0) throw new Error(`emitting ${i} without any listeners`);\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                result: t.result\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                error: t.error\n            });\n        }, this.onSessionEventRequest = async (e, t)=>{\n            const { id: s, params: i } = t;\n            try {\n                const r = `${e}_session_event_${i.event.name}`, n = _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.get(r);\n                if (n && this.isRequestOutOfSync(n, s)) {\n                    this.client.logger.info(`Discarding out of sync request - ${s}`);\n                    return;\n                }\n                this.isValidEmit(I({\n                    topic: e\n                }, i)), this.client.events.emit(\"session_event\", {\n                    id: s,\n                    topic: e,\n                    params: i\n                }), _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.MemoryStore.set(r, s);\n            } catch (r) {\n                await this.sendError({\n                    id: s,\n                    topic: e,\n                    error: r\n                }), this.client.logger.error(r);\n            }\n        }, this.onSessionAuthenticateResponse = (e, t)=>{\n            const { id: s } = t;\n            this.client.logger.trace({\n                type: \"method\",\n                method: \"onSessionAuthenticateResponse\",\n                topic: e,\n                payload: t\n            }), (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResult)(t) ? this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                result: t.result\n            }) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcError)(t) && this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", s), {\n                error: t.error\n            });\n        }, this.onSessionAuthenticateRequest = async (e)=>{\n            var t;\n            const { topic: s, payload: i, attestation: r, encryptedId: n, transportType: a } = e;\n            try {\n                const { requester: c, authPayload: h, expiryTimestamp: p } = i.params, d = await this.getVerifyContext({\n                    attestationId: r,\n                    hash: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(JSON.stringify(i)),\n                    encryptedId: n,\n                    metadata: c.metadata,\n                    transportType: a\n                }), l = {\n                    requester: c,\n                    pairingTopic: s,\n                    id: i.id,\n                    authPayload: h,\n                    verifyContext: d,\n                    expiryTimestamp: p\n                };\n                await this.setAuthRequest(i.id, {\n                    request: l,\n                    pairingTopic: s,\n                    transportType: a\n                }), a === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode && (t = c.metadata.redirect) != null && t.universal && this.client.core.addLinkModeSupportedApp(c.metadata.redirect.universal), this.client.events.emit(\"session_authenticate\", {\n                    topic: s,\n                    params: i.params,\n                    id: i.id,\n                    verifyContext: d\n                });\n            } catch (c) {\n                this.client.logger.error(c);\n                const h = i.params.requester.publicKey, p = await this.client.core.crypto.generateKeyPair(), d = this.getAppLinkIfEnabled(i.params.requester.metadata, a), l = {\n                    type: _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.TYPE_1,\n                    receiverPublicKey: h,\n                    senderPublicKey: p\n                };\n                await this.sendError({\n                    id: i.id,\n                    topic: s,\n                    error: c,\n                    encodeOpts: l,\n                    rpcOpts: v.wc_sessionAuthenticate.autoReject,\n                    appLink: d\n                });\n            }\n        }, this.addSessionRequestToSessionRequestQueue = (e)=>{\n            this.sessionRequestQueue.queue.push(e);\n        }, this.cleanupAfterResponse = (e)=>{\n            this.deletePendingSessionRequest(e.response.id, {\n                message: \"fulfilled\",\n                code: 0\n            }), setTimeout(()=>{\n                this.sessionRequestQueue.state = L.idle, this.processSessionRequestQueue();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(this.requestQueueDelay));\n        }, this.cleanupPendingSentRequestsForTopic = ({ topic: e, error: t })=>{\n            const s = this.client.core.history.pending;\n            s.length > 0 && s.filter((i)=>i.topic === e && i.request.method === \"wc_sessionRequest\").forEach((i)=>{\n                const r = i.request.id, n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", r);\n                if (this.events.listenerCount(n) === 0) throw new Error(`emitting ${n} without any listeners`);\n                this.events.emit((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.engineEvent)(\"session_request\", i.request.id), {\n                    error: t\n                });\n            });\n        }, this.processSessionRequestQueue = ()=>{\n            if (this.sessionRequestQueue.state === L.active) {\n                this.client.logger.info(\"session request queue is already active.\");\n                return;\n            }\n            const e = this.sessionRequestQueue.queue[0];\n            if (!e) {\n                this.client.logger.info(\"session request queue is empty.\");\n                return;\n            }\n            try {\n                this.sessionRequestQueue.state = L.active, this.emitSessionRequest(e);\n            } catch (t) {\n                this.client.logger.error(t);\n            }\n        }, this.emitSessionRequest = (e)=>{\n            this.client.events.emit(\"session_request\", e);\n        }, this.onPairingCreated = (e)=>{\n            if (e.methods && this.expectedPairingMethodMap.set(e.topic, e.methods), e.active) return;\n            const t = this.client.proposal.getAll().find((s)=>s.pairingTopic === e.topic);\n            t && this.onSessionProposeRequest({\n                topic: e.topic,\n                payload: (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.formatJsonRpcRequest)(\"wc_sessionPropose\", {\n                    requiredNamespaces: t.requiredNamespaces,\n                    optionalNamespaces: t.optionalNamespaces,\n                    relays: t.relays,\n                    proposer: t.proposer,\n                    sessionProperties: t.sessionProperties\n                }, t.id)\n            });\n        }, this.isValidConnect = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() params: ${JSON.stringify(e)}`);\n                throw new Error(a);\n            }\n            const { pairingTopic: t, requiredNamespaces: s, optionalNamespaces: i, sessionProperties: r, relays: n } = e;\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(t) || await this.isValidPairingTopic(t), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelays)(n, !0)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `connect() relays: ${n}`);\n                throw new Error(a);\n            }\n            !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(s) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(s) !== 0 && this.validateNamespaces(s, \"requiredNamespaces\"), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(i) && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidObject)(i) !== 0 && this.validateNamespaces(i, \"optionalNamespaces\"), (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(r) || this.validateSessionProps(r, \"sessionProperties\");\n        }, this.validateNamespaces = (e, t)=>{\n            const s = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequiredNamespaces)(e, \"connect()\", t);\n            if (s) throw new Error(s.message);\n        }, this.isValidApprove = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) throw new Error((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() params: ${e}`).message);\n            const { id: t, namespaces: s, relayProtocol: i, sessionProperties: r } = e;\n            this.checkRecentlyDeleted(t), await this.isValidProposalId(t);\n            const n = this.client.proposal.get(t), a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(s, \"approve()\");\n            if (a) throw new Error(a.message);\n            const c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(n.requiredNamespaces, s, \"approve()\");\n            if (c) throw new Error(c.message);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(i, !0)) {\n                const { message: h } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `approve() relayProtocol: ${i}`);\n                throw new Error(h);\n            }\n            (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isUndefined)(r) || this.validateSessionProps(r, \"sessionProperties\");\n        }, this.isValidReject = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() params: ${e}`);\n                throw new Error(i);\n            }\n            const { id: t, reason: s } = e;\n            if (this.checkRecentlyDeleted(t), await this.isValidProposalId(t), !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidErrorReason)(s)) {\n                const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `reject() reason: ${JSON.stringify(s)}`);\n                throw new Error(i);\n            }\n        }, this.isValidSessionSettleRequest = (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `onSessionSettleRequest() params: ${e}`);\n                throw new Error(c);\n            }\n            const { relay: t, controller: s, namespaces: i, expiry: r } = e;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRelay)(t)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", \"onSessionSettleRequest() relay protocol should be a string\");\n                throw new Error(c);\n            }\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidController)(s, \"onSessionSettleRequest()\");\n            if (n) throw new Error(n.message);\n            const a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(i, \"onSessionSettleRequest()\");\n            if (a) throw new Error(a.message);\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(r)) {\n                const { message: c } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", \"onSessionSettleRequest()\");\n                throw new Error(c);\n            }\n        }, this.isValidUpdate = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `update() params: ${e}`);\n                throw new Error(a);\n            }\n            const { topic: t, namespaces: s } = e;\n            this.checkRecentlyDeleted(t), await this.isValidSessionTopic(t);\n            const i = this.client.session.get(t), r = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespaces)(s, \"update()\");\n            if (r) throw new Error(r.message);\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isConformingNamespaces)(i.requiredNamespaces, s, \"update()\");\n            if (n) throw new Error(n.message);\n        }, this.isValidExtend = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `extend() params: ${e}`);\n                throw new Error(s);\n            }\n            const { topic: t } = e;\n            this.checkRecentlyDeleted(t), await this.isValidSessionTopic(t);\n        }, this.isValidRequest = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() params: ${e}`);\n                throw new Error(a);\n            }\n            const { topic: t, request: s, chainId: i, expiry: r } = e;\n            this.checkRecentlyDeleted(t), await this.isValidSessionTopic(t);\n            const { namespaces: n } = this.client.session.get(t);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(n, i)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() chainId: ${i}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequest)(s)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() ${JSON.stringify(s)}`);\n                throw new Error(a);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesRequest)(n, i, s.method)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() method: ${s.method}`);\n                throw new Error(a);\n            }\n            if (r && !(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidRequestExpiry)(r, me)) {\n                const { message: a } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `request() expiry: ${r}. Expiry must be a number (in seconds) between ${me.min} and ${me.max}`);\n                throw new Error(a);\n            }\n        }, this.isValidRespond = async (e)=>{\n            var t;\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() params: ${e}`);\n                throw new Error(r);\n            }\n            const { topic: s, response: i } = e;\n            try {\n                await this.isValidSessionTopic(s);\n            } catch (r) {\n                throw (t = e?.response) != null && t.id && this.cleanupAfterResponse(e), r;\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidResponse)(i)) {\n                const { message: r } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `respond() response: ${JSON.stringify(i)}`);\n                throw new Error(r);\n            }\n        }, this.isValidPing = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `ping() params: ${e}`);\n                throw new Error(s);\n            }\n            const { topic: t } = e;\n            await this.isValidSessionOrPairingTopic(t);\n        }, this.isValidEmit = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() params: ${e}`);\n                throw new Error(n);\n            }\n            const { topic: t, event: s, chainId: i } = e;\n            await this.isValidSessionTopic(t);\n            const { namespaces: r } = this.client.session.get(t);\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesChainId)(r, i)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() chainId: ${i}`);\n                throw new Error(n);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidEvent)(s)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(s)}`);\n                throw new Error(n);\n            }\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidNamespacesEvent)(r, i, s.name)) {\n                const { message: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `emit() event: ${JSON.stringify(s)}`);\n                throw new Error(n);\n            }\n        }, this.isValidDisconnect = async (e)=>{\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidParams)(e)) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `disconnect() params: ${e}`);\n                throw new Error(s);\n            }\n            const { topic: t } = e;\n            await this.isValidSessionOrPairingTopic(t);\n        }, this.isValidAuthenticate = (e)=>{\n            const { chains: t, uri: s, domain: i, nonce: r } = e;\n            if (!Array.isArray(t) || t.length === 0) throw new Error(\"chains is required and must be a non-empty array\");\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(s, !1)) throw new Error(\"uri is required parameter\");\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(i, !1)) throw new Error(\"domain is required parameter\");\n            if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(r, !1)) throw new Error(\"nonce is required parameter\");\n            if ([\n                ...new Set(t.map((a)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(a).namespace))\n            ].length > 1) throw new Error(\"Multi-namespace requests are not supported. Please request single namespace only.\");\n            const { namespace: n } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseChainId)(t[0]);\n            if (n !== \"eip155\") throw new Error(\"Only eip155 namespace is supported for authenticated sessions. Please use .connect() for non-eip155 chains.\");\n        }, this.getVerifyContext = async (e)=>{\n            const { attestationId: t, hash: s, encryptedId: i, metadata: r, transportType: n } = e, a = {\n                verified: {\n                    verifyUrl: r.verifyUrl || _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.VERIFY_SERVER,\n                    validation: \"UNKNOWN\",\n                    origin: r.url || \"\"\n                }\n            };\n            try {\n                if (n === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode) {\n                    const h = this.getAppLinkIfEnabled(r, n);\n                    return a.verified.validation = h && new URL(h).origin === new URL(r.url).origin ? \"VALID\" : \"INVALID\", a;\n                }\n                const c = await this.client.core.verify.resolve({\n                    attestationId: t,\n                    hash: s,\n                    encryptedId: i,\n                    verifyUrl: r.verifyUrl\n                });\n                c && (a.verified.origin = c.origin, a.verified.isScam = c.isScam, a.verified.validation = c.origin === new URL(r.url).origin ? \"VALID\" : \"INVALID\");\n            } catch (c) {\n                this.client.logger.warn(c);\n            }\n            return this.client.logger.debug(`Verify context: ${JSON.stringify(a)}`), a;\n        }, this.validateSessionProps = (e, t)=>{\n            Object.values(e).forEach((s)=>{\n                if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(s, !1)) {\n                    const { message: i } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `${t} must be in Record<string, string> format. Received: ${JSON.stringify(s)}`);\n                    throw new Error(i);\n                }\n            });\n        }, this.getPendingAuthRequest = (e)=>{\n            const t = this.client.auth.requests.get(e);\n            return typeof t == \"object\" ? t : void 0;\n        }, this.addToRecentlyDeleted = (e, t)=>{\n            if (this.recentlyDeletedMap.set(e, t), this.recentlyDeletedMap.size >= this.recentlyDeletedLimit) {\n                let s = 0;\n                const i = this.recentlyDeletedLimit / 2;\n                for (const r of this.recentlyDeletedMap.keys()){\n                    if (s++ >= i) break;\n                    this.recentlyDeletedMap.delete(r);\n                }\n            }\n        }, this.checkRecentlyDeleted = (e)=>{\n            const t = this.recentlyDeletedMap.get(e);\n            if (t) {\n                const { message: s } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `Record was recently deleted - ${t}: ${e}`);\n                throw new Error(s);\n            }\n        }, this.isLinkModeEnabled = (e, t)=>{\n            var s, i, r, n, a, c, h, p, d;\n            return !e || t !== _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode ? !1 : ((i = (s = this.client.metadata) == null ? void 0 : s.redirect) == null ? void 0 : i.linkMode) === !0 && ((n = (r = this.client.metadata) == null ? void 0 : r.redirect) == null ? void 0 : n.universal) !== void 0 && ((c = (a = this.client.metadata) == null ? void 0 : a.redirect) == null ? void 0 : c.universal) !== \"\" && ((h = e?.redirect) == null ? void 0 : h.universal) !== void 0 && ((p = e?.redirect) == null ? void 0 : p.universal) !== \"\" && ((d = e?.redirect) == null ? void 0 : d.linkMode) === !0 && this.client.core.linkModeSupportedApps.includes(e.redirect.universal) && typeof (global == null ? void 0 : global.Linking) < \"u\";\n        }, this.getAppLinkIfEnabled = (e, t)=>{\n            var s;\n            return this.isLinkModeEnabled(e, t) ? (s = e?.redirect) == null ? void 0 : s.universal : void 0;\n        }, this.handleLinkModeMessage = ({ url: e })=>{\n            if (!e || !e.includes(\"wc_ev\") || !e.includes(\"topic\")) return;\n            const t = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSearchParamFromURL)(e, \"topic\") || \"\", s = decodeURIComponent((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getSearchParamFromURL)(e, \"wc_ev\") || \"\"), i = this.client.session.keys.includes(t);\n            i && this.client.session.update(t, {\n                transportType: _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode\n            }), this.client.core.dispatchEnvelope({\n                topic: t,\n                message: s,\n                sessionExists: i\n            });\n        }, this.registerLinkModeListeners = async ()=>{\n            var e;\n            if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isTestRun)() || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isReactNative)() && (e = this.client.metadata.redirect) != null && e.linkMode) {\n                const t = global == null ? void 0 : global.Linking;\n                if (typeof t < \"u\") {\n                    t.addEventListener(\"url\", this.handleLinkModeMessage, this.client.name);\n                    const s = await t.getInitialURL();\n                    s && setTimeout(()=>{\n                        this.handleLinkModeMessage({\n                            url: s\n                        });\n                    }, 50);\n                }\n            }\n        };\n    }\n    isInitialized() {\n        if (!this.initialized) {\n            const { message: o } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NOT_INITIALIZED\", this.name);\n            throw new Error(o);\n        }\n    }\n    async confirmOnlineStateOrThrow() {\n        await this.client.core.relayer.confirmOnlineStateOrThrow();\n    }\n    registerRelayerEvents() {\n        this.client.core.relayer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.RELAYER_EVENTS.message, (o)=>{\n            !this.initialized || this.relayMessageCache.length > 0 ? this.relayMessageCache.push(o) : this.onRelayMessage(o);\n        });\n    }\n    async onRelayMessage(o) {\n        const { topic: e, message: t, attestation: s, transportType: i } = o, { publicKey: r } = this.client.auth.authKeys.keys.includes(ae) ? this.client.auth.authKeys.get(ae) : {\n            responseTopic: void 0,\n            publicKey: void 0\n        }, n = await this.client.core.crypto.decode(e, t, {\n            receiverPublicKey: r,\n            encoding: i === _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.TRANSPORT_TYPES.link_mode ? _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64URL : _walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.BASE64\n        });\n        try {\n            (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcRequest)(n) ? (this.client.core.history.set(e, n), this.onRelayEventRequest({\n                topic: e,\n                payload: n,\n                attestation: s,\n                transportType: i,\n                encryptedId: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.hashMessage)(t)\n            })) : (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_3__.isJsonRpcResponse)(n) ? (await this.client.core.history.resolve(n), await this.onRelayEventResponse({\n                topic: e,\n                payload: n,\n                transportType: i\n            }), this.client.core.history.delete(e, n.id)) : this.onRelayEventUnknownPayload({\n                topic: e,\n                payload: n,\n                transportType: i\n            });\n        } catch (a) {\n            this.client.logger.error(a);\n        }\n    }\n    registerExpirerEvents() {\n        this.client.core.expirer.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.EXPIRER_EVENTS.expired, async (o)=>{\n            const { topic: e, id: t } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.parseExpirerTarget)(o.target);\n            if (t && this.client.pendingRequest.keys.includes(t)) return await this.deletePendingSessionRequest(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\"), !0);\n            if (t && this.client.auth.requests.keys.includes(t)) return await this.deletePendingAuthRequest(t, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\"), !0);\n            e ? this.client.session.keys.includes(e) && (await this.deleteSession({\n                topic: e,\n                expirerHasDeleted: !0\n            }), this.client.events.emit(\"session_expire\", {\n                topic: e\n            })) : t && (await this.deleteProposal(t, !0), this.client.events.emit(\"proposal_expire\", {\n                id: t\n            }));\n        });\n    }\n    registerPairingEvents() {\n        this.client.core.pairing.events.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.PAIRING_EVENTS.create, (o)=>this.onPairingCreated(o)), this.client.core.pairing.events.on(_walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.PAIRING_EVENTS.delete, (o)=>{\n            this.addToRecentlyDeleted(o.topic, \"pairing\");\n        });\n    }\n    isValidPairingTopic(o) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(o, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `pairing topic should be a string: ${o}`);\n            throw new Error(e);\n        }\n        if (!this.client.core.pairing.pairings.keys.includes(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `pairing topic doesn't exist: ${o}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.core.pairing.pairings.get(o).expiry)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `pairing topic: ${o}`);\n            throw new Error(e);\n        }\n    }\n    async isValidSessionTopic(o) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(o, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session topic should be a string: ${o}`);\n            throw new Error(e);\n        }\n        if (this.checkRecentlyDeleted(o), !this.client.session.keys.includes(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session topic doesn't exist: ${o}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.session.get(o).expiry)) {\n            await this.deleteSession({\n                topic: o\n            });\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `session topic: ${o}`);\n            throw new Error(e);\n        }\n        if (!this.client.core.crypto.keychain.has(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session topic does not exist in keychain: ${o}`);\n            throw await this.deleteSession({\n                topic: o\n            }), new Error(e);\n        }\n    }\n    async isValidSessionOrPairingTopic(o) {\n        if (this.checkRecentlyDeleted(o), this.client.session.keys.includes(o)) await this.isValidSessionTopic(o);\n        else if (this.client.core.pairing.pairings.keys.includes(o)) this.isValidPairingTopic(o);\n        else if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidString)(o, !1)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `session or pairing topic doesn't exist: ${o}`);\n            throw new Error(e);\n        } else {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `session or pairing topic should be a string: ${o}`);\n            throw new Error(e);\n        }\n    }\n    async isValidProposalId(o) {\n        if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isValidId)(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"MISSING_OR_INVALID\", `proposal id should be a number: ${o}`);\n            throw new Error(e);\n        }\n        if (!this.client.proposal.keys.includes(o)) {\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${o}`);\n            throw new Error(e);\n        }\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.isExpired)(this.client.proposal.get(o).expiryTimestamp)) {\n            await this.deleteProposal(o);\n            const { message: e } = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getInternalError)(\"EXPIRED\", `proposal id: ${o}`);\n            throw new Error(e);\n        }\n    }\n}\nclass Ss extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, it, ye), this.core = o, this.logger = e;\n    }\n}\nclass wt extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, nt, ye), this.core = o, this.logger = e;\n    }\n}\nclass Is extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, at, ye, (t)=>t.id), this.core = o, this.logger = e;\n    }\n}\nclass fs extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, ht, oe, ()=>ae), this.core = o, this.logger = e;\n    }\n}\nclass vs extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, dt, oe), this.core = o, this.logger = e;\n    }\n}\nclass qs extends _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Store {\n    constructor(o, e){\n        super(o, e, ut, oe, (t)=>t.id), this.core = o, this.logger = e;\n    }\n}\nclass Ts {\n    constructor(o, e){\n        this.core = o, this.logger = e, this.authKeys = new fs(this.core, this.logger), this.pairingTopics = new vs(this.core, this.logger), this.requests = new qs(this.core, this.logger);\n    }\n    async init() {\n        await this.authKeys.init(), await this.pairingTopics.init(), await this.requests.init();\n    }\n}\nclass _e extends _walletconnect_types__WEBPACK_IMPORTED_MODULE_4__.ISignClient {\n    constructor(o){\n        super(o), this.protocol = Ce, this.version = xe, this.name = we.name, this.events = new events__WEBPACK_IMPORTED_MODULE_2__.EventEmitter, this.on = (t, s)=>this.events.on(t, s), this.once = (t, s)=>this.events.once(t, s), this.off = (t, s)=>this.events.off(t, s), this.removeListener = (t, s)=>this.events.removeListener(t, s), this.removeAllListeners = (t)=>this.events.removeAllListeners(t), this.connect = async (t)=>{\n            try {\n                return await this.engine.connect(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.pair = async (t)=>{\n            try {\n                return await this.engine.pair(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.approve = async (t)=>{\n            try {\n                return await this.engine.approve(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.reject = async (t)=>{\n            try {\n                return await this.engine.reject(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.update = async (t)=>{\n            try {\n                return await this.engine.update(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.extend = async (t)=>{\n            try {\n                return await this.engine.extend(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.request = async (t)=>{\n            try {\n                return await this.engine.request(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.respond = async (t)=>{\n            try {\n                return await this.engine.respond(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.ping = async (t)=>{\n            try {\n                return await this.engine.ping(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.emit = async (t)=>{\n            try {\n                return await this.engine.emit(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.disconnect = async (t)=>{\n            try {\n                return await this.engine.disconnect(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.find = (t)=>{\n            try {\n                return this.engine.find(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.getPendingSessionRequests = ()=>{\n            try {\n                return this.engine.getPendingSessionRequests();\n            } catch (t) {\n                throw this.logger.error(t.message), t;\n            }\n        }, this.authenticate = async (t, s)=>{\n            try {\n                return await this.engine.authenticate(t, s);\n            } catch (i) {\n                throw this.logger.error(i.message), i;\n            }\n        }, this.formatAuthMessage = (t)=>{\n            try {\n                return this.engine.formatAuthMessage(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.approveSessionAuthenticate = async (t)=>{\n            try {\n                return await this.engine.approveSessionAuthenticate(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.rejectSessionAuthenticate = async (t)=>{\n            try {\n                return await this.engine.rejectSessionAuthenticate(t);\n            } catch (s) {\n                throw this.logger.error(s.message), s;\n            }\n        }, this.name = o?.name || we.name, this.metadata = o?.metadata || (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_5__.getAppMetadata)(), this.signConfig = o?.signConfig;\n        const e = typeof o?.logger < \"u\" && typeof o?.logger != \"string\" ? o.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getDefaultLoggerOptions)({\n            level: o?.logger || we.logger\n        }));\n        this.core = o?.core || new _walletconnect_core__WEBPACK_IMPORTED_MODULE_6__.Core(o), this.logger = (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.generateChildLogger)(e, this.name), this.session = new wt(this.core, this.logger), this.proposal = new Ss(this.core, this.logger), this.pendingRequest = new Is(this.core, this.logger), this.engine = new Rs(this), this.auth = new Ts(this.core, this.logger);\n    }\n    static async init(o) {\n        const e = new _e(o);\n        return await e.initialize(), e;\n    }\n    get context() {\n        return (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getLoggerContext)(this.logger);\n    }\n    get pairing() {\n        return this.core.pairing.pairings;\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\");\n        try {\n            await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.auth.init(), await this.engine.init(), this.logger.info(\"SignClient Initialization Success\"), setTimeout(()=>{\n                this.engine.processRelayMessageCache();\n            }, (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.toMiliseconds)(_walletconnect_time__WEBPACK_IMPORTED_MODULE_1__.ONE_SECOND));\n        } catch (o) {\n            throw this.logger.info(\"SignClient Initialization Failure\"), this.logger.error(o.message), o;\n        }\n    }\n}\nconst Ns = wt, Ps = _e;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/sign-client/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./misc */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/misc.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/time.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsdUZBQU87QUFDL0JELFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsbUZBQVEsR0FBR0g7QUFDeENFLFFBQVFFLFlBQVksQ0FBQ0QsbUJBQU9BLENBQUMsbUZBQVEsR0FBR0gsVUFDeEMsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9rZW5mdW5kLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL2luZGV4LmpzPzJlZTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xudHNsaWJfMS5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbWlzY1wiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90aW1lXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/misc.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/misc.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;\nexports.ONE_HUNDRED = 100;\nexports.ONE_THOUSAND = 1000; //# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvbWlzYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0JBQW9CLEdBQUdBLG1CQUFtQixHQUFHLEtBQUs7QUFDbERBLG1CQUFtQixHQUFHO0FBQ3RCQSxvQkFBb0IsR0FBRyxNQUN2QixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvbWlzYy5qcz9iNDM2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5PTkVfVEhPVVNBTkQgPSBleHBvcnRzLk9ORV9IVU5EUkVEID0gdm9pZCAwO1xuZXhwb3J0cy5PTkVfSFVORFJFRCA9IDEwMDtcbmV4cG9ydHMuT05FX1RIT1VTQU5EID0gMTAwMDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1pc2MuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiT05FX1RIT1VTQU5EIiwiT05FX0hVTkRSRUQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/misc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/time.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/constants/time.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;\nexports.ONE_SECOND = 1;\nexports.FIVE_SECONDS = 5;\nexports.TEN_SECONDS = 10;\nexports.THIRTY_SECONDS = 30;\nexports.SIXTY_SECONDS = 60;\nexports.ONE_MINUTE = exports.SIXTY_SECONDS;\nexports.FIVE_MINUTES = exports.ONE_MINUTE * 5;\nexports.TEN_MINUTES = exports.ONE_MINUTE * 10;\nexports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;\nexports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;\nexports.ONE_HOUR = exports.SIXTY_MINUTES;\nexports.THREE_HOURS = exports.ONE_HOUR * 3;\nexports.SIX_HOURS = exports.ONE_HOUR * 6;\nexports.TWELVE_HOURS = exports.ONE_HOUR * 12;\nexports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;\nexports.ONE_DAY = exports.TWENTY_FOUR_HOURS;\nexports.THREE_DAYS = exports.ONE_DAY * 3;\nexports.FIVE_DAYS = exports.ONE_DAY * 5;\nexports.SEVEN_DAYS = exports.ONE_DAY * 7;\nexports.THIRTY_DAYS = exports.ONE_DAY * 30;\nexports.ONE_WEEK = exports.SEVEN_DAYS;\nexports.TWO_WEEKS = exports.ONE_WEEK * 2;\nexports.THREE_WEEKS = exports.ONE_WEEK * 3;\nexports.FOUR_WEEKS = exports.ONE_WEEK * 4;\nexports.ONE_YEAR = exports.ONE_DAY * 365; //# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9jb25zdGFudHMvdGltZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZ0JBQWdCLEdBQUdBLGtCQUFrQixHQUFHQSxtQkFBbUIsR0FBR0EsaUJBQWlCLEdBQUdBLGdCQUFnQixHQUFHQSxtQkFBbUIsR0FBR0Esa0JBQWtCLEdBQUdBLGlCQUFpQixHQUFHQSxrQkFBa0IsR0FBR0EsZUFBZSxHQUFHQSx5QkFBeUIsR0FBR0Esb0JBQW9CLEdBQUdBLGlCQUFpQixHQUFHQSxtQkFBbUIsR0FBR0EsZ0JBQWdCLEdBQUdBLHFCQUFxQixHQUFHQSxzQkFBc0IsR0FBR0EsbUJBQW1CLEdBQUdBLG9CQUFvQixHQUFHQSxrQkFBa0IsR0FBR0EscUJBQXFCLEdBQUdBLHNCQUFzQixHQUFHQSxtQkFBbUIsR0FBR0Esb0JBQW9CLEdBQUdBLGtCQUFrQixHQUFHLEtBQUs7QUFDdGlCQSxrQkFBa0IsR0FBRztBQUNyQkEsb0JBQW9CLEdBQUc7QUFDdkJBLG1CQUFtQixHQUFHO0FBQ3RCQSxzQkFBc0IsR0FBRztBQUN6QkEscUJBQXFCLEdBQUc7QUFDeEJBLGtCQUFrQixHQUFHQSxRQUFRc0IsYUFBYTtBQUMxQ3RCLG9CQUFvQixHQUFHQSxRQUFRcUIsVUFBVSxHQUFHO0FBQzVDckIsbUJBQW1CLEdBQUdBLFFBQVFxQixVQUFVLEdBQUc7QUFDM0NyQixzQkFBc0IsR0FBR0EsUUFBUXFCLFVBQVUsR0FBRztBQUM5Q3JCLHFCQUFxQixHQUFHQSxRQUFRcUIsVUFBVSxHQUFHO0FBQzdDckIsZ0JBQWdCLEdBQUdBLFFBQVFpQixhQUFhO0FBQ3hDakIsbUJBQW1CLEdBQUdBLFFBQVFnQixRQUFRLEdBQUc7QUFDekNoQixpQkFBaUIsR0FBR0EsUUFBUWdCLFFBQVEsR0FBRztBQUN2Q2hCLG9CQUFvQixHQUFHQSxRQUFRZ0IsUUFBUSxHQUFHO0FBQzFDaEIseUJBQXlCLEdBQUdBLFFBQVFnQixRQUFRLEdBQUc7QUFDL0NoQixlQUFlLEdBQUdBLFFBQVFZLGlCQUFpQjtBQUMzQ1osa0JBQWtCLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN2Q1gsaUJBQWlCLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN0Q1gsa0JBQWtCLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN2Q1gsbUJBQW1CLEdBQUdBLFFBQVFXLE9BQU8sR0FBRztBQUN4Q1gsZ0JBQWdCLEdBQUdBLFFBQVFRLFVBQVU7QUFDckNSLGlCQUFpQixHQUFHQSxRQUFRTSxRQUFRLEdBQUc7QUFDdkNOLG1CQUFtQixHQUFHQSxRQUFRTSxRQUFRLEdBQUc7QUFDekNOLGtCQUFrQixHQUFHQSxRQUFRTSxRQUFRLEdBQUc7QUFDeENOLGdCQUFnQixHQUFHQSxRQUFRVyxPQUFPLEdBQUcsS0FDckMsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9rZW5mdW5kLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3RpbWUvZGlzdC9janMvY29uc3RhbnRzL3RpbWUuanM/ZGRkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuT05FX1lFQVIgPSBleHBvcnRzLkZPVVJfV0VFS1MgPSBleHBvcnRzLlRIUkVFX1dFRUtTID0gZXhwb3J0cy5UV09fV0VFS1MgPSBleHBvcnRzLk9ORV9XRUVLID0gZXhwb3J0cy5USElSVFlfREFZUyA9IGV4cG9ydHMuU0VWRU5fREFZUyA9IGV4cG9ydHMuRklWRV9EQVlTID0gZXhwb3J0cy5USFJFRV9EQVlTID0gZXhwb3J0cy5PTkVfREFZID0gZXhwb3J0cy5UV0VOVFlfRk9VUl9IT1VSUyA9IGV4cG9ydHMuVFdFTFZFX0hPVVJTID0gZXhwb3J0cy5TSVhfSE9VUlMgPSBleHBvcnRzLlRIUkVFX0hPVVJTID0gZXhwb3J0cy5PTkVfSE9VUiA9IGV4cG9ydHMuU0lYVFlfTUlOVVRFUyA9IGV4cG9ydHMuVEhJUlRZX01JTlVURVMgPSBleHBvcnRzLlRFTl9NSU5VVEVTID0gZXhwb3J0cy5GSVZFX01JTlVURVMgPSBleHBvcnRzLk9ORV9NSU5VVEUgPSBleHBvcnRzLlNJWFRZX1NFQ09ORFMgPSBleHBvcnRzLlRISVJUWV9TRUNPTkRTID0gZXhwb3J0cy5URU5fU0VDT05EUyA9IGV4cG9ydHMuRklWRV9TRUNPTkRTID0gZXhwb3J0cy5PTkVfU0VDT05EID0gdm9pZCAwO1xuZXhwb3J0cy5PTkVfU0VDT05EID0gMTtcbmV4cG9ydHMuRklWRV9TRUNPTkRTID0gNTtcbmV4cG9ydHMuVEVOX1NFQ09ORFMgPSAxMDtcbmV4cG9ydHMuVEhJUlRZX1NFQ09ORFMgPSAzMDtcbmV4cG9ydHMuU0lYVFlfU0VDT05EUyA9IDYwO1xuZXhwb3J0cy5PTkVfTUlOVVRFID0gZXhwb3J0cy5TSVhUWV9TRUNPTkRTO1xuZXhwb3J0cy5GSVZFX01JTlVURVMgPSBleHBvcnRzLk9ORV9NSU5VVEUgKiA1O1xuZXhwb3J0cy5URU5fTUlOVVRFUyA9IGV4cG9ydHMuT05FX01JTlVURSAqIDEwO1xuZXhwb3J0cy5USElSVFlfTUlOVVRFUyA9IGV4cG9ydHMuT05FX01JTlVURSAqIDMwO1xuZXhwb3J0cy5TSVhUWV9NSU5VVEVTID0gZXhwb3J0cy5PTkVfTUlOVVRFICogNjA7XG5leHBvcnRzLk9ORV9IT1VSID0gZXhwb3J0cy5TSVhUWV9NSU5VVEVTO1xuZXhwb3J0cy5USFJFRV9IT1VSUyA9IGV4cG9ydHMuT05FX0hPVVIgKiAzO1xuZXhwb3J0cy5TSVhfSE9VUlMgPSBleHBvcnRzLk9ORV9IT1VSICogNjtcbmV4cG9ydHMuVFdFTFZFX0hPVVJTID0gZXhwb3J0cy5PTkVfSE9VUiAqIDEyO1xuZXhwb3J0cy5UV0VOVFlfRk9VUl9IT1VSUyA9IGV4cG9ydHMuT05FX0hPVVIgKiAyNDtcbmV4cG9ydHMuT05FX0RBWSA9IGV4cG9ydHMuVFdFTlRZX0ZPVVJfSE9VUlM7XG5leHBvcnRzLlRIUkVFX0RBWVMgPSBleHBvcnRzLk9ORV9EQVkgKiAzO1xuZXhwb3J0cy5GSVZFX0RBWVMgPSBleHBvcnRzLk9ORV9EQVkgKiA1O1xuZXhwb3J0cy5TRVZFTl9EQVlTID0gZXhwb3J0cy5PTkVfREFZICogNztcbmV4cG9ydHMuVEhJUlRZX0RBWVMgPSBleHBvcnRzLk9ORV9EQVkgKiAzMDtcbmV4cG9ydHMuT05FX1dFRUsgPSBleHBvcnRzLlNFVkVOX0RBWVM7XG5leHBvcnRzLlRXT19XRUVLUyA9IGV4cG9ydHMuT05FX1dFRUsgKiAyO1xuZXhwb3J0cy5USFJFRV9XRUVLUyA9IGV4cG9ydHMuT05FX1dFRUsgKiAzO1xuZXhwb3J0cy5GT1VSX1dFRUtTID0gZXhwb3J0cy5PTkVfV0VFSyAqIDQ7XG5leHBvcnRzLk9ORV9ZRUFSID0gZXhwb3J0cy5PTkVfREFZICogMzY1O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dGltZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJPTkVfWUVBUiIsIkZPVVJfV0VFS1MiLCJUSFJFRV9XRUVLUyIsIlRXT19XRUVLUyIsIk9ORV9XRUVLIiwiVEhJUlRZX0RBWVMiLCJTRVZFTl9EQVlTIiwiRklWRV9EQVlTIiwiVEhSRUVfREFZUyIsIk9ORV9EQVkiLCJUV0VOVFlfRk9VUl9IT1VSUyIsIlRXRUxWRV9IT1VSUyIsIlNJWF9IT1VSUyIsIlRIUkVFX0hPVVJTIiwiT05FX0hPVVIiLCJTSVhUWV9NSU5VVEVTIiwiVEhJUlRZX01JTlVURVMiLCJURU5fTUlOVVRFUyIsIkZJVkVfTUlOVVRFUyIsIk9ORV9NSU5VVEUiLCJTSVhUWV9TRUNPTkRTIiwiVEhJUlRZX1NFQ09ORFMiLCJURU5fU0VDT05EUyIsIkZJVkVfU0VDT05EUyIsIk9ORV9TRUNPTkQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/time.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./watch */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/watch.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/index.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyx1RkFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQywyRUFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyx5RkFBYSxHQUFHSCxVQUM3QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy9pbmRleC5qcz8yOWI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3V0aWxzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dhdGNoXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsIl9fZXhwb3J0U3RhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/types/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./watch */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/watch.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy90eXBlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyx1RkFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSCxVQUN6QyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy90eXBlcy9pbmRleC5qcz8zNjI1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dhdGNoXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiX19leHBvcnRTdGFyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/watch.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/types/watch.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.IWatch = void 0;\nclass IWatch {\n}\nexports.IWatch = IWatch; //# sourceMappingURL=watch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy90eXBlcy93YXRjaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsY0FBYyxHQUFHLEtBQUs7QUFDdEIsTUFBTUU7QUFDTjtBQUNBRixjQUFjLEdBQUdFLFFBQ2pCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rva2VuZnVuZC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL3R5cGVzL3dhdGNoLmpzPzRiY2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLklXYXRjaCA9IHZvaWQgMDtcbmNsYXNzIElXYXRjaCB7XG59XG5leHBvcnRzLklXYXRjaCA9IElXYXRjaDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhdGNoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIklXYXRjaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/types/watch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/convert.js":
/*!********************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/convert.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fromMiliseconds = exports.toMiliseconds = void 0;\nconst constants_1 = __webpack_require__(/*! ../constants */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/constants/index.js\");\nfunction toMiliseconds(seconds) {\n    return seconds * constants_1.ONE_THOUSAND;\n}\nexports.toMiliseconds = toMiliseconds;\nfunction fromMiliseconds(miliseconds) {\n    return Math.floor(miliseconds / constants_1.ONE_THOUSAND);\n}\nexports.fromMiliseconds = fromMiliseconds; //# sourceMappingURL=convert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9jb252ZXJ0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx1QkFBdUIsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUN2RCxNQUFNSSxjQUFjQyxtQkFBT0EsQ0FBQywwRkFBYztBQUMxQyxTQUFTRixjQUFjRyxPQUFPO0lBQzFCLE9BQU9BLFVBQVVGLFlBQVlHLFlBQVk7QUFDN0M7QUFDQVAscUJBQXFCLEdBQUdHO0FBQ3hCLFNBQVNELGdCQUFnQk0sV0FBVztJQUNoQyxPQUFPQyxLQUFLQyxLQUFLLENBQUNGLGNBQWNKLFlBQVlHLFlBQVk7QUFDNUQ7QUFDQVAsdUJBQXVCLEdBQUdFLGlCQUMxQixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9jb252ZXJ0LmpzPzk5MWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZyb21NaWxpc2Vjb25kcyA9IGV4cG9ydHMudG9NaWxpc2Vjb25kcyA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4uL2NvbnN0YW50c1wiKTtcbmZ1bmN0aW9uIHRvTWlsaXNlY29uZHMoc2Vjb25kcykge1xuICAgIHJldHVybiBzZWNvbmRzICogY29uc3RhbnRzXzEuT05FX1RIT1VTQU5EO1xufVxuZXhwb3J0cy50b01pbGlzZWNvbmRzID0gdG9NaWxpc2Vjb25kcztcbmZ1bmN0aW9uIGZyb21NaWxpc2Vjb25kcyhtaWxpc2Vjb25kcykge1xuICAgIHJldHVybiBNYXRoLmZsb29yKG1pbGlzZWNvbmRzIC8gY29uc3RhbnRzXzEuT05FX1RIT1VTQU5EKTtcbn1cbmV4cG9ydHMuZnJvbU1pbGlzZWNvbmRzID0gZnJvbU1pbGlzZWNvbmRzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udmVydC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJmcm9tTWlsaXNlY29uZHMiLCJ0b01pbGlzZWNvbmRzIiwiY29uc3RhbnRzXzEiLCJyZXF1aXJlIiwic2Vjb25kcyIsIk9ORV9USE9VU0FORCIsIm1pbGlzZWNvbmRzIiwiTWF0aCIsImZsb29yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/convert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/delay.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/delay.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.delay = void 0;\nfunction delay(timeout) {\n    return new Promise((resolve)=>{\n        setTimeout(()=>{\n            resolve(true);\n        }, timeout);\n    });\n}\nexports.delay = delay; //# sourceMappingURL=delay.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9kZWxheS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsYUFBYSxHQUFHLEtBQUs7QUFDckIsU0FBU0UsTUFBTUMsT0FBTztJQUNsQixPQUFPLElBQUlDLFFBQVFDLENBQUFBO1FBQ2ZDLFdBQVc7WUFDUEQsUUFBUTtRQUNaLEdBQUdGO0lBQ1A7QUFDSjtBQUNBSCxhQUFhLEdBQUdFLE9BQ2hCLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rva2VuZnVuZC8uL25vZGVfbW9kdWxlcy9Ad2FsbGV0Y29ubmVjdC90aW1lL2Rpc3QvY2pzL3V0aWxzL2RlbGF5LmpzPzliOTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlbGF5ID0gdm9pZCAwO1xuZnVuY3Rpb24gZGVsYXkodGltZW91dCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICByZXNvbHZlKHRydWUpO1xuICAgICAgICB9LCB0aW1lb3V0KTtcbiAgICB9KTtcbn1cbmV4cG9ydHMuZGVsYXkgPSBkZWxheTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlbGF5LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlbGF5IiwidGltZW91dCIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/delay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/utils/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\");\ntslib_1.__exportStar(__webpack_require__(/*! ./delay */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/delay.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./convert */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/convert.js\"), exports); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyx1RkFBTztBQUMvQkQsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxpRkFBUyxHQUFHSDtBQUN6Q0UsUUFBUUUsWUFBWSxDQUFDRCxtQkFBT0EsQ0FBQyxxRkFBVyxHQUFHSCxVQUMzQyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy91dGlscy9pbmRleC5qcz9iN2NjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2RlbGF5XCIpLCBleHBvcnRzKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnZlcnRcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/utils/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/dist/cjs/watch.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/time/dist/cjs/watch.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Watch = void 0;\nclass Watch {\n    constructor(){\n        this.timestamps = new Map();\n    }\n    start(label) {\n        if (this.timestamps.has(label)) {\n            throw new Error(`Watch already started for label: ${label}`);\n        }\n        this.timestamps.set(label, {\n            started: Date.now()\n        });\n    }\n    stop(label) {\n        const timestamp = this.get(label);\n        if (typeof timestamp.elapsed !== \"undefined\") {\n            throw new Error(`Watch already stopped for label: ${label}`);\n        }\n        const elapsed = Date.now() - timestamp.started;\n        this.timestamps.set(label, {\n            started: timestamp.started,\n            elapsed\n        });\n    }\n    get(label) {\n        const timestamp = this.timestamps.get(label);\n        if (typeof timestamp === \"undefined\") {\n            throw new Error(`No timestamp found for label: ${label}`);\n        }\n        return timestamp;\n    }\n    elapsed(label) {\n        const timestamp = this.get(label);\n        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;\n        return elapsed;\n    }\n}\nexports.Watch = Watch;\nexports[\"default\"] = Watch; //# sourceMappingURL=watch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy93YXRjaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsYUFBYSxHQUFHLEtBQUs7QUFDckIsTUFBTUU7SUFDRkMsYUFBYztRQUNWLElBQUksQ0FBQ0MsVUFBVSxHQUFHLElBQUlDO0lBQzFCO0lBQ0FDLE1BQU1DLEtBQUssRUFBRTtRQUNULElBQUksSUFBSSxDQUFDSCxVQUFVLENBQUNJLEdBQUcsQ0FBQ0QsUUFBUTtZQUM1QixNQUFNLElBQUlFLE1BQU0sQ0FBQyxpQ0FBaUMsRUFBRUYsTUFBTSxDQUFDO1FBQy9EO1FBQ0EsSUFBSSxDQUFDSCxVQUFVLENBQUNNLEdBQUcsQ0FBQ0gsT0FBTztZQUFFSSxTQUFTQyxLQUFLQyxHQUFHO1FBQUc7SUFDckQ7SUFDQUMsS0FBS1AsS0FBSyxFQUFFO1FBQ1IsTUFBTVEsWUFBWSxJQUFJLENBQUNDLEdBQUcsQ0FBQ1Q7UUFDM0IsSUFBSSxPQUFPUSxVQUFVRSxPQUFPLEtBQUssYUFBYTtZQUMxQyxNQUFNLElBQUlSLE1BQU0sQ0FBQyxpQ0FBaUMsRUFBRUYsTUFBTSxDQUFDO1FBQy9EO1FBQ0EsTUFBTVUsVUFBVUwsS0FBS0MsR0FBRyxLQUFLRSxVQUFVSixPQUFPO1FBQzlDLElBQUksQ0FBQ1AsVUFBVSxDQUFDTSxHQUFHLENBQUNILE9BQU87WUFBRUksU0FBU0ksVUFBVUosT0FBTztZQUFFTTtRQUFRO0lBQ3JFO0lBQ0FELElBQUlULEtBQUssRUFBRTtRQUNQLE1BQU1RLFlBQVksSUFBSSxDQUFDWCxVQUFVLENBQUNZLEdBQUcsQ0FBQ1Q7UUFDdEMsSUFBSSxPQUFPUSxjQUFjLGFBQWE7WUFDbEMsTUFBTSxJQUFJTixNQUFNLENBQUMsOEJBQThCLEVBQUVGLE1BQU0sQ0FBQztRQUM1RDtRQUNBLE9BQU9RO0lBQ1g7SUFDQUUsUUFBUVYsS0FBSyxFQUFFO1FBQ1gsTUFBTVEsWUFBWSxJQUFJLENBQUNDLEdBQUcsQ0FBQ1Q7UUFDM0IsTUFBTVUsVUFBVUYsVUFBVUUsT0FBTyxJQUFJTCxLQUFLQyxHQUFHLEtBQUtFLFVBQVVKLE9BQU87UUFDbkUsT0FBT007SUFDWDtBQUNKO0FBQ0FqQixhQUFhLEdBQUdFO0FBQ2hCRixrQkFBZSxHQUFHRSxPQUNsQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdGltZS9kaXN0L2Nqcy93YXRjaC5qcz8yZGM0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5XYXRjaCA9IHZvaWQgMDtcbmNsYXNzIFdhdGNoIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy50aW1lc3RhbXBzID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBzdGFydChsYWJlbCkge1xuICAgICAgICBpZiAodGhpcy50aW1lc3RhbXBzLmhhcyhsYWJlbCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgV2F0Y2ggYWxyZWFkeSBzdGFydGVkIGZvciBsYWJlbDogJHtsYWJlbH1gKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRpbWVzdGFtcHMuc2V0KGxhYmVsLCB7IHN0YXJ0ZWQ6IERhdGUubm93KCkgfSk7XG4gICAgfVxuICAgIHN0b3AobGFiZWwpIHtcbiAgICAgICAgY29uc3QgdGltZXN0YW1wID0gdGhpcy5nZXQobGFiZWwpO1xuICAgICAgICBpZiAodHlwZW9mIHRpbWVzdGFtcC5lbGFwc2VkICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFdhdGNoIGFscmVhZHkgc3RvcHBlZCBmb3IgbGFiZWw6ICR7bGFiZWx9YCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZWxhcHNlZCA9IERhdGUubm93KCkgLSB0aW1lc3RhbXAuc3RhcnRlZDtcbiAgICAgICAgdGhpcy50aW1lc3RhbXBzLnNldChsYWJlbCwgeyBzdGFydGVkOiB0aW1lc3RhbXAuc3RhcnRlZCwgZWxhcHNlZCB9KTtcbiAgICB9XG4gICAgZ2V0KGxhYmVsKSB7XG4gICAgICAgIGNvbnN0IHRpbWVzdGFtcCA9IHRoaXMudGltZXN0YW1wcy5nZXQobGFiZWwpO1xuICAgICAgICBpZiAodHlwZW9mIHRpbWVzdGFtcCA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBObyB0aW1lc3RhbXAgZm91bmQgZm9yIGxhYmVsOiAke2xhYmVsfWApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aW1lc3RhbXA7XG4gICAgfVxuICAgIGVsYXBzZWQobGFiZWwpIHtcbiAgICAgICAgY29uc3QgdGltZXN0YW1wID0gdGhpcy5nZXQobGFiZWwpO1xuICAgICAgICBjb25zdCBlbGFwc2VkID0gdGltZXN0YW1wLmVsYXBzZWQgfHwgRGF0ZS5ub3coKSAtIHRpbWVzdGFtcC5zdGFydGVkO1xuICAgICAgICByZXR1cm4gZWxhcHNlZDtcbiAgICB9XG59XG5leHBvcnRzLldhdGNoID0gV2F0Y2g7XG5leHBvcnRzLmRlZmF1bHQgPSBXYXRjaDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhdGNoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIldhdGNoIiwiY29uc3RydWN0b3IiLCJ0aW1lc3RhbXBzIiwiTWFwIiwic3RhcnQiLCJsYWJlbCIsImhhcyIsIkVycm9yIiwic2V0Iiwic3RhcnRlZCIsIkRhdGUiLCJub3ciLCJzdG9wIiwidGltZXN0YW1wIiwiZ2V0IiwiZWxhcHNlZCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/dist/cjs/watch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */ /* global Reflect, Promise */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(_)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nfunction __createBinding(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}\nfunction __exportStar(m, exports) {\n    for(var p in m)if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\nfunction __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\nfunction __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\n;\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: n === \"return\"\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    }\n    result.default = mod;\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/time/node_modules/tslib/tslib.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/types/dist/index.es.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/types/dist/index.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ICore: () => (/* binding */ n),\n/* harmony export */   ICrypto: () => (/* binding */ l),\n/* harmony export */   IEchoClient: () => (/* binding */ v),\n/* harmony export */   IEngine: () => (/* binding */ M),\n/* harmony export */   IEngineEvents: () => (/* binding */ w),\n/* harmony export */   IEventClient: () => (/* binding */ C),\n/* harmony export */   IExpirer: () => (/* binding */ x),\n/* harmony export */   IJsonRpcHistory: () => (/* binding */ h),\n/* harmony export */   IKeyChain: () => (/* binding */ E),\n/* harmony export */   IMessageTracker: () => (/* binding */ a),\n/* harmony export */   IPairing: () => (/* binding */ m),\n/* harmony export */   IPublisher: () => (/* binding */ g),\n/* harmony export */   IRelayer: () => (/* binding */ u),\n/* harmony export */   ISignClient: () => (/* binding */ S),\n/* harmony export */   ISignClientEvents: () => (/* binding */ b),\n/* harmony export */   IStore: () => (/* binding */ p),\n/* harmony export */   ISubscriber: () => (/* binding */ d),\n/* harmony export */   ISubscriberTopicMap: () => (/* binding */ I),\n/* harmony export */   IVerify: () => (/* binding */ y)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/events */ \"(ssr)/./node_modules/@walletconnect/events/dist/esm/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass n extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s){\n        super(), this.opts = s, this.protocol = \"wc\", this.version = 2;\n    }\n}\nclass l {\n    constructor(s, t, e){\n        this.core = s, this.logger = t;\n    }\n}\nclass h extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.core = s, this.logger = t, this.records = new Map;\n    }\n}\nclass a {\n    constructor(s, t){\n        this.logger = s, this.core = t;\n    }\n}\nclass g extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.relayer = s, this.logger = t;\n    }\n}\nclass u extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s){\n        super();\n    }\n}\nclass p {\n    constructor(s, t, e, f){\n        this.core = s, this.logger = t, this.name = e;\n    }\n}\nclass I {\n    constructor(){\n        this.map = new Map;\n    }\n}\nclass d extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.relayer = s, this.logger = t;\n    }\n}\nclass E {\n    constructor(s, t){\n        this.core = s, this.logger = t;\n    }\n}\nclass x extends _walletconnect_events__WEBPACK_IMPORTED_MODULE_0__.IEvents {\n    constructor(s, t){\n        super(), this.core = s, this.logger = t;\n    }\n}\nclass m {\n    constructor(s, t){\n        this.logger = s, this.core = t;\n    }\n}\nclass y {\n    constructor(s, t, e){\n        this.core = s, this.logger = t, this.store = e;\n    }\n}\nclass v {\n    constructor(s, t){\n        this.projectId = s, this.logger = t;\n    }\n}\nclass C {\n    constructor(s, t, e){\n        this.core = s, this.logger = t, this.telemetryEnabled = e;\n    }\n}\nclass b extends (events__WEBPACK_IMPORTED_MODULE_1___default()) {\n    constructor(){\n        super();\n    }\n}\nclass S {\n    constructor(s){\n        this.opts = s, this.protocol = \"wc\", this.version = 2;\n    }\n}\nclass w extends events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter {\n    constructor(){\n        super();\n    }\n}\nclass M {\n    constructor(s){\n        this.client = s;\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvdHlwZXMvZGlzdC9pbmRleC5lcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQXlDO0FBQUEsTUFBTUssVUFBVUosMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsQ0FBQztRQUFDLEtBQUssSUFBRyxJQUFJLENBQUNDLElBQUksR0FBQ0QsR0FBRSxJQUFJLENBQUNFLFFBQVEsR0FBQyxNQUFLLElBQUksQ0FBQ0MsT0FBTyxHQUFDO0lBQUM7QUFBQztBQUFDLE1BQU1DO0lBQUVMLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxFQUFDQyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNDLElBQUksR0FBQ1AsR0FBRSxJQUFJLENBQUNRLE1BQU0sR0FBQ0g7SUFBQztBQUFDO0FBQUMsTUFBTUksVUFBVWYsMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ0UsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSCxHQUFFLElBQUksQ0FBQ0ssT0FBTyxHQUFDLElBQUlDO0lBQUc7QUFBQztBQUFDLE1BQU1DO0lBQUViLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDRyxNQUFNLEdBQUNSLEdBQUUsSUFBSSxDQUFDTyxJQUFJLEdBQUNGO0lBQUM7QUFBQztBQUFDLE1BQU1RLFVBQVVuQiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxLQUFLLElBQUcsSUFBSSxDQUFDUyxPQUFPLEdBQUNkLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1VLFVBQVVyQiwwREFBQ0E7SUFBQ0ssWUFBWUMsQ0FBQyxDQUFDO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNZ0I7SUFBRWpCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxFQUFDQyxDQUFDLEVBQUNXLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ1YsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSCxHQUFFLElBQUksQ0FBQ2EsSUFBSSxHQUFDWjtJQUFDO0FBQUM7QUFBQyxNQUFNYTtJQUFFcEIsYUFBYTtRQUFDLElBQUksQ0FBQ3FCLEdBQUcsR0FBQyxJQUFJVDtJQUFHO0FBQUM7QUFBQyxNQUFNVSxVQUFVM0IsMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ1MsT0FBTyxHQUFDZCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNaUI7SUFBRXZCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDRSxJQUFJLEdBQUNQLEdBQUUsSUFBSSxDQUFDUSxNQUFNLEdBQUNIO0lBQUM7QUFBQztBQUFDLE1BQU1rQixVQUFVN0IsMERBQUNBO0lBQUNLLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsS0FBSyxJQUFHLElBQUksQ0FBQ0UsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNbUI7SUFBRXpCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDRyxNQUFNLEdBQUNSLEdBQUUsSUFBSSxDQUFDTyxJQUFJLEdBQUNGO0lBQUM7QUFBQztBQUFDLE1BQU1vQjtJQUFFMUIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLEVBQUNDLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ0MsSUFBSSxHQUFDUCxHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSCxHQUFFLElBQUksQ0FBQ3FCLEtBQUssR0FBQ3BCO0lBQUM7QUFBQztBQUFDLE1BQU1xQjtJQUFFNUIsWUFBWUMsQ0FBQyxFQUFDSyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUN1QixTQUFTLEdBQUM1QixHQUFFLElBQUksQ0FBQ1EsTUFBTSxHQUFDSDtJQUFDO0FBQUM7QUFBQyxNQUFNd0I7SUFBRTlCLFlBQVlDLENBQUMsRUFBQ0ssQ0FBQyxFQUFDQyxDQUFDLENBQUM7UUFBQyxJQUFJLENBQUNDLElBQUksR0FBQ1AsR0FBRSxJQUFJLENBQUNRLE1BQU0sR0FBQ0gsR0FBRSxJQUFJLENBQUN5QixnQkFBZ0IsR0FBQ3hCO0lBQUM7QUFBQztBQUFDLE1BQU15QixVQUFVcEMsK0NBQUNBO0lBQUNJLGFBQWE7UUFBQyxLQUFLO0lBQUU7QUFBQztBQUFDLE1BQU1pQztJQUFFakMsWUFBWUMsQ0FBQyxDQUFDO1FBQUMsSUFBSSxDQUFDQyxJQUFJLEdBQUNELEdBQUUsSUFBSSxDQUFDRSxRQUFRLEdBQUMsTUFBSyxJQUFJLENBQUNDLE9BQU8sR0FBQztJQUFDO0FBQUM7QUFBQyxNQUFNOEIsVUFBVXBDLGdEQUFDQTtJQUFDRSxhQUFhO1FBQUMsS0FBSztJQUFFO0FBQUM7QUFBQyxNQUFNbUM7SUFBRW5DLFlBQVlDLENBQUMsQ0FBQztRQUFDLElBQUksQ0FBQ21DLE1BQU0sR0FBQ25DO0lBQUM7QUFBQztBQUFrVSxDQUNyaEQsb0NBQW9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9rZW5mdW5kLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3R5cGVzL2Rpc3QvaW5kZXguZXMuanM/NjBhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7SUV2ZW50cyBhcyBvfWZyb21cIkB3YWxsZXRjb25uZWN0L2V2ZW50c1wiO2ltcG9ydCBjLHtFdmVudEVtaXR0ZXIgYXMgaX1mcm9tXCJldmVudHNcIjtjbGFzcyBuIGV4dGVuZHMgb3tjb25zdHJ1Y3RvcihzKXtzdXBlcigpLHRoaXMub3B0cz1zLHRoaXMucHJvdG9jb2w9XCJ3Y1wiLHRoaXMudmVyc2lvbj0yfX1jbGFzcyBse2NvbnN0cnVjdG9yKHMsdCxlKXt0aGlzLmNvcmU9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyBoIGV4dGVuZHMgb3tjb25zdHJ1Y3RvcihzLHQpe3N1cGVyKCksdGhpcy5jb3JlPXMsdGhpcy5sb2dnZXI9dCx0aGlzLnJlY29yZHM9bmV3IE1hcH19Y2xhc3MgYXtjb25zdHJ1Y3RvcihzLHQpe3RoaXMubG9nZ2VyPXMsdGhpcy5jb3JlPXR9fWNsYXNzIGcgZXh0ZW5kcyBve2NvbnN0cnVjdG9yKHMsdCl7c3VwZXIoKSx0aGlzLnJlbGF5ZXI9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyB1IGV4dGVuZHMgb3tjb25zdHJ1Y3RvcihzKXtzdXBlcigpfX1jbGFzcyBwe2NvbnN0cnVjdG9yKHMsdCxlLGYpe3RoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXQsdGhpcy5uYW1lPWV9fWNsYXNzIEl7Y29uc3RydWN0b3IoKXt0aGlzLm1hcD1uZXcgTWFwfX1jbGFzcyBkIGV4dGVuZHMgb3tjb25zdHJ1Y3RvcihzLHQpe3N1cGVyKCksdGhpcy5yZWxheWVyPXMsdGhpcy5sb2dnZXI9dH19Y2xhc3MgRXtjb25zdHJ1Y3RvcihzLHQpe3RoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXR9fWNsYXNzIHggZXh0ZW5kcyBve2NvbnN0cnVjdG9yKHMsdCl7c3VwZXIoKSx0aGlzLmNvcmU9cyx0aGlzLmxvZ2dlcj10fX1jbGFzcyBte2NvbnN0cnVjdG9yKHMsdCl7dGhpcy5sb2dnZXI9cyx0aGlzLmNvcmU9dH19Y2xhc3MgeXtjb25zdHJ1Y3RvcihzLHQsZSl7dGhpcy5jb3JlPXMsdGhpcy5sb2dnZXI9dCx0aGlzLnN0b3JlPWV9fWNsYXNzIHZ7Y29uc3RydWN0b3Iocyx0KXt0aGlzLnByb2plY3RJZD1zLHRoaXMubG9nZ2VyPXR9fWNsYXNzIEN7Y29uc3RydWN0b3Iocyx0LGUpe3RoaXMuY29yZT1zLHRoaXMubG9nZ2VyPXQsdGhpcy50ZWxlbWV0cnlFbmFibGVkPWV9fWNsYXNzIGIgZXh0ZW5kcyBje2NvbnN0cnVjdG9yKCl7c3VwZXIoKX19Y2xhc3MgU3tjb25zdHJ1Y3RvcihzKXt0aGlzLm9wdHM9cyx0aGlzLnByb3RvY29sPVwid2NcIix0aGlzLnZlcnNpb249Mn19Y2xhc3MgdyBleHRlbmRzIGl7Y29uc3RydWN0b3IoKXtzdXBlcigpfX1jbGFzcyBNe2NvbnN0cnVjdG9yKHMpe3RoaXMuY2xpZW50PXN9fWV4cG9ydHtuIGFzIElDb3JlLGwgYXMgSUNyeXB0byx2IGFzIElFY2hvQ2xpZW50LE0gYXMgSUVuZ2luZSx3IGFzIElFbmdpbmVFdmVudHMsQyBhcyBJRXZlbnRDbGllbnQseCBhcyBJRXhwaXJlcixoIGFzIElKc29uUnBjSGlzdG9yeSxFIGFzIElLZXlDaGFpbixhIGFzIElNZXNzYWdlVHJhY2tlcixtIGFzIElQYWlyaW5nLGcgYXMgSVB1Ymxpc2hlcix1IGFzIElSZWxheWVyLFMgYXMgSVNpZ25DbGllbnQsYiBhcyBJU2lnbkNsaWVudEV2ZW50cyxwIGFzIElTdG9yZSxkIGFzIElTdWJzY3JpYmVyLEkgYXMgSVN1YnNjcmliZXJUb3BpY01hcCx5IGFzIElWZXJpZnl9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguZXMuanMubWFwXG4iXSwibmFtZXMiOlsiSUV2ZW50cyIsIm8iLCJjIiwiRXZlbnRFbWl0dGVyIiwiaSIsIm4iLCJjb25zdHJ1Y3RvciIsInMiLCJvcHRzIiwicHJvdG9jb2wiLCJ2ZXJzaW9uIiwibCIsInQiLCJlIiwiY29yZSIsImxvZ2dlciIsImgiLCJyZWNvcmRzIiwiTWFwIiwiYSIsImciLCJyZWxheWVyIiwidSIsInAiLCJmIiwibmFtZSIsIkkiLCJtYXAiLCJkIiwiRSIsIngiLCJtIiwieSIsInN0b3JlIiwidiIsInByb2plY3RJZCIsIkMiLCJ0ZWxlbWV0cnlFbmFibGVkIiwiYiIsIlMiLCJ3IiwiTSIsImNsaWVudCIsIklDb3JlIiwiSUNyeXB0byIsIklFY2hvQ2xpZW50IiwiSUVuZ2luZSIsIklFbmdpbmVFdmVudHMiLCJJRXZlbnRDbGllbnQiLCJJRXhwaXJlciIsIklKc29uUnBjSGlzdG9yeSIsIklLZXlDaGFpbiIsIklNZXNzYWdlVHJhY2tlciIsIklQYWlyaW5nIiwiSVB1Ymxpc2hlciIsIklSZWxheWVyIiwiSVNpZ25DbGllbnQiLCJJU2lnbkNsaWVudEV2ZW50cyIsIklTdG9yZSIsIklTdWJzY3JpYmVyIiwiSVN1YnNjcmliZXJUb3BpY01hcCIsIklWZXJpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/types/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/universal-provider/dist/index.es.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@walletconnect/universal-provider/dist/index.es.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UniversalProvider: () => (/* binding */ Tt),\n/* harmony export */   \"default\": () => (/* binding */ C)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @walletconnect/sign-client */ \"(ssr)/./node_modules/@walletconnect/sign-client/dist/index.es.js\");\n/* harmony import */ var _walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @walletconnect/utils */ \"(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\");\n/* harmony import */ var _walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/logger */ \"(ssr)/./node_modules/@walletconnect/logger/dist/index.es.js\");\n/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/merge */ \"(ssr)/./node_modules/lodash/merge.js\");\n/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/jsonrpc-http-connection */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js\");\n/* harmony import */ var _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @walletconnect/jsonrpc-provider */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-provider/dist/index.es.js\");\n/* harmony import */ var _walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @walletconnect/jsonrpc-utils */ \"(ssr)/./node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\n\n\nconst D = \"error\", rt = \"wss://relay.walletconnect.org\", nt = \"wc\", at = \"universal_provider\", S = `${nt}@2:${at}:`, _ = \"https://rpc.walletconnect.org/v1/\", f = \"generic\", ot = `${_}bundler`, p = {\n    DEFAULT_CHAIN_CHANGED: \"default_chain_changed\"\n};\nvar ct = Object.defineProperty, ht = Object.defineProperties, pt = Object.getOwnPropertyDescriptors, j = Object.getOwnPropertySymbols, dt = Object.prototype.hasOwnProperty, ut = Object.prototype.propertyIsEnumerable, R = (r, t, e)=>t in r ? ct(r, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : r[t] = e, g = (r, t)=>{\n    for(var e in t || (t = {}))dt.call(t, e) && R(r, e, t[e]);\n    if (j) for (var e of j(t))ut.call(t, e) && R(r, e, t[e]);\n    return r;\n}, lt = (r, t)=>ht(r, pt(t));\nfunction h(r, t, e) {\n    var s;\n    const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.parseChainId)(r);\n    return ((s = t.rpcMap) == null ? void 0 : s[i.reference]) || `${_}?chainId=${i.namespace}:${i.reference}&projectId=${e}`;\n}\nfunction l(r) {\n    return r.includes(\":\") ? r.split(\":\")[1] : r;\n}\nfunction U(r) {\n    return r.map((t)=>`${t.split(\":\")[0]}:${t.split(\":\")[1]}`);\n}\nfunction mt(r, t) {\n    const e = Object.keys(t.namespaces).filter((i)=>i.includes(r));\n    if (!e.length) return [];\n    const s = [];\n    return e.forEach((i)=>{\n        const n = t.namespaces[i].accounts;\n        s.push(...n);\n    }), s;\n}\nfunction $(r = {}, t = {}) {\n    const e = T(r), s = T(t);\n    return lodash_merge__WEBPACK_IMPORTED_MODULE_1___default()(e, s);\n}\nfunction T(r) {\n    var t, e, s, i;\n    const n = {};\n    if (!(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.isValidObject)(r)) return n;\n    for (const [a, c] of Object.entries(r)){\n        const m = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.isCaipNamespace)(a) ? [\n            a\n        ] : c.chains, I = c.methods || [], V = c.events || [], B = c.rpcMap || {}, v = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.parseNamespaceKey)(a);\n        n[v] = lt(g(g({}, n[v]), c), {\n            chains: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.mergeArrays)(m, (t = n[v]) == null ? void 0 : t.chains),\n            methods: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.mergeArrays)(I, (e = n[v]) == null ? void 0 : e.methods),\n            events: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.mergeArrays)(V, (s = n[v]) == null ? void 0 : s.events),\n            rpcMap: g(g({}, B), (i = n[v]) == null ? void 0 : i.rpcMap)\n        });\n    }\n    return n;\n}\nfunction vt(r) {\n    return r.includes(\":\") ? r.split(\":\")[2] : r;\n}\nfunction k(r) {\n    const t = {};\n    for (const [e, s] of Object.entries(r)){\n        const i = s.methods || [], n = s.events || [], a = s.accounts || [], c = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.isCaipNamespace)(e) ? [\n            e\n        ] : s.chains ? s.chains : U(s.accounts);\n        t[e] = {\n            chains: c,\n            methods: i,\n            events: n,\n            accounts: a\n        };\n    }\n    return t;\n}\nfunction E(r) {\n    return typeof r == \"number\" ? r : r.includes(\"0x\") ? parseInt(r, 16) : (r = r.includes(\":\") ? r.split(\":\")[1] : r, isNaN(Number(r)) ? r : Number(r));\n}\nconst L = {}, o = (r)=>L[r], b = (r, t)=>{\n    L[r] = t;\n};\nclass ft {\n    constructor(t){\n        this.name = \"polkadot\", this.namespace = t.namespace, this.events = o(\"events\"), this.client = o(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(t) {\n        this.namespace = Object.assign(this.namespace, t);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const t = this.namespace.chains[0];\n        if (!t) throw new Error(\"ChainId not found\");\n        return t.split(\":\")[1];\n    }\n    request(t) {\n        return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request);\n    }\n    setDefaultChain(t, e) {\n        this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(p.DEFAULT_CHAIN_CHANGED, `${this.name}:${t}`);\n    }\n    getAccounts() {\n        const t = this.namespace.accounts;\n        return t ? t.filter((e)=>e.split(\":\")[1] === this.chainId.toString()).map((e)=>e.split(\":\")[2]) || [] : [];\n    }\n    createHttpProviders() {\n        const t = {};\n        return this.namespace.chains.forEach((e)=>{\n            var s;\n            const i = l(e);\n            t[i] = this.createHttpProvider(i, (s = this.namespace.rpcMap) == null ? void 0 : s[e]);\n        }), t;\n    }\n    getHttpProvider() {\n        const t = `${this.name}:${this.chainId}`, e = this.httpProviders[t];\n        if (typeof e > \"u\") throw new Error(`JSON-RPC provider for ${t} not found`);\n        return e;\n    }\n    setHttpProvider(t, e) {\n        const s = this.createHttpProvider(t, e);\n        s && (this.httpProviders[t] = s);\n    }\n    createHttpProvider(t, e) {\n        const s = e || h(t, this.namespace, this.client.core.projectId);\n        if (!s) throw new Error(`No RPC url provided for chainId: ${t}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_3__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_2__[\"default\"](s, o(\"disableProviderPing\")));\n    }\n}\nvar Pt = Object.defineProperty, gt = Object.defineProperties, wt = Object.getOwnPropertyDescriptors, F = Object.getOwnPropertySymbols, Ct = Object.prototype.hasOwnProperty, It = Object.prototype.propertyIsEnumerable, G = (r, t, e)=>t in r ? Pt(r, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : r[t] = e, M = (r, t)=>{\n    for(var e in t || (t = {}))Ct.call(t, e) && G(r, e, t[e]);\n    if (F) for (var e of F(t))It.call(t, e) && G(r, e, t[e]);\n    return r;\n}, x = (r, t)=>gt(r, wt(t));\nclass Ht {\n    constructor(t){\n        this.name = \"eip155\", this.namespace = t.namespace, this.events = o(\"events\"), this.client = o(\"client\"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());\n    }\n    async request(t) {\n        switch(t.request.method){\n            case \"eth_requestAccounts\":\n                return this.getAccounts();\n            case \"eth_accounts\":\n                return this.getAccounts();\n            case \"wallet_switchEthereumChain\":\n                return await this.handleSwitchChain(t);\n            case \"eth_chainId\":\n                return parseInt(this.getDefaultChain());\n            case \"wallet_getCapabilities\":\n                return await this.getCapabilities(t);\n            case \"wallet_getCallsStatus\":\n                return await this.getCallStatus(t);\n        }\n        return this.namespace.methods.includes(t.request.method) ? await this.client.request(t) : this.getHttpProvider().request(t.request);\n    }\n    updateNamespace(t) {\n        this.namespace = Object.assign(this.namespace, t);\n    }\n    setDefaultChain(t, e) {\n        this.httpProviders[t] || this.setHttpProvider(parseInt(t), e), this.chainId = parseInt(t), this.events.emit(p.DEFAULT_CHAIN_CHANGED, `${this.name}:${t}`);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId.toString();\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const t = this.namespace.chains[0];\n        if (!t) throw new Error(\"ChainId not found\");\n        return t.split(\":\")[1];\n    }\n    createHttpProvider(t, e) {\n        const s = e || h(`${this.name}:${t}`, this.namespace, this.client.core.projectId);\n        if (!s) throw new Error(`No RPC url provided for chainId: ${t}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_3__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_2__.HttpConnection(s, o(\"disableProviderPing\")));\n    }\n    setHttpProvider(t, e) {\n        const s = this.createHttpProvider(t, e);\n        s && (this.httpProviders[t] = s);\n    }\n    createHttpProviders() {\n        const t = {};\n        return this.namespace.chains.forEach((e)=>{\n            var s;\n            const i = parseInt(l(e));\n            t[i] = this.createHttpProvider(i, (s = this.namespace.rpcMap) == null ? void 0 : s[e]);\n        }), t;\n    }\n    getAccounts() {\n        const t = this.namespace.accounts;\n        return t ? [\n            ...new Set(t.filter((e)=>e.split(\":\")[1] === this.chainId.toString()).map((e)=>e.split(\":\")[2]))\n        ] : [];\n    }\n    getHttpProvider() {\n        const t = this.chainId, e = this.httpProviders[t];\n        if (typeof e > \"u\") throw new Error(`JSON-RPC provider for ${t} not found`);\n        return e;\n    }\n    async handleSwitchChain(t) {\n        var e, s;\n        let i = t.request.params ? (e = t.request.params[0]) == null ? void 0 : e.chainId : \"0x0\";\n        i = i.startsWith(\"0x\") ? i : `0x${i}`;\n        const n = parseInt(i, 16);\n        if (this.isChainApproved(n)) this.setDefaultChain(`${n}`);\n        else if (this.namespace.methods.includes(\"wallet_switchEthereumChain\")) await this.client.request({\n            topic: t.topic,\n            request: {\n                method: t.request.method,\n                params: [\n                    {\n                        chainId: i\n                    }\n                ]\n            },\n            chainId: (s = this.namespace.chains) == null ? void 0 : s[0]\n        }), this.setDefaultChain(`${n}`);\n        else throw new Error(`Failed to switch to chain 'eip155:${n}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);\n        return null;\n    }\n    isChainApproved(t) {\n        return this.namespace.chains.includes(`${this.name}:${t}`);\n    }\n    async getCapabilities(t) {\n        var e, s, i;\n        const n = (s = (e = t.request) == null ? void 0 : e.params) == null ? void 0 : s[0];\n        if (!n) throw new Error(\"Missing address parameter in `wallet_getCapabilities` request\");\n        const a = this.client.session.get(t.topic), c = ((i = a?.sessionProperties) == null ? void 0 : i.capabilities) || {};\n        if (c != null && c[n]) return c?.[n];\n        const m = await this.client.request(t);\n        try {\n            await this.client.session.update(t.topic, {\n                sessionProperties: x(M({}, a.sessionProperties || {}), {\n                    capabilities: x(M({}, c || {}), {\n                        [n]: m\n                    })\n                })\n            });\n        } catch (I) {\n            console.warn(\"Failed to update session with capabilities\", I);\n        }\n        return m;\n    }\n    async getCallStatus(t) {\n        var e, s;\n        const i = this.client.session.get(t.topic), n = (e = i.sessionProperties) == null ? void 0 : e.bundler_name;\n        if (n) {\n            const c = this.getBundlerUrl(t.chainId, n);\n            try {\n                return await this.getUserOperationReceipt(c, t);\n            } catch (m) {\n                console.warn(\"Failed to fetch call status from bundler\", m, c);\n            }\n        }\n        const a = (s = i.sessionProperties) == null ? void 0 : s.bundler_url;\n        if (a) try {\n            return await this.getUserOperationReceipt(a, t);\n        } catch (c) {\n            console.warn(\"Failed to fetch call status from custom bundler\", c, a);\n        }\n        if (this.namespace.methods.includes(t.request.method)) return await this.client.request(t);\n        throw new Error(\"Fetching call status not approved by the wallet.\");\n    }\n    async getUserOperationReceipt(t, e) {\n        var s;\n        const i = new URL(t), n = await fetch(i, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify((0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_4__.formatJsonRpcRequest)(\"eth_getUserOperationReceipt\", [\n                (s = e.request.params) == null ? void 0 : s[0]\n            ]))\n        });\n        if (!n.ok) throw new Error(`Failed to fetch user operation receipt - ${n.status}`);\n        return await n.json();\n    }\n    getBundlerUrl(t, e) {\n        return `${ot}?projectId=${this.client.core.projectId}&chainId=${t}&bundler=${e}`;\n    }\n}\nclass $t {\n    constructor(t){\n        this.name = \"solana\", this.namespace = t.namespace, this.events = o(\"events\"), this.client = o(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(t) {\n        this.namespace = Object.assign(this.namespace, t);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(t) {\n        return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request);\n    }\n    setDefaultChain(t, e) {\n        this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(p.DEFAULT_CHAIN_CHANGED, `${this.name}:${t}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const t = this.namespace.chains[0];\n        if (!t) throw new Error(\"ChainId not found\");\n        return t.split(\":\")[1];\n    }\n    getAccounts() {\n        const t = this.namespace.accounts;\n        return t ? [\n            ...new Set(t.filter((e)=>e.split(\":\")[1] === this.chainId.toString()).map((e)=>e.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const t = {};\n        return this.namespace.chains.forEach((e)=>{\n            var s;\n            const i = l(e);\n            t[i] = this.createHttpProvider(i, (s = this.namespace.rpcMap) == null ? void 0 : s[e]);\n        }), t;\n    }\n    getHttpProvider() {\n        const t = `${this.name}:${this.chainId}`, e = this.httpProviders[t];\n        if (typeof e > \"u\") throw new Error(`JSON-RPC provider for ${t} not found`);\n        return e;\n    }\n    setHttpProvider(t, e) {\n        const s = this.createHttpProvider(t, e);\n        s && (this.httpProviders[t] = s);\n    }\n    createHttpProvider(t, e) {\n        const s = e || h(t, this.namespace, this.client.core.projectId);\n        if (!s) throw new Error(`No RPC url provided for chainId: ${t}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_3__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_2__[\"default\"](s, o(\"disableProviderPing\")));\n    }\n}\nclass Et {\n    constructor(t){\n        this.name = \"cosmos\", this.namespace = t.namespace, this.events = o(\"events\"), this.client = o(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(t) {\n        this.namespace = Object.assign(this.namespace, t);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const t = this.namespace.chains[0];\n        if (!t) throw new Error(\"ChainId not found\");\n        return t.split(\":\")[1];\n    }\n    request(t) {\n        return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request);\n    }\n    setDefaultChain(t, e) {\n        this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(p.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const t = this.namespace.accounts;\n        return t ? [\n            ...new Set(t.filter((e)=>e.split(\":\")[1] === this.chainId.toString()).map((e)=>e.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const t = {};\n        return this.namespace.chains.forEach((e)=>{\n            var s;\n            const i = l(e);\n            t[i] = this.createHttpProvider(i, (s = this.namespace.rpcMap) == null ? void 0 : s[e]);\n        }), t;\n    }\n    getHttpProvider() {\n        const t = `${this.name}:${this.chainId}`, e = this.httpProviders[t];\n        if (typeof e > \"u\") throw new Error(`JSON-RPC provider for ${t} not found`);\n        return e;\n    }\n    setHttpProvider(t, e) {\n        const s = this.createHttpProvider(t, e);\n        s && (this.httpProviders[t] = s);\n    }\n    createHttpProvider(t, e) {\n        const s = e || h(t, this.namespace, this.client.core.projectId);\n        if (!s) throw new Error(`No RPC url provided for chainId: ${t}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_3__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_2__[\"default\"](s, o(\"disableProviderPing\")));\n    }\n}\nclass bt {\n    constructor(t){\n        this.name = \"algorand\", this.namespace = t.namespace, this.events = o(\"events\"), this.client = o(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(t) {\n        this.namespace = Object.assign(this.namespace, t);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(t) {\n        return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request);\n    }\n    setDefaultChain(t, e) {\n        if (!this.httpProviders[t]) {\n            const s = e || h(`${this.name}:${t}`, this.namespace, this.client.core.projectId);\n            if (!s) throw new Error(`No RPC url provided for chainId: ${t}`);\n            this.setHttpProvider(t, s);\n        }\n        this.chainId = t, this.events.emit(p.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const t = this.namespace.chains[0];\n        if (!t) throw new Error(\"ChainId not found\");\n        return t.split(\":\")[1];\n    }\n    getAccounts() {\n        const t = this.namespace.accounts;\n        return t ? [\n            ...new Set(t.filter((e)=>e.split(\":\")[1] === this.chainId.toString()).map((e)=>e.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const t = {};\n        return this.namespace.chains.forEach((e)=>{\n            var s;\n            t[e] = this.createHttpProvider(e, (s = this.namespace.rpcMap) == null ? void 0 : s[e]);\n        }), t;\n    }\n    getHttpProvider() {\n        const t = `${this.name}:${this.chainId}`, e = this.httpProviders[t];\n        if (typeof e > \"u\") throw new Error(`JSON-RPC provider for ${t} not found`);\n        return e;\n    }\n    setHttpProvider(t, e) {\n        const s = this.createHttpProvider(t, e);\n        s && (this.httpProviders[t] = s);\n    }\n    createHttpProvider(t, e) {\n        const s = e || h(t, this.namespace, this.client.core.projectId);\n        return typeof s > \"u\" ? void 0 : new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_3__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_2__[\"default\"](s, o(\"disableProviderPing\")));\n    }\n}\nclass At {\n    constructor(t){\n        this.name = \"cip34\", this.namespace = t.namespace, this.events = o(\"events\"), this.client = o(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(t) {\n        this.namespace = Object.assign(this.namespace, t);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const t = this.namespace.chains[0];\n        if (!t) throw new Error(\"ChainId not found\");\n        return t.split(\":\")[1];\n    }\n    request(t) {\n        return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request);\n    }\n    setDefaultChain(t, e) {\n        this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(p.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const t = this.namespace.accounts;\n        return t ? [\n            ...new Set(t.filter((e)=>e.split(\":\")[1] === this.chainId.toString()).map((e)=>e.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const t = {};\n        return this.namespace.chains.forEach((e)=>{\n            const s = this.getCardanoRPCUrl(e), i = l(e);\n            t[i] = this.createHttpProvider(i, s);\n        }), t;\n    }\n    getHttpProvider() {\n        const t = `${this.name}:${this.chainId}`, e = this.httpProviders[t];\n        if (typeof e > \"u\") throw new Error(`JSON-RPC provider for ${t} not found`);\n        return e;\n    }\n    getCardanoRPCUrl(t) {\n        const e = this.namespace.rpcMap;\n        if (e) return e[t];\n    }\n    setHttpProvider(t, e) {\n        const s = this.createHttpProvider(t, e);\n        s && (this.httpProviders[t] = s);\n    }\n    createHttpProvider(t, e) {\n        const s = e || this.getCardanoRPCUrl(t);\n        if (!s) throw new Error(`No RPC url provided for chainId: ${t}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_3__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_2__[\"default\"](s, o(\"disableProviderPing\")));\n    }\n}\nclass Nt {\n    constructor(t){\n        this.name = \"elrond\", this.namespace = t.namespace, this.events = o(\"events\"), this.client = o(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(t) {\n        this.namespace = Object.assign(this.namespace, t);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(t) {\n        return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request);\n    }\n    setDefaultChain(t, e) {\n        this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(p.DEFAULT_CHAIN_CHANGED, `${this.name}:${t}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const t = this.namespace.chains[0];\n        if (!t) throw new Error(\"ChainId not found\");\n        return t.split(\":\")[1];\n    }\n    getAccounts() {\n        const t = this.namespace.accounts;\n        return t ? [\n            ...new Set(t.filter((e)=>e.split(\":\")[1] === this.chainId.toString()).map((e)=>e.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const t = {};\n        return this.namespace.chains.forEach((e)=>{\n            var s;\n            const i = l(e);\n            t[i] = this.createHttpProvider(i, (s = this.namespace.rpcMap) == null ? void 0 : s[e]);\n        }), t;\n    }\n    getHttpProvider() {\n        const t = `${this.name}:${this.chainId}`, e = this.httpProviders[t];\n        if (typeof e > \"u\") throw new Error(`JSON-RPC provider for ${t} not found`);\n        return e;\n    }\n    setHttpProvider(t, e) {\n        const s = this.createHttpProvider(t, e);\n        s && (this.httpProviders[t] = s);\n    }\n    createHttpProvider(t, e) {\n        const s = e || h(t, this.namespace, this.client.core.projectId);\n        if (!s) throw new Error(`No RPC url provided for chainId: ${t}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_3__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_2__[\"default\"](s, o(\"disableProviderPing\")));\n    }\n}\nclass yt {\n    constructor(t){\n        this.name = \"multiversx\", this.namespace = t.namespace, this.events = o(\"events\"), this.client = o(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(t) {\n        this.namespace = Object.assign(this.namespace, t);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(t) {\n        return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request);\n    }\n    setDefaultChain(t, e) {\n        this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(p.DEFAULT_CHAIN_CHANGED, `${this.name}:${t}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const t = this.namespace.chains[0];\n        if (!t) throw new Error(\"ChainId not found\");\n        return t.split(\":\")[1];\n    }\n    getAccounts() {\n        const t = this.namespace.accounts;\n        return t ? [\n            ...new Set(t.filter((e)=>e.split(\":\")[1] === this.chainId.toString()).map((e)=>e.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        const t = {};\n        return this.namespace.chains.forEach((e)=>{\n            var s;\n            const i = l(e);\n            t[i] = this.createHttpProvider(i, (s = this.namespace.rpcMap) == null ? void 0 : s[e]);\n        }), t;\n    }\n    getHttpProvider() {\n        const t = `${this.name}:${this.chainId}`, e = this.httpProviders[t];\n        if (typeof e > \"u\") throw new Error(`JSON-RPC provider for ${t} not found`);\n        return e;\n    }\n    setHttpProvider(t, e) {\n        const s = this.createHttpProvider(t, e);\n        s && (this.httpProviders[t] = s);\n    }\n    createHttpProvider(t, e) {\n        const s = e || h(t, this.namespace, this.client.core.projectId);\n        if (!s) throw new Error(`No RPC url provided for chainId: ${t}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_3__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_2__[\"default\"](s, o(\"disableProviderPing\")));\n    }\n}\nclass Ot {\n    constructor(t){\n        this.name = \"near\", this.namespace = t.namespace, this.events = o(\"events\"), this.client = o(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(t) {\n        this.namespace = Object.assign(this.namespace, t);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const t = this.namespace.chains[0];\n        if (!t) throw new Error(\"ChainId not found\");\n        return t.split(\":\")[1];\n    }\n    request(t) {\n        return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request);\n    }\n    setDefaultChain(t, e) {\n        if (this.chainId = t, !this.httpProviders[t]) {\n            const s = e || h(`${this.name}:${t}`, this.namespace);\n            if (!s) throw new Error(`No RPC url provided for chainId: ${t}`);\n            this.setHttpProvider(t, s);\n        }\n        this.events.emit(p.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const t = this.namespace.accounts;\n        return t ? t.filter((e)=>e.split(\":\")[1] === this.chainId.toString()).map((e)=>e.split(\":\")[2]) || [] : [];\n    }\n    createHttpProviders() {\n        const t = {};\n        return this.namespace.chains.forEach((e)=>{\n            var s;\n            t[e] = this.createHttpProvider(e, (s = this.namespace.rpcMap) == null ? void 0 : s[e]);\n        }), t;\n    }\n    getHttpProvider() {\n        const t = `${this.name}:${this.chainId}`, e = this.httpProviders[t];\n        if (typeof e > \"u\") throw new Error(`JSON-RPC provider for ${t} not found`);\n        return e;\n    }\n    setHttpProvider(t, e) {\n        const s = this.createHttpProvider(t, e);\n        s && (this.httpProviders[t] = s);\n    }\n    createHttpProvider(t, e) {\n        const s = e || h(t, this.namespace);\n        return typeof s > \"u\" ? void 0 : new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_3__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_2__[\"default\"](s, o(\"disableProviderPing\")));\n    }\n}\nclass qt {\n    constructor(t){\n        this.name = \"tezos\", this.namespace = t.namespace, this.events = o(\"events\"), this.client = o(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(t) {\n        this.namespace = Object.assign(this.namespace, t);\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const t = this.namespace.chains[0];\n        if (!t) throw new Error(\"ChainId not found\");\n        return t.split(\":\")[1];\n    }\n    request(t) {\n        return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider().request(t.request);\n    }\n    setDefaultChain(t, e) {\n        if (this.chainId = t, !this.httpProviders[t]) {\n            const s = e || h(`${this.name}:${t}`, this.namespace);\n            if (!s) throw new Error(`No RPC url provided for chainId: ${t}`);\n            this.setHttpProvider(t, s);\n        }\n        this.events.emit(p.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);\n    }\n    getAccounts() {\n        const t = this.namespace.accounts;\n        return t ? t.filter((e)=>e.split(\":\")[1] === this.chainId.toString()).map((e)=>e.split(\":\")[2]) || [] : [];\n    }\n    createHttpProviders() {\n        const t = {};\n        return this.namespace.chains.forEach((e)=>{\n            t[e] = this.createHttpProvider(e);\n        }), t;\n    }\n    getHttpProvider() {\n        const t = `${this.name}:${this.chainId}`, e = this.httpProviders[t];\n        if (typeof e > \"u\") throw new Error(`JSON-RPC provider for ${t} not found`);\n        return e;\n    }\n    setHttpProvider(t, e) {\n        const s = this.createHttpProvider(t, e);\n        s && (this.httpProviders[t] = s);\n    }\n    createHttpProvider(t, e) {\n        const s = e || h(t, this.namespace);\n        return typeof s > \"u\" ? void 0 : new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_3__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_2__[\"default\"](s));\n    }\n}\nclass Dt {\n    constructor(t){\n        this.name = f, this.namespace = t.namespace, this.events = o(\"events\"), this.client = o(\"client\"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();\n    }\n    updateNamespace(t) {\n        this.namespace.chains = [\n            ...new Set((this.namespace.chains || []).concat(t.chains || []))\n        ], this.namespace.accounts = [\n            ...new Set((this.namespace.accounts || []).concat(t.accounts || []))\n        ], this.namespace.methods = [\n            ...new Set((this.namespace.methods || []).concat(t.methods || []))\n        ], this.namespace.events = [\n            ...new Set((this.namespace.events || []).concat(t.events || []))\n        ], this.httpProviders = this.createHttpProviders();\n    }\n    requestAccounts() {\n        return this.getAccounts();\n    }\n    request(t) {\n        return this.namespace.methods.includes(t.request.method) ? this.client.request(t) : this.getHttpProvider(t.chainId).request(t.request);\n    }\n    setDefaultChain(t, e) {\n        this.httpProviders[t] || this.setHttpProvider(t, e), this.chainId = t, this.events.emit(p.DEFAULT_CHAIN_CHANGED, `${this.name}:${t}`);\n    }\n    getDefaultChain() {\n        if (this.chainId) return this.chainId;\n        if (this.namespace.defaultChain) return this.namespace.defaultChain;\n        const t = this.namespace.chains[0];\n        if (!t) throw new Error(\"ChainId not found\");\n        return t.split(\":\")[1];\n    }\n    getAccounts() {\n        const t = this.namespace.accounts;\n        return t ? [\n            ...new Set(t.filter((e)=>e.split(\":\")[1] === this.chainId.toString()).map((e)=>e.split(\":\")[2]))\n        ] : [];\n    }\n    createHttpProviders() {\n        var t, e;\n        const s = {};\n        return (e = (t = this.namespace) == null ? void 0 : t.accounts) == null || e.forEach((i)=>{\n            const n = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.parseChainId)(i);\n            s[`${n.namespace}:${n.reference}`] = this.createHttpProvider(i);\n        }), s;\n    }\n    getHttpProvider(t) {\n        const e = this.httpProviders[t];\n        if (typeof e > \"u\") throw new Error(`JSON-RPC provider for ${t} not found`);\n        return e;\n    }\n    setHttpProvider(t, e) {\n        const s = this.createHttpProvider(t, e);\n        s && (this.httpProviders[t] = s);\n    }\n    createHttpProvider(t, e) {\n        const s = e || h(t, this.namespace, this.client.core.projectId);\n        if (!s) throw new Error(`No RPC url provided for chainId: ${t}`);\n        return new _walletconnect_jsonrpc_provider__WEBPACK_IMPORTED_MODULE_3__.JsonRpcProvider(new _walletconnect_jsonrpc_http_connection__WEBPACK_IMPORTED_MODULE_2__[\"default\"](s, o(\"disableProviderPing\")));\n    }\n}\nvar St = Object.defineProperty, _t = Object.defineProperties, jt = Object.getOwnPropertyDescriptors, J = Object.getOwnPropertySymbols, Rt = Object.prototype.hasOwnProperty, Ut = Object.prototype.propertyIsEnumerable, z = (r, t, e)=>t in r ? St(r, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: e\n    }) : r[t] = e, w = (r, t)=>{\n    for(var e in t || (t = {}))Rt.call(t, e) && z(r, e, t[e]);\n    if (J) for (var e of J(t))Ut.call(t, e) && z(r, e, t[e]);\n    return r;\n}, A = (r, t)=>_t(r, jt(t));\nclass C {\n    constructor(t){\n        this.events = new (events__WEBPACK_IMPORTED_MODULE_5___default()), this.rpcProviders = {}, this.shouldAbortPairingAttempt = !1, this.maxPairingAttempts = 10, this.disableProviderPing = !1, this.providerOpts = t, this.logger = typeof t?.logger < \"u\" && typeof t?.logger != \"string\" ? t.logger : (0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.pino)((0,_walletconnect_logger__WEBPACK_IMPORTED_MODULE_0__.getDefaultLoggerOptions)({\n            level: t?.logger || D\n        })), this.disableProviderPing = t?.disableProviderPing || !1;\n    }\n    static async init(t) {\n        const e = new C(t);\n        return await e.initialize(), e;\n    }\n    async request(t, e, s) {\n        const [i, n] = this.validateChain(e);\n        if (!this.session) throw new Error(\"Please call connect() before request()\");\n        return await this.getProvider(i).request({\n            request: w({}, t),\n            chainId: `${i}:${n}`,\n            topic: this.session.topic,\n            expiry: s\n        });\n    }\n    sendAsync(t, e, s, i) {\n        const n = new Date().getTime();\n        this.request(t, s, i).then((a)=>e(null, (0,_walletconnect_jsonrpc_utils__WEBPACK_IMPORTED_MODULE_4__.formatJsonRpcResult)(n, a))).catch((a)=>e(a, void 0));\n    }\n    async enable() {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        return this.session || await this.connect({\n            namespaces: this.namespaces,\n            optionalNamespaces: this.optionalNamespaces,\n            sessionProperties: this.sessionProperties\n        }), await this.requestAccounts();\n    }\n    async disconnect() {\n        var t;\n        if (!this.session) throw new Error(\"Please call connect() before enable()\");\n        await this.client.disconnect({\n            topic: (t = this.session) == null ? void 0 : t.topic,\n            reason: (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.getSdkError)(\"USER_DISCONNECTED\")\n        }), await this.cleanup();\n    }\n    async connect(t) {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        if (this.setNamespaces(t), await this.cleanupPendingPairings(), !t.skipPairing) return await this.pair(t.pairingTopic);\n    }\n    async authenticate(t, e) {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        this.setNamespaces(t), await this.cleanupPendingPairings();\n        const { uri: s, response: i } = await this.client.authenticate(t, e);\n        s && (this.uri = s, this.events.emit(\"display_uri\", s));\n        const n = await i();\n        if (this.session = n.session, this.session) {\n            const a = k(this.session.namespaces);\n            this.namespaces = $(this.namespaces, a), this.persist(\"namespaces\", this.namespaces), this.onConnect();\n        }\n        return n;\n    }\n    on(t, e) {\n        this.events.on(t, e);\n    }\n    once(t, e) {\n        this.events.once(t, e);\n    }\n    removeListener(t, e) {\n        this.events.removeListener(t, e);\n    }\n    off(t, e) {\n        this.events.off(t, e);\n    }\n    get isWalletConnect() {\n        return !0;\n    }\n    async pair(t) {\n        this.shouldAbortPairingAttempt = !1;\n        let e = 0;\n        do {\n            if (this.shouldAbortPairingAttempt) throw new Error(\"Pairing aborted\");\n            if (e >= this.maxPairingAttempts) throw new Error(\"Max auto pairing attempts reached\");\n            const { uri: s, approval: i } = await this.client.connect({\n                pairingTopic: t,\n                requiredNamespaces: this.namespaces,\n                optionalNamespaces: this.optionalNamespaces,\n                sessionProperties: this.sessionProperties\n            });\n            s && (this.uri = s, this.events.emit(\"display_uri\", s)), await i().then((n)=>{\n                this.session = n;\n                const a = k(n.namespaces);\n                this.namespaces = $(this.namespaces, a), this.persist(\"namespaces\", this.namespaces);\n            }).catch((n)=>{\n                if (n.message !== _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_7__.PROPOSAL_EXPIRY_MESSAGE) throw n;\n                e++;\n            });\n        }while (!this.session);\n        return this.onConnect(), this.session;\n    }\n    setDefaultChain(t, e) {\n        try {\n            if (!this.session) return;\n            const [s, i] = this.validateChain(t), n = this.getProvider(s);\n            n.name === f ? n.setDefaultChain(`${s}:${i}`, e) : n.setDefaultChain(i, e);\n        } catch (s) {\n            if (!/Please call connect/.test(s.message)) throw s;\n        }\n    }\n    async cleanupPendingPairings(t = {}) {\n        this.logger.info(\"Cleaning up inactive pairings...\");\n        const e = this.client.pairing.getAll();\n        if ((0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.isValidArray)(e)) {\n            for (const s of e)t.deletePairings ? this.client.core.expirer.set(s.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(s.topic);\n            this.logger.info(`Inactive pairings cleared: ${e.length}`);\n        }\n    }\n    abortPairingAttempt() {\n        this.shouldAbortPairingAttempt = !0;\n    }\n    async checkStorage() {\n        if (this.namespaces = await this.getFromStore(\"namespaces\"), this.optionalNamespaces = await this.getFromStore(\"optionalNamespaces\") || {}, this.client.session.length) {\n            const t = this.client.session.keys.length - 1;\n            this.session = this.client.session.get(this.client.session.keys[t]), this.createProviders();\n        }\n    }\n    async initialize() {\n        this.logger.trace(\"Initialized\"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();\n    }\n    async createClient() {\n        this.client = this.providerOpts.client || await _walletconnect_sign_client__WEBPACK_IMPORTED_MODULE_7__[\"default\"].init({\n            core: this.providerOpts.core,\n            logger: this.providerOpts.logger || D,\n            relayUrl: this.providerOpts.relayUrl || rt,\n            projectId: this.providerOpts.projectId,\n            metadata: this.providerOpts.metadata,\n            storageOptions: this.providerOpts.storageOptions,\n            storage: this.providerOpts.storage,\n            name: this.providerOpts.name,\n            customStoragePrefix: this.providerOpts.customStoragePrefix,\n            telemetryEnabled: this.providerOpts.telemetryEnabled\n        }), this.logger.trace(\"SignClient Initialized\");\n    }\n    createProviders() {\n        if (!this.client) throw new Error(\"Sign Client not initialized\");\n        if (!this.session) throw new Error(\"Session not initialized. Please call connect() before enable()\");\n        const t = [\n            ...new Set(Object.keys(this.session.namespaces).map((e)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.parseNamespaceKey)(e)))\n        ];\n        b(\"client\", this.client), b(\"events\", this.events), b(\"disableProviderPing\", this.disableProviderPing), t.forEach((e)=>{\n            if (!this.session) return;\n            const s = mt(e, this.session), i = U(s), n = $(this.namespaces, this.optionalNamespaces), a = A(w({}, n[e]), {\n                accounts: s,\n                chains: i\n            });\n            switch(e){\n                case \"eip155\":\n                    this.rpcProviders[e] = new Ht({\n                        namespace: a\n                    });\n                    break;\n                case \"algorand\":\n                    this.rpcProviders[e] = new bt({\n                        namespace: a\n                    });\n                    break;\n                case \"solana\":\n                    this.rpcProviders[e] = new $t({\n                        namespace: a\n                    });\n                    break;\n                case \"cosmos\":\n                    this.rpcProviders[e] = new Et({\n                        namespace: a\n                    });\n                    break;\n                case \"polkadot\":\n                    this.rpcProviders[e] = new ft({\n                        namespace: a\n                    });\n                    break;\n                case \"cip34\":\n                    this.rpcProviders[e] = new At({\n                        namespace: a\n                    });\n                    break;\n                case \"elrond\":\n                    this.rpcProviders[e] = new Nt({\n                        namespace: a\n                    });\n                    break;\n                case \"multiversx\":\n                    this.rpcProviders[e] = new yt({\n                        namespace: a\n                    });\n                    break;\n                case \"near\":\n                    this.rpcProviders[e] = new Ot({\n                        namespace: a\n                    });\n                    break;\n                case \"tezos\":\n                    this.rpcProviders[e] = new qt({\n                        namespace: a\n                    });\n                    break;\n                default:\n                    this.rpcProviders[f] ? this.rpcProviders[f].updateNamespace(a) : this.rpcProviders[f] = new Dt({\n                        namespace: a\n                    });\n            }\n        });\n    }\n    registerEventListeners() {\n        if (typeof this.client > \"u\") throw new Error(\"Sign Client is not initialized\");\n        this.client.on(\"session_ping\", (t)=>{\n            this.events.emit(\"session_ping\", t);\n        }), this.client.on(\"session_event\", (t)=>{\n            const { params: e } = t, { event: s } = e;\n            if (s.name === \"accountsChanged\") {\n                const i = s.data;\n                i && (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.isValidArray)(i) && this.events.emit(\"accountsChanged\", i.map(vt));\n            } else if (s.name === \"chainChanged\") {\n                const i = e.chainId, n = e.event.data, a = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.parseNamespaceKey)(i), c = E(i) !== E(n) ? `${a}:${E(n)}` : i;\n                this.onChainChanged(c);\n            } else this.events.emit(s.name, s.data);\n            this.events.emit(\"session_event\", t);\n        }), this.client.on(\"session_update\", ({ topic: t, params: e })=>{\n            var s;\n            const { namespaces: i } = e, n = (s = this.client) == null ? void 0 : s.session.get(t);\n            this.session = A(w({}, n), {\n                namespaces: i\n            }), this.onSessionUpdate(), this.events.emit(\"session_update\", {\n                topic: t,\n                params: e\n            });\n        }), this.client.on(\"session_delete\", async (t)=>{\n            await this.cleanup(), this.events.emit(\"session_delete\", t), this.events.emit(\"disconnect\", A(w({}, (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.getSdkError)(\"USER_DISCONNECTED\")), {\n                data: t.topic\n            }));\n        }), this.on(p.DEFAULT_CHAIN_CHANGED, (t)=>{\n            this.onChainChanged(t, !0);\n        });\n    }\n    getProvider(t) {\n        return this.rpcProviders[t] || this.rpcProviders[f];\n    }\n    onSessionUpdate() {\n        Object.keys(this.rpcProviders).forEach((t)=>{\n            var e;\n            this.getProvider(t).updateNamespace((e = this.session) == null ? void 0 : e.namespaces[t]);\n        });\n    }\n    setNamespaces(t) {\n        const { namespaces: e, optionalNamespaces: s, sessionProperties: i } = t;\n        e && Object.keys(e).length && (this.namespaces = e), s && Object.keys(s).length && (this.optionalNamespaces = s), this.sessionProperties = i, this.persist(\"namespaces\", e), this.persist(\"optionalNamespaces\", s);\n    }\n    validateChain(t) {\n        const [e, s] = t?.split(\":\") || [\n            \"\",\n            \"\"\n        ];\n        if (!this.namespaces || !Object.keys(this.namespaces).length) return [\n            e,\n            s\n        ];\n        if (e && !Object.keys(this.namespaces || {}).map((a)=>(0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.parseNamespaceKey)(a)).includes(e)) throw new Error(`Namespace '${e}' is not configured. Please call connect() first with namespace config.`);\n        if (e && s) return [\n            e,\n            s\n        ];\n        const i = (0,_walletconnect_utils__WEBPACK_IMPORTED_MODULE_6__.parseNamespaceKey)(Object.keys(this.namespaces)[0]), n = this.rpcProviders[i].getDefaultChain();\n        return [\n            i,\n            n\n        ];\n    }\n    async requestAccounts() {\n        const [t] = this.validateChain();\n        return await this.getProvider(t).requestAccounts();\n    }\n    onChainChanged(t, e = !1) {\n        if (!this.namespaces) return;\n        const [s, i] = this.validateChain(t);\n        i && (e || this.getProvider(s).setDefaultChain(i), this.namespaces[s] ? this.namespaces[s].defaultChain = i : this.namespaces[`${s}:${i}`] ? this.namespaces[`${s}:${i}`].defaultChain = i : this.namespaces[`${s}:${i}`] = {\n            defaultChain: i\n        }, this.persist(\"namespaces\", this.namespaces), this.events.emit(\"chainChanged\", i));\n    }\n    onConnect() {\n        this.createProviders(), this.events.emit(\"connect\", {\n            session: this.session\n        });\n    }\n    async cleanup() {\n        this.session = void 0, this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, this.persist(\"namespaces\", void 0), this.persist(\"optionalNamespaces\", void 0), this.persist(\"sessionProperties\", void 0), await this.cleanupPendingPairings({\n            deletePairings: !0\n        });\n    }\n    persist(t, e) {\n        this.client.core.storage.setItem(`${S}/${t}`, e);\n    }\n    async getFromStore(t) {\n        return await this.client.core.storage.getItem(`${S}/${t}`);\n    }\n}\nconst Tt = C;\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/universal-provider/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js":
/*!************************************************************!*\
  !*** ./node_modules/@walletconnect/utils/dist/index.es.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BASE10: () => (/* binding */ he),\n/* harmony export */   BASE16: () => (/* binding */ g),\n/* harmony export */   BASE64: () => (/* binding */ ye),\n/* harmony export */   BASE64URL: () => (/* binding */ sr),\n/* harmony export */   COLON: () => (/* binding */ ft),\n/* harmony export */   DEFAULT_DEPTH: () => (/* binding */ se),\n/* harmony export */   EMPTY_SPACE: () => (/* binding */ W),\n/* harmony export */   ENV_MAP: () => (/* binding */ y),\n/* harmony export */   INTERNAL_ERRORS: () => (/* binding */ _n),\n/* harmony export */   MemoryStore: () => (/* binding */ oo),\n/* harmony export */   ONE_THOUSAND: () => (/* binding */ pt),\n/* harmony export */   REACT_NATIVE_PRODUCT: () => (/* binding */ Me),\n/* harmony export */   RELAYER_DEFAULT_PROTOCOL: () => (/* binding */ Nn),\n/* harmony export */   SDK_ERRORS: () => (/* binding */ Un),\n/* harmony export */   SDK_TYPE: () => (/* binding */ Ke),\n/* harmony export */   SLASH: () => (/* binding */ Le),\n/* harmony export */   TYPE_0: () => (/* binding */ ge),\n/* harmony export */   TYPE_1: () => (/* binding */ D),\n/* harmony export */   TYPE_2: () => (/* binding */ M),\n/* harmony export */   UTF8: () => (/* binding */ k),\n/* harmony export */   addResourceToRecap: () => (/* binding */ yn),\n/* harmony export */   appendToQueryString: () => (/* binding */ Fe),\n/* harmony export */   assertType: () => (/* binding */ wt),\n/* harmony export */   assignAbilityToActions: () => (/* binding */ fe),\n/* harmony export */   base64Decode: () => (/* binding */ mn),\n/* harmony export */   base64Encode: () => (/* binding */ pn),\n/* harmony export */   buildApprovedNamespaces: () => (/* binding */ kr),\n/* harmony export */   buildAuthObject: () => (/* binding */ Qt),\n/* harmony export */   buildNamespacesFromAuth: () => (/* binding */ Dr),\n/* harmony export */   buildRecapStatement: () => (/* binding */ vn),\n/* harmony export */   calcExpiry: () => (/* binding */ Ut),\n/* harmony export */   capitalize: () => (/* binding */ $t),\n/* harmony export */   capitalizeWord: () => (/* binding */ ze),\n/* harmony export */   createDelayedPromise: () => (/* binding */ Tt),\n/* harmony export */   createEncodedRecap: () => (/* binding */ nr),\n/* harmony export */   createExpiringPromise: () => (/* binding */ Pt),\n/* harmony export */   createRecap: () => (/* binding */ hn),\n/* harmony export */   decodeRecap: () => (/* binding */ $),\n/* harmony export */   decodeTypeByte: () => (/* binding */ C),\n/* harmony export */   decodeTypeTwoEnvelope: () => (/* binding */ hr),\n/* harmony export */   decrypt: () => (/* binding */ mr),\n/* harmony export */   deriveSymKey: () => (/* binding */ ur),\n/* harmony export */   deserialize: () => (/* binding */ Y),\n/* harmony export */   encodeRecap: () => (/* binding */ z),\n/* harmony export */   encodeTypeByte: () => (/* binding */ be),\n/* harmony export */   encodeTypeTwoEnvelope: () => (/* binding */ pr),\n/* harmony export */   encrypt: () => (/* binding */ fr),\n/* harmony export */   engineEvent: () => (/* binding */ kt),\n/* harmony export */   enumify: () => (/* binding */ It),\n/* harmony export */   formatAccountId: () => (/* binding */ ke),\n/* harmony export */   formatAccountWithChain: () => (/* binding */ ct),\n/* harmony export */   formatChainId: () => (/* binding */ _e),\n/* harmony export */   formatDeeplinkUrl: () => (/* binding */ Ge),\n/* harmony export */   formatExpirerTarget: () => (/* binding */ ce),\n/* harmony export */   formatIdTarget: () => (/* binding */ At),\n/* harmony export */   formatMessage: () => (/* binding */ un),\n/* harmony export */   formatMessageContext: () => (/* binding */ Nt),\n/* harmony export */   formatRelayParams: () => (/* binding */ Rn),\n/* harmony export */   formatRelayRpcUrl: () => (/* binding */ bt),\n/* harmony export */   formatStatementFromRecap: () => (/* binding */ me),\n/* harmony export */   formatTopicTarget: () => (/* binding */ jt),\n/* harmony export */   formatUA: () => (/* binding */ He),\n/* harmony export */   formatUri: () => (/* binding */ Rr),\n/* harmony export */   fromBase64: () => (/* binding */ ue),\n/* harmony export */   generateKeyPair: () => (/* binding */ cr),\n/* harmony export */   generateRandomBytes32: () => (/* binding */ ar),\n/* harmony export */   getAccountsChains: () => (/* binding */ U),\n/* harmony export */   getAccountsFromNamespaces: () => (/* binding */ ut),\n/* harmony export */   getAddressFromAccount: () => (/* binding */ De),\n/* harmony export */   getAddressesFromAccounts: () => (/* binding */ at),\n/* harmony export */   getAppId: () => (/* binding */ yt),\n/* harmony export */   getAppMetadata: () => (/* binding */ gt),\n/* harmony export */   getBrowserOnlineStatus: () => (/* binding */ Hn),\n/* harmony export */   getChainFromAccount: () => (/* binding */ xe),\n/* harmony export */   getChainsFromAccounts: () => (/* binding */ Ve),\n/* harmony export */   getChainsFromNamespace: () => (/* binding */ H),\n/* harmony export */   getChainsFromNamespaces: () => (/* binding */ lt),\n/* harmony export */   getChainsFromRecap: () => (/* binding */ or),\n/* harmony export */   getChainsFromRequiredNamespaces: () => (/* binding */ dt),\n/* harmony export */   getCommonValuesInArrays: () => (/* binding */ ae),\n/* harmony export */   getCryptoKeyFromKeyData: () => (/* binding */ wn),\n/* harmony export */   getDecodedRecapFromResources: () => (/* binding */ ln),\n/* harmony export */   getDeepLink: () => (/* binding */ xt),\n/* harmony export */   getDidAddress: () => (/* binding */ de),\n/* harmony export */   getDidAddressSegments: () => (/* binding */ J),\n/* harmony export */   getDidChainId: () => (/* binding */ cn),\n/* harmony export */   getEnvironment: () => (/* binding */ A),\n/* harmony export */   getHttpUrl: () => (/* binding */ Et),\n/* harmony export */   getInternalError: () => (/* binding */ S),\n/* harmony export */   getJavascriptID: () => (/* binding */ Be),\n/* harmony export */   getJavascriptOS: () => (/* binding */ qe),\n/* harmony export */   getLastItems: () => (/* binding */ Je),\n/* harmony export */   getLinkModeURL: () => (/* binding */ Ir),\n/* harmony export */   getMethodsFromRecap: () => (/* binding */ rr),\n/* harmony export */   getNamespacedDidChainId: () => (/* binding */ an),\n/* harmony export */   getNamespacesChains: () => (/* binding */ Tn),\n/* harmony export */   getNamespacesEventsForChainId: () => (/* binding */ jn),\n/* harmony export */   getNamespacesFromAccounts: () => (/* binding */ Cn),\n/* harmony export */   getNamespacesMethodsForChainId: () => (/* binding */ Pn),\n/* harmony export */   getNodeOnlineStatus: () => (/* binding */ Jn),\n/* harmony export */   getReCapActions: () => (/* binding */ fn),\n/* harmony export */   getReactNativeOnlineStatus: () => (/* binding */ Wn),\n/* harmony export */   getRecapAbilitiesFromResource: () => (/* binding */ er),\n/* harmony export */   getRecapFromResources: () => (/* binding */ G),\n/* harmony export */   getRecapResource: () => (/* binding */ dn),\n/* harmony export */   getRelayClientMetadata: () => (/* binding */ vt),\n/* harmony export */   getRelayProtocolApi: () => (/* binding */ Or),\n/* harmony export */   getRelayProtocolName: () => (/* binding */ Nr),\n/* harmony export */   getRequiredNamespacesFromNamespaces: () => (/* binding */ _r),\n/* harmony export */   getSdkError: () => (/* binding */ _),\n/* harmony export */   getSearchParamFromURL: () => (/* binding */ Vt),\n/* harmony export */   getUniqueValues: () => (/* binding */ oe),\n/* harmony export */   handleDeeplinkRedirect: () => (/* binding */ Dt),\n/* harmony export */   hasOverlap: () => (/* binding */ I),\n/* harmony export */   hashKey: () => (/* binding */ lr),\n/* harmony export */   hashMessage: () => (/* binding */ dr),\n/* harmony export */   isAndroid: () => (/* binding */ mt),\n/* harmony export */   isBrowser: () => (/* binding */ V),\n/* harmony export */   isCaipNamespace: () => (/* binding */ we),\n/* harmony export */   isConformingNamespaces: () => (/* binding */ qn),\n/* harmony export */   isExpired: () => (/* binding */ _t),\n/* harmony export */   isIframe: () => (/* binding */ Ze),\n/* harmony export */   isIos: () => (/* binding */ ht),\n/* harmony export */   isNode: () => (/* binding */ ie),\n/* harmony export */   isOnline: () => (/* binding */ to),\n/* harmony export */   isProposalStruct: () => (/* binding */ Mr),\n/* harmony export */   isReactNative: () => (/* binding */ R),\n/* harmony export */   isRecap: () => (/* binding */ pe),\n/* harmony export */   isSessionCompatible: () => (/* binding */ xr),\n/* harmony export */   isSessionStruct: () => (/* binding */ Lr),\n/* harmony export */   isTelegram: () => (/* binding */ Qe),\n/* harmony export */   isTestRun: () => (/* binding */ Lt),\n/* harmony export */   isTypeOneEnvelope: () => (/* binding */ gr),\n/* harmony export */   isTypeTwoEnvelope: () => (/* binding */ vr),\n/* harmony export */   isUndefined: () => (/* binding */ T),\n/* harmony export */   isValidAccountId: () => (/* binding */ kn),\n/* harmony export */   isValidAccounts: () => (/* binding */ Vn),\n/* harmony export */   isValidActions: () => (/* binding */ Ln),\n/* harmony export */   isValidArray: () => (/* binding */ K),\n/* harmony export */   isValidChainId: () => (/* binding */ F),\n/* harmony export */   isValidChains: () => (/* binding */ Dn),\n/* harmony export */   isValidController: () => (/* binding */ Kr),\n/* harmony export */   isValidEip1271Signature: () => (/* binding */ tn),\n/* harmony export */   isValidEip191Signature: () => (/* binding */ nn),\n/* harmony export */   isValidErrorReason: () => (/* binding */ Wr),\n/* harmony export */   isValidEvent: () => (/* binding */ Gr),\n/* harmony export */   isValidId: () => (/* binding */ Br),\n/* harmony export */   isValidNamespaceAccounts: () => (/* binding */ Mn),\n/* harmony export */   isValidNamespaceActions: () => (/* binding */ Se),\n/* harmony export */   isValidNamespaceChains: () => (/* binding */ xn),\n/* harmony export */   isValidNamespaceMethodsOrEvents: () => (/* binding */ Oe),\n/* harmony export */   isValidNamespaces: () => (/* binding */ Kn),\n/* harmony export */   isValidNamespacesChainId: () => (/* binding */ Yr),\n/* harmony export */   isValidNamespacesEvent: () => (/* binding */ Zr),\n/* harmony export */   isValidNamespacesRequest: () => (/* binding */ Qr),\n/* harmony export */   isValidNumber: () => (/* binding */ Z),\n/* harmony export */   isValidObject: () => (/* binding */ Q),\n/* harmony export */   isValidParams: () => (/* binding */ Hr),\n/* harmony export */   isValidRecap: () => (/* binding */ N),\n/* harmony export */   isValidRelay: () => (/* binding */ Fn),\n/* harmony export */   isValidRelays: () => (/* binding */ qr),\n/* harmony export */   isValidRequest: () => (/* binding */ Jr),\n/* harmony export */   isValidRequestExpiry: () => (/* binding */ no),\n/* harmony export */   isValidRequiredNamespaces: () => (/* binding */ Fr),\n/* harmony export */   isValidResponse: () => (/* binding */ zr),\n/* harmony export */   isValidString: () => (/* binding */ b),\n/* harmony export */   isValidUrl: () => (/* binding */ Vr),\n/* harmony export */   mapEntries: () => (/* binding */ Rt),\n/* harmony export */   mapToObj: () => (/* binding */ Ot),\n/* harmony export */   mergeArrays: () => (/* binding */ O),\n/* harmony export */   mergeEncodedRecaps: () => (/* binding */ tr),\n/* harmony export */   mergeRecaps: () => (/* binding */ gn),\n/* harmony export */   normalizeNamespaces: () => (/* binding */ Ne),\n/* harmony export */   objToMap: () => (/* binding */ St),\n/* harmony export */   openDeeplink: () => (/* binding */ Ye),\n/* harmony export */   parseAccountId: () => (/* binding */ re),\n/* harmony export */   parseChainId: () => (/* binding */ te),\n/* harmony export */   parseContextNames: () => (/* binding */ We),\n/* harmony export */   parseExpirerTarget: () => (/* binding */ Ct),\n/* harmony export */   parseNamespaceKey: () => (/* binding */ An),\n/* harmony export */   parseRelayParams: () => (/* binding */ On),\n/* harmony export */   parseTopic: () => (/* binding */ Sn),\n/* harmony export */   parseUri: () => (/* binding */ Sr),\n/* harmony export */   populateAuthPayload: () => (/* binding */ Zt),\n/* harmony export */   recapHasResource: () => (/* binding */ Xt),\n/* harmony export */   serialize: () => (/* binding */ Ee),\n/* harmony export */   sleep: () => (/* binding */ Kt),\n/* harmony export */   subscribeToBrowserNetworkChange: () => (/* binding */ zn),\n/* harmony export */   subscribeToNetworkChange: () => (/* binding */ ro),\n/* harmony export */   subscribeToReactNativeNetworkChange: () => (/* binding */ Gn),\n/* harmony export */   toBase64: () => (/* binding */ Xe),\n/* harmony export */   uuidv4: () => (/* binding */ Mt),\n/* harmony export */   validateDecoding: () => (/* binding */ yr),\n/* harmony export */   validateEncoding: () => (/* binding */ En),\n/* harmony export */   validateSignedCacao: () => (/* binding */ Yt),\n/* harmony export */   verifyP256Jwt: () => (/* binding */ wr),\n/* harmony export */   verifySignature: () => (/* binding */ en)\n/* harmony export */ });\n/* harmony import */ var detect_browser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! detect-browser */ \"(ssr)/./node_modules/detect-browser/es/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/time */ \"(ssr)/./node_modules/@walletconnect/time/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_time__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\n/* harmony import */ var _walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @walletconnect/window-metadata */ \"(ssr)/./node_modules/@walletconnect/window-metadata/dist/cjs/index.js\");\n/* harmony import */ var _ethersproject_hash__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ethersproject/hash */ \"(ssr)/./node_modules/@ethersproject/hash/lib.esm/message.js\");\n/* harmony import */ var _ethersproject_transactions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ethersproject/transactions */ \"(ssr)/./node_modules/@ethersproject/transactions/lib.esm/index.js\");\n/* harmony import */ var _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @stablelib/chacha20poly1305 */ \"(ssr)/./node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js\");\n/* harmony import */ var _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @stablelib/hkdf */ \"(ssr)/./node_modules/@stablelib/hkdf/lib/hkdf.js\");\n/* harmony import */ var _stablelib_random__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @stablelib/random */ \"(ssr)/./node_modules/@stablelib/random/lib/random.js\");\n/* harmony import */ var _stablelib_sha256__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @stablelib/sha256 */ \"(ssr)/./node_modules/@stablelib/sha256/lib/sha256.js\");\n/* harmony import */ var _stablelib_x25519__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @stablelib/x25519 */ \"(ssr)/./node_modules/@stablelib/x25519/lib/x25519.js\");\n/* harmony import */ var uint8arrays__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uint8arrays */ \"(ssr)/./node_modules/uint8arrays/esm/src/index.js\");\n/* harmony import */ var elliptic__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! elliptic */ \"(ssr)/./node_modules/elliptic/lib/elliptic.js\");\n/* harmony import */ var elliptic__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(elliptic__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @walletconnect/relay-auth */ \"(ssr)/./node_modules/@walletconnect/relay-auth/dist/esm/index.js\");\n/* harmony import */ var _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @walletconnect/relay-api */ \"(ssr)/./node_modules/@walletconnect/relay-api/dist/index.es.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst B = \":\";\nfunction te(e) {\n    const [n, t] = e.split(B);\n    return {\n        namespace: n,\n        reference: t\n    };\n}\nfunction _e(e) {\n    const { namespace: n, reference: t } = e;\n    return [\n        n,\n        t\n    ].join(B);\n}\nfunction re(e) {\n    const [n, t, r] = e.split(B);\n    return {\n        namespace: n,\n        reference: t,\n        address: r\n    };\n}\nfunction ke(e) {\n    const { namespace: n, reference: t, address: r } = e;\n    return [\n        n,\n        t,\n        r\n    ].join(B);\n}\nfunction oe(e, n) {\n    const t = [];\n    return e.forEach((r)=>{\n        const o = n(r);\n        t.includes(o) || t.push(o);\n    }), t;\n}\nfunction De(e) {\n    const { address: n } = re(e);\n    return n;\n}\nfunction xe(e) {\n    const { namespace: n, reference: t } = re(e);\n    return _e({\n        namespace: n,\n        reference: t\n    });\n}\nfunction ct(e, n) {\n    const { namespace: t, reference: r } = te(n);\n    return ke({\n        namespace: t,\n        reference: r,\n        address: e\n    });\n}\nfunction at(e) {\n    return oe(e, De);\n}\nfunction Ve(e) {\n    return oe(e, xe);\n}\nfunction ut(e, n = []) {\n    const t = [];\n    return Object.keys(e).forEach((r)=>{\n        if (n.length && !n.includes(r)) return;\n        const o = e[r];\n        t.push(...o.accounts);\n    }), t;\n}\nfunction lt(e, n = []) {\n    const t = [];\n    return Object.keys(e).forEach((r)=>{\n        if (n.length && !n.includes(r)) return;\n        const o = e[r];\n        t.push(...Ve(o.accounts));\n    }), t;\n}\nfunction dt(e, n = []) {\n    const t = [];\n    return Object.keys(e).forEach((r)=>{\n        if (n.length && !n.includes(r)) return;\n        const o = e[r];\n        t.push(...H(r, o));\n    }), t;\n}\nfunction H(e, n) {\n    return e.includes(\":\") ? [\n        e\n    ] : n.chains || [];\n}\nconst Me = \"ReactNative\", y = {\n    reactNative: \"react-native\",\n    node: \"node\",\n    browser: \"browser\",\n    unknown: \"unknown\"\n}, W = \" \", ft = \":\", Le = \"/\", se = 2, pt = 1e3, Ke = \"js\";\nfunction ie() {\n    return typeof process < \"u\" && typeof process.versions < \"u\" && typeof process.versions.node < \"u\";\n}\nfunction R() {\n    return !(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)() && navigator.product === Me;\n}\nfunction mt() {\n    return R() && typeof global < \"u\" && typeof (global == null ? void 0 : global.Platform) < \"u\" && (global == null ? void 0 : global.Platform.OS) === \"android\";\n}\nfunction ht() {\n    return R() && typeof global < \"u\" && typeof (global == null ? void 0 : global.Platform) < \"u\" && (global == null ? void 0 : global.Platform.OS) === \"ios\";\n}\nfunction V() {\n    return !ie() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getNavigator)() && !!(0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)();\n}\nfunction A() {\n    return R() ? y.reactNative : ie() ? y.node : V() ? y.browser : y.unknown;\n}\nfunction yt() {\n    var e;\n    try {\n        return R() && typeof global < \"u\" && typeof (global == null ? void 0 : global.Application) < \"u\" ? (e = global.Application) == null ? void 0 : e.applicationId : void 0;\n    } catch  {\n        return;\n    }\n}\nfunction Fe(e, n) {\n    const t = new URLSearchParams(e);\n    for (const r of Object.keys(n).sort())if (n.hasOwnProperty(r)) {\n        const o = n[r];\n        o !== void 0 && t.set(r, o);\n    }\n    return t.toString();\n}\nfunction gt() {\n    return (0,_walletconnect_window_metadata__WEBPACK_IMPORTED_MODULE_2__.getWindowMetadata)() || {\n        name: \"\",\n        description: \"\",\n        url: \"\",\n        icons: [\n            \"\"\n        ]\n    };\n}\nfunction vt(e, n) {\n    var t;\n    const r = A(), o = {\n        protocol: e,\n        version: n,\n        env: r\n    };\n    return r === \"browser\" && (o.host = ((t = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)()) == null ? void 0 : t.host) || \"unknown\"), o;\n}\nfunction qe() {\n    if (A() === y.reactNative && typeof global < \"u\" && typeof (global == null ? void 0 : global.Platform) < \"u\") {\n        const { OS: t, Version: r } = global.Platform;\n        return [\n            t,\n            r\n        ].join(\"-\");\n    }\n    const e = (0,detect_browser__WEBPACK_IMPORTED_MODULE_12__.detect)();\n    if (e === null) return \"unknown\";\n    const n = e.os ? e.os.replace(\" \", \"\").toLowerCase() : \"unknown\";\n    return e.type === \"browser\" ? [\n        n,\n        e.name,\n        e.version\n    ].join(\"-\") : [\n        n,\n        e.version\n    ].join(\"-\");\n}\nfunction Be() {\n    var e;\n    const n = A();\n    return n === y.browser ? [\n        n,\n        ((e = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getLocation)()) == null ? void 0 : e.host) || \"unknown\"\n    ].join(\":\") : n;\n}\nfunction He(e, n, t) {\n    const r = qe(), o = Be();\n    return [\n        [\n            e,\n            n\n        ].join(\"-\"),\n        [\n            Ke,\n            t\n        ].join(\"-\"),\n        r,\n        o\n    ].join(\"/\");\n}\nfunction bt({ protocol: e, version: n, relayUrl: t, sdkVersion: r, auth: o, projectId: s, useOnCloseEvent: c, bundleId: a, packageName: d }) {\n    const i = t.split(\"?\"), l = He(e, n, r), u = {\n        auth: o,\n        ua: l,\n        projectId: s,\n        useOnCloseEvent: c || void 0,\n        packageName: d || void 0,\n        bundleId: a || void 0\n    }, f = Fe(i[1] || \"\", u);\n    return i[0] + \"?\" + f;\n}\nfunction Et(e) {\n    let n = (e.match(/^[^:]+(?=:\\/\\/)/gi) || [])[0];\n    const t = typeof n < \"u\" ? e.split(\"://\")[1] : e;\n    return n = n === \"wss\" ? \"https\" : \"http\", [\n        n,\n        t\n    ].join(\"://\");\n}\nfunction wt(e, n, t) {\n    if (!e[n] || typeof e[n] !== t) throw new Error(`Missing or invalid \"${n}\" param`);\n}\nfunction We(e, n = se) {\n    return Je(e.split(Le), n);\n}\nfunction Nt(e) {\n    return We(e).join(W);\n}\nfunction I(e, n) {\n    return e.filter((t)=>n.includes(t)).length === e.length;\n}\nfunction Je(e, n = se) {\n    return e.slice(Math.max(e.length - n, 0));\n}\nfunction Ot(e) {\n    return Object.fromEntries(e.entries());\n}\nfunction St(e) {\n    return new Map(Object.entries(e));\n}\nfunction Rt(e, n) {\n    const t = {};\n    return Object.keys(e).forEach((r)=>{\n        t[r] = n(e[r]);\n    }), t;\n}\nconst It = (e)=>e;\nfunction ze(e) {\n    return e.trim().replace(/^\\w/, (n)=>n.toUpperCase());\n}\nfunction $t(e) {\n    return e.split(W).map((n)=>ze(n)).join(W);\n}\nfunction Tt(e = _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES, n) {\n    const t = (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e || _walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.FIVE_MINUTES);\n    let r, o, s, c;\n    return {\n        resolve: (a)=>{\n            s && r && (clearTimeout(s), r(a), c = Promise.resolve(a));\n        },\n        reject: (a)=>{\n            s && o && (clearTimeout(s), o(a));\n        },\n        done: ()=>new Promise((a, d)=>{\n                if (c) return a(c);\n                s = setTimeout(()=>{\n                    const i = new Error(n);\n                    c = Promise.reject(i), d(i);\n                }, t), r = a, o = d;\n            })\n    };\n}\nfunction Pt(e, n, t) {\n    return new Promise(async (r, o)=>{\n        const s = setTimeout(()=>o(new Error(t)), n);\n        try {\n            const c = await e;\n            r(c);\n        } catch (c) {\n            o(c);\n        }\n        clearTimeout(s);\n    });\n}\nfunction ce(e, n) {\n    if (typeof n == \"string\" && n.startsWith(`${e}:`)) return n;\n    if (e.toLowerCase() === \"topic\") {\n        if (typeof n != \"string\") throw new Error('Value must be \"string\" for expirer target type: topic');\n        return `topic:${n}`;\n    } else if (e.toLowerCase() === \"id\") {\n        if (typeof n != \"number\") throw new Error('Value must be \"number\" for expirer target type: id');\n        return `id:${n}`;\n    }\n    throw new Error(`Unknown expirer target type: ${e}`);\n}\nfunction jt(e) {\n    return ce(\"topic\", e);\n}\nfunction At(e) {\n    return ce(\"id\", e);\n}\nfunction Ct(e) {\n    const [n, t] = e.split(\":\"), r = {\n        id: void 0,\n        topic: void 0\n    };\n    if (n === \"topic\" && typeof t == \"string\") r.topic = t;\n    else if (n === \"id\" && Number.isInteger(Number(t))) r.id = Number(t);\n    else throw new Error(`Invalid target, expected id:number or topic:string, got ${n}:${t}`);\n    return r;\n}\nfunction Ut(e, n) {\n    return (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.fromMiliseconds)((n || Date.now()) + (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e));\n}\nfunction _t(e) {\n    return Date.now() >= (0,_walletconnect_time__WEBPACK_IMPORTED_MODULE_0__.toMiliseconds)(e);\n}\nfunction kt(e, n) {\n    return `${e}${n ? `:${n}` : \"\"}`;\n}\nfunction O(e = [], n = []) {\n    return [\n        ...new Set([\n            ...e,\n            ...n\n        ])\n    ];\n}\nasync function Dt({ id: e, topic: n, wcDeepLink: t }) {\n    var r;\n    try {\n        if (!t) return;\n        const o = typeof t == \"string\" ? JSON.parse(t) : t, s = o?.href;\n        if (typeof s != \"string\") return;\n        const c = Ge(s, e, n), a = A();\n        if (a === y.browser) {\n            if (!((r = (0,_walletconnect_window_getters__WEBPACK_IMPORTED_MODULE_1__.getDocument)()) != null && r.hasFocus())) {\n                console.warn(\"Document does not have focus, skipping deeplink.\");\n                return;\n            }\n            Ye(c);\n        } else a === y.reactNative && typeof (global == null ? void 0 : global.Linking) < \"u\" && await global.Linking.openURL(c);\n    } catch (o) {\n        console.error(o);\n    }\n}\nfunction Ge(e, n, t) {\n    const r = `requestId=${n}&sessionTopic=${t}`;\n    e.endsWith(\"/\") && (e = e.slice(0, -1));\n    let o = `${e}`;\n    if (e.startsWith(\"https://t.me\")) {\n        const s = e.includes(\"?\") ? \"&startapp=\" : \"?startapp=\";\n        o = `${o}${s}${Xe(r, !0)}`;\n    } else o = `${o}/wc?${r}`;\n    return o;\n}\nfunction Ye(e) {\n    let n = \"_self\";\n    Ze() ? n = \"_top\" : (Qe() || e.startsWith(\"https://\") || e.startsWith(\"http://\")) && (n = \"_blank\"), window.open(e, n, \"noreferrer noopener\");\n}\nasync function xt(e, n) {\n    let t = \"\";\n    try {\n        if (V() && (t = localStorage.getItem(n), t)) return t;\n        t = await e.getItem(n);\n    } catch (r) {\n        console.error(r);\n    }\n    return t;\n}\nfunction ae(e, n) {\n    return e.filter((t)=>n.includes(t));\n}\nfunction Vt(e, n) {\n    if (!e.includes(n)) return null;\n    const t = e.split(/([&,?,=])/), r = t.indexOf(n);\n    return t[r + 2];\n}\nfunction Mt() {\n    return typeof crypto < \"u\" && crypto != null && crypto.randomUUID ? crypto.randomUUID() : \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/gu, (e)=>{\n        const n = Math.random() * 16 | 0;\n        return (e === \"x\" ? n : n & 3 | 8).toString(16);\n    });\n}\nfunction Lt() {\n    return typeof process < \"u\" && process.env.IS_VITEST === \"true\";\n}\nfunction Qe() {\n    return  false && (0);\n}\nfunction Ze() {\n    try {\n        return window.self !== window.top;\n    } catch  {\n        return !1;\n    }\n}\nfunction Xe(e, n = !1) {\n    const t = Buffer.from(e).toString(\"base64\");\n    return n ? t.replace(/[=]/g, \"\") : t;\n}\nfunction ue(e) {\n    return Buffer.from(e, \"base64\").toString(\"utf-8\");\n}\nfunction Kt(e) {\n    return new Promise((n)=>setTimeout(n, e));\n}\nconst Ft = \"https://rpc.walletconnect.org/v1\";\nasync function en(e, n, t, r, o, s) {\n    switch(t.t){\n        case \"eip191\":\n            return nn(e, n, t.s);\n        case \"eip1271\":\n            return await tn(e, n, t.s, r, o, s);\n        default:\n            throw new Error(`verifySignature failed: Attempted to verify CacaoSignature with unknown type: ${t.t}`);\n    }\n}\nfunction nn(e, n, t) {\n    return (0,_ethersproject_transactions__WEBPACK_IMPORTED_MODULE_13__.recoverAddress)((0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_14__.hashMessage)(n), t).toLowerCase() === e.toLowerCase();\n}\nasync function tn(e, n, t, r, o, s) {\n    const c = te(r);\n    if (!c.namespace || !c.reference) throw new Error(`isValidEip1271Signature failed: chainId must be in CAIP-2 format, received: ${r}`);\n    try {\n        const a = \"0x1626ba7e\", d = \"0000000000000000000000000000000000000000000000000000000000000040\", i = \"0000000000000000000000000000000000000000000000000000000000000041\", l = t.substring(2), u = (0,_ethersproject_hash__WEBPACK_IMPORTED_MODULE_14__.hashMessage)(n).substring(2), f = a + u + d + i + l, h = await fetch(`${s || Ft}/?chainId=${r}&projectId=${o}`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                id: qt(),\n                jsonrpc: \"2.0\",\n                method: \"eth_call\",\n                params: [\n                    {\n                        to: e,\n                        data: f\n                    },\n                    \"latest\"\n                ]\n            })\n        }), { result: p } = await h.json();\n        return p ? p.slice(0, a.length).toLowerCase() === a.toLowerCase() : !1;\n    } catch (a) {\n        return console.error(\"isValidEip1271Signature: \", a), !1;\n    }\n}\nfunction qt() {\n    return Date.now() + Math.floor(Math.random() * 1e3);\n}\nvar Bt = Object.defineProperty, Ht = Object.defineProperties, Wt = Object.getOwnPropertyDescriptors, rn = Object.getOwnPropertySymbols, Jt = Object.prototype.hasOwnProperty, zt = Object.prototype.propertyIsEnumerable, on = (e, n, t)=>n in e ? Bt(e, n, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : e[n] = t, le = (e, n)=>{\n    for(var t in n || (n = {}))Jt.call(n, t) && on(e, t, n[t]);\n    if (rn) for (var t of rn(n))zt.call(n, t) && on(e, t, n[t]);\n    return e;\n}, sn = (e, n)=>Ht(e, Wt(n));\nconst Gt = \"did:pkh:\", J = (e)=>e?.split(\":\"), cn = (e)=>{\n    const n = e && J(e);\n    if (n) return e.includes(Gt) ? n[3] : n[1];\n}, an = (e)=>{\n    const n = e && J(e);\n    if (n) return n[2] + \":\" + n[3];\n}, de = (e)=>{\n    const n = e && J(e);\n    if (n) return n.pop();\n};\nasync function Yt(e) {\n    const { cacao: n, projectId: t } = e, { s: r, p: o } = n, s = un(o, o.iss), c = de(o.iss);\n    return await en(c, s, r, an(o.iss), t);\n}\nconst un = (e, n)=>{\n    const t = `${e.domain} wants you to sign in with your Ethereum account:`, r = de(n);\n    if (!e.aud && !e.uri) throw new Error(\"Either `aud` or `uri` is required to construct the message\");\n    let o = e.statement || void 0;\n    const s = `URI: ${e.aud || e.uri}`, c = `Version: ${e.version}`, a = `Chain ID: ${cn(n)}`, d = `Nonce: ${e.nonce}`, i = `Issued At: ${e.iat}`, l = e.exp ? `Expiration Time: ${e.exp}` : void 0, u = e.nbf ? `Not Before: ${e.nbf}` : void 0, f = e.requestId ? `Request ID: ${e.requestId}` : void 0, h = e.resources ? `Resources:${e.resources.map((m)=>`\n- ${m}`).join(\"\")}` : void 0, p = G(e.resources);\n    if (p) {\n        const m = $(p);\n        o = me(o, m);\n    }\n    return [\n        t,\n        r,\n        \"\",\n        o,\n        \"\",\n        s,\n        c,\n        a,\n        d,\n        i,\n        l,\n        u,\n        f,\n        h\n    ].filter((m)=>m != null).join(`\n`);\n};\nfunction Qt(e, n, t) {\n    return t.includes(\"did:pkh:\") || (t = `did:pkh:${t}`), {\n        h: {\n            t: \"caip122\"\n        },\n        p: {\n            iss: t,\n            domain: e.domain,\n            aud: e.aud,\n            version: e.version,\n            nonce: e.nonce,\n            iat: e.iat,\n            statement: e.statement,\n            requestId: e.requestId,\n            resources: e.resources,\n            nbf: e.nbf,\n            exp: e.exp\n        },\n        s: n\n    };\n}\nfunction Zt(e) {\n    var n;\n    const { authPayload: t, chains: r, methods: o } = e, s = t.statement || \"\";\n    if (!(r != null && r.length)) return t;\n    const c = t.chains, a = ae(c, r);\n    if (!(a != null && a.length)) throw new Error(\"No supported chains\");\n    const d = ln(t.resources);\n    if (!d) return t;\n    N(d);\n    const i = dn(d, \"eip155\");\n    let l = t?.resources || [];\n    if (i != null && i.length) {\n        const u = fn(i), f = ae(u, o);\n        if (!(f != null && f.length)) throw new Error(`Supported methods don't satisfy the requested: ${JSON.stringify(u)}, supported: ${JSON.stringify(o)}`);\n        const h = fe(\"request\", f, {\n            chains: a\n        }), p = yn(d, \"eip155\", h);\n        l = ((n = t?.resources) == null ? void 0 : n.slice(0, -1)) || [], l.push(z(p));\n    }\n    return sn(le({}, t), {\n        statement: vn(s, G(l)),\n        chains: a,\n        resources: t != null && t.resources || l.length > 0 ? l : void 0\n    });\n}\nfunction ln(e) {\n    const n = G(e);\n    if (n && pe(n)) return $(n);\n}\nfunction Xt(e, n) {\n    var t;\n    return (t = e?.att) == null ? void 0 : t.hasOwnProperty(n);\n}\nfunction dn(e, n) {\n    var t, r;\n    return (t = e?.att) != null && t[n] ? Object.keys((r = e?.att) == null ? void 0 : r[n]) : [];\n}\nfunction er(e) {\n    return e?.map((n)=>Object.keys(n)) || [];\n}\nfunction fn(e) {\n    return e?.map((n)=>{\n        var t;\n        return (t = n.split(\"/\")) == null ? void 0 : t[1];\n    }) || [];\n}\nfunction pn(e) {\n    return Buffer.from(JSON.stringify(e)).toString(\"base64\");\n}\nfunction mn(e) {\n    return JSON.parse(Buffer.from(e, \"base64\").toString(\"utf-8\"));\n}\nfunction N(e) {\n    if (!e) throw new Error(\"No recap provided, value is undefined\");\n    if (!e.att) throw new Error(\"No `att` property found\");\n    const n = Object.keys(e.att);\n    if (!(n != null && n.length)) throw new Error(\"No resources found in `att` property\");\n    n.forEach((t)=>{\n        const r = e.att[t];\n        if (Array.isArray(r)) throw new Error(`Resource must be an object: ${t}`);\n        if (typeof r != \"object\") throw new Error(`Resource must be an object: ${t}`);\n        if (!Object.keys(r).length) throw new Error(`Resource object is empty: ${t}`);\n        Object.keys(r).forEach((o)=>{\n            const s = r[o];\n            if (!Array.isArray(s)) throw new Error(`Ability limits ${o} must be an array of objects, found: ${s}`);\n            if (!s.length) throw new Error(`Value of ${o} is empty array, must be an array with objects`);\n            s.forEach((c)=>{\n                if (typeof c != \"object\") throw new Error(`Ability limits (${o}) must be an array of objects, found: ${c}`);\n            });\n        });\n    });\n}\nfunction hn(e, n, t, r = {}) {\n    return t?.sort((o, s)=>o.localeCompare(s)), {\n        att: {\n            [e]: fe(n, t, r)\n        }\n    };\n}\nfunction yn(e, n, t) {\n    var r;\n    return e.att[n] = le({}, t), ((r = Object.keys(e.att)) == null ? void 0 : r.sort((o, s)=>o.localeCompare(s))).reduce((o, s)=>(o.att[s] = e.att[s], o), {\n        att: {}\n    });\n}\nfunction fe(e, n, t = {}) {\n    n = n?.sort((o, s)=>o.localeCompare(s));\n    const r = n.map((o)=>({\n            [`${e}/${o}`]: [\n                t\n            ]\n        }));\n    return Object.assign({}, ...r);\n}\nfunction z(e) {\n    return N(e), `urn:recap:${pn(e).replace(/=/g, \"\")}`;\n}\nfunction $(e) {\n    const n = mn(e.replace(\"urn:recap:\", \"\"));\n    return N(n), n;\n}\nfunction nr(e, n, t) {\n    const r = hn(e, n, t);\n    return z(r);\n}\nfunction pe(e) {\n    return e && e.includes(\"urn:recap:\");\n}\nfunction tr(e, n) {\n    const t = $(e), r = $(n), o = gn(t, r);\n    return z(o);\n}\nfunction gn(e, n) {\n    N(e), N(n);\n    const t = Object.keys(e.att).concat(Object.keys(n.att)).sort((o, s)=>o.localeCompare(s)), r = {\n        att: {}\n    };\n    return t.forEach((o)=>{\n        var s, c;\n        Object.keys(((s = e.att) == null ? void 0 : s[o]) || {}).concat(Object.keys(((c = n.att) == null ? void 0 : c[o]) || {})).sort((a, d)=>a.localeCompare(d)).forEach((a)=>{\n            var d, i;\n            r.att[o] = sn(le({}, r.att[o]), {\n                [a]: ((d = e.att[o]) == null ? void 0 : d[a]) || ((i = n.att[o]) == null ? void 0 : i[a])\n            });\n        });\n    }), r;\n}\nfunction me(e = \"\", n) {\n    N(n);\n    const t = \"I further authorize the stated URI to perform the following actions on my behalf: \";\n    if (e.includes(t)) return e;\n    const r = [];\n    let o = 0;\n    Object.keys(n.att).forEach((a)=>{\n        const d = Object.keys(n.att[a]).map((u)=>({\n                ability: u.split(\"/\")[0],\n                action: u.split(\"/\")[1]\n            }));\n        d.sort((u, f)=>u.action.localeCompare(f.action));\n        const i = {};\n        d.forEach((u)=>{\n            i[u.ability] || (i[u.ability] = []), i[u.ability].push(u.action);\n        });\n        const l = Object.keys(i).map((u)=>(o++, `(${o}) '${u}': '${i[u].join(\"', '\")}' for '${a}'.`));\n        r.push(l.join(\", \").replace(\".,\", \".\"));\n    });\n    const s = r.join(\" \"), c = `${t}${s}`;\n    return `${e ? e + \" \" : \"\"}${c}`;\n}\nfunction rr(e) {\n    var n;\n    const t = $(e);\n    N(t);\n    const r = (n = t.att) == null ? void 0 : n.eip155;\n    return r ? Object.keys(r).map((o)=>o.split(\"/\")[1]) : [];\n}\nfunction or(e) {\n    const n = $(e);\n    N(n);\n    const t = [];\n    return Object.values(n.att).forEach((r)=>{\n        Object.values(r).forEach((o)=>{\n            var s;\n            (s = o?.[0]) != null && s.chains && t.push(o[0].chains);\n        });\n    }), [\n        ...new Set(t.flat())\n    ];\n}\nfunction vn(e, n) {\n    if (!n) return e;\n    const t = $(n);\n    return N(t), me(e, t);\n}\nfunction G(e) {\n    if (!e) return;\n    const n = e?.[e.length - 1];\n    return pe(n) ? n : void 0;\n}\nconst he = \"base10\", g = \"base16\", ye = \"base64pad\", sr = \"base64url\", k = \"utf8\", ge = 0, D = 1, M = 2, ir = 0, bn = 1, L = 12, ve = 32;\nfunction cr() {\n    const e = _stablelib_x25519__WEBPACK_IMPORTED_MODULE_7__.generateKeyPair();\n    return {\n        privateKey: (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.toString)(e.secretKey, g),\n        publicKey: (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.toString)(e.publicKey, g)\n    };\n}\nfunction ar() {\n    const e = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_5__.randomBytes)(ve);\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.toString)(e, g);\n}\nfunction ur(e, n) {\n    const t = _stablelib_x25519__WEBPACK_IMPORTED_MODULE_7__.sharedKey((0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.fromString)(e, g), (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.fromString)(n, g), !0), r = new _stablelib_hkdf__WEBPACK_IMPORTED_MODULE_4__.HKDF(_stablelib_sha256__WEBPACK_IMPORTED_MODULE_6__.SHA256, t).expand(ve);\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.toString)(r, g);\n}\nfunction lr(e) {\n    const n = (0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_6__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.fromString)(e, g));\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.toString)(n, g);\n}\nfunction dr(e) {\n    const n = (0,_stablelib_sha256__WEBPACK_IMPORTED_MODULE_6__.hash)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.fromString)(e, k));\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.toString)(n, g);\n}\nfunction be(e) {\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.fromString)(`${e}`, he);\n}\nfunction C(e) {\n    return Number((0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.toString)(e, he));\n}\nfunction fr(e) {\n    const n = be(typeof e.type < \"u\" ? e.type : ge);\n    if (C(n) === D && typeof e.senderPublicKey > \"u\") throw new Error(\"Missing sender public key for type 1 envelope\");\n    const t = typeof e.senderPublicKey < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.fromString)(e.senderPublicKey, g) : void 0, r = typeof e.iv < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.fromString)(e.iv, g) : (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_5__.randomBytes)(L), o = new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_3__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.fromString)(e.symKey, g)).seal(r, (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.fromString)(e.message, k));\n    return Ee({\n        type: n,\n        sealed: o,\n        iv: r,\n        senderPublicKey: t,\n        encoding: e.encoding\n    });\n}\nfunction pr(e, n) {\n    const t = be(M), r = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_5__.randomBytes)(L), o = (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.fromString)(e, k);\n    return Ee({\n        type: t,\n        sealed: o,\n        iv: r,\n        encoding: n\n    });\n}\nfunction mr(e) {\n    const n = new _stablelib_chacha20poly1305__WEBPACK_IMPORTED_MODULE_3__.ChaCha20Poly1305((0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.fromString)(e.symKey, g)), { sealed: t, iv: r } = Y({\n        encoded: e.encoded,\n        encoding: e?.encoding\n    }), o = n.open(r, t);\n    if (o === null) throw new Error(\"Failed to decrypt\");\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.toString)(o, k);\n}\nfunction hr(e, n) {\n    const { sealed: t } = Y({\n        encoded: e,\n        encoding: n\n    });\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.toString)(t, k);\n}\nfunction Ee(e) {\n    const { encoding: n = ye } = e;\n    if (C(e.type) === M) return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.concat)([\n        e.type,\n        e.sealed\n    ]), n);\n    if (C(e.type) === D) {\n        if (typeof e.senderPublicKey > \"u\") throw new Error(\"Missing sender public key for type 1 envelope\");\n        return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.concat)([\n            e.type,\n            e.senderPublicKey,\n            e.iv,\n            e.sealed\n        ]), n);\n    }\n    return (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.toString)((0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.concat)([\n        e.type,\n        e.iv,\n        e.sealed\n    ]), n);\n}\nfunction Y(e) {\n    const { encoded: n, encoding: t = ye } = e, r = (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.fromString)(n, t), o = r.slice(ir, bn), s = bn;\n    if (C(o) === D) {\n        const i = s + ve, l = i + L, u = r.slice(s, i), f = r.slice(i, l), h = r.slice(l);\n        return {\n            type: o,\n            sealed: h,\n            iv: f,\n            senderPublicKey: u\n        };\n    }\n    if (C(o) === M) {\n        const i = r.slice(s), l = (0,_stablelib_random__WEBPACK_IMPORTED_MODULE_5__.randomBytes)(L);\n        return {\n            type: o,\n            sealed: i,\n            iv: l\n        };\n    }\n    const c = s + L, a = r.slice(s, c), d = r.slice(c);\n    return {\n        type: o,\n        sealed: d,\n        iv: a\n    };\n}\nfunction yr(e, n) {\n    const t = Y({\n        encoded: e,\n        encoding: n?.encoding\n    });\n    return En({\n        type: C(t.type),\n        senderPublicKey: typeof t.senderPublicKey < \"u\" ? (0,uint8arrays__WEBPACK_IMPORTED_MODULE_8__.toString)(t.senderPublicKey, g) : void 0,\n        receiverPublicKey: n?.receiverPublicKey\n    });\n}\nfunction En(e) {\n    const n = e?.type || ge;\n    if (n === D) {\n        if (typeof e?.senderPublicKey > \"u\") throw new Error(\"missing sender public key\");\n        if (typeof e?.receiverPublicKey > \"u\") throw new Error(\"missing receiver public key\");\n    }\n    return {\n        type: n,\n        senderPublicKey: e?.senderPublicKey,\n        receiverPublicKey: e?.receiverPublicKey\n    };\n}\nfunction gr(e) {\n    return e.type === D && typeof e.senderPublicKey == \"string\" && typeof e.receiverPublicKey == \"string\";\n}\nfunction vr(e) {\n    return e.type === M;\n}\nfunction wn(e) {\n    return new elliptic__WEBPACK_IMPORTED_MODULE_9__.ec(\"p256\").keyFromPublic({\n        x: Buffer.from(e.x, \"base64\").toString(\"hex\"),\n        y: Buffer.from(e.y, \"base64\").toString(\"hex\")\n    }, \"hex\");\n}\nfunction br(e) {\n    let n = e.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    const t = n.length % 4;\n    return t > 0 && (n += \"=\".repeat(4 - t)), n;\n}\nfunction Er(e) {\n    return Buffer.from(br(e), \"base64\");\n}\nfunction wr(e, n) {\n    const [t, r, o] = e.split(\".\"), s = Er(o);\n    if (s.length !== 64) throw new Error(\"Invalid signature length\");\n    const c = s.slice(0, 32).toString(\"hex\"), a = s.slice(32, 64).toString(\"hex\"), d = `${t}.${r}`, i = new _stablelib_sha256__WEBPACK_IMPORTED_MODULE_6__.SHA256().update(Buffer.from(d)).digest(), l = wn(n), u = Buffer.from(i).toString(\"hex\");\n    if (!l.verify(u, {\n        r: c,\n        s: a\n    })) throw new Error(\"Invalid signature\");\n    return (0,_walletconnect_relay_auth__WEBPACK_IMPORTED_MODULE_10__.decodeJWT)(e).payload;\n}\nconst Nn = \"irn\";\nfunction Nr(e) {\n    return e?.relay || {\n        protocol: Nn\n    };\n}\nfunction Or(e) {\n    const n = _walletconnect_relay_api__WEBPACK_IMPORTED_MODULE_11__.RELAY_JSONRPC[e];\n    if (typeof n > \"u\") throw new Error(`Relay Protocol not supported: ${e}`);\n    return n;\n}\nfunction On(e, n = \"-\") {\n    const t = {}, r = \"relay\" + n;\n    return Object.keys(e).forEach((o)=>{\n        if (o.startsWith(r)) {\n            const s = o.replace(r, \"\"), c = e[o];\n            t[s] = c;\n        }\n    }), t;\n}\nfunction Sr(e) {\n    if (!e.includes(\"wc:\")) {\n        const i = ue(e);\n        i != null && i.includes(\"wc:\") && (e = i);\n    }\n    e = e.includes(\"wc://\") ? e.replace(\"wc://\", \"\") : e, e = e.includes(\"wc:\") ? e.replace(\"wc:\", \"\") : e;\n    const n = e.indexOf(\":\"), t = e.indexOf(\"?\") !== -1 ? e.indexOf(\"?\") : void 0, r = e.substring(0, n), o = e.substring(n + 1, t).split(\"@\"), s = typeof t < \"u\" ? e.substring(t) : \"\", c = new URLSearchParams(s), a = {};\n    c.forEach((i, l)=>{\n        a[l] = i;\n    });\n    const d = typeof a.methods == \"string\" ? a.methods.split(\",\") : void 0;\n    return {\n        protocol: r,\n        topic: Sn(o[0]),\n        version: parseInt(o[1], 10),\n        symKey: a.symKey,\n        relay: On(a),\n        methods: d,\n        expiryTimestamp: a.expiryTimestamp ? parseInt(a.expiryTimestamp, 10) : void 0\n    };\n}\nfunction Sn(e) {\n    return e.startsWith(\"//\") ? e.substring(2) : e;\n}\nfunction Rn(e, n = \"-\") {\n    const t = \"relay\", r = {};\n    return Object.keys(e).forEach((o)=>{\n        const s = t + n + o;\n        e[o] && (r[s] = e[o]);\n    }), r;\n}\nfunction Rr(e) {\n    const n = new URLSearchParams, t = Rn(e.relay);\n    Object.keys(t).sort().forEach((o)=>{\n        n.set(o, t[o]);\n    }), n.set(\"symKey\", e.symKey), e.expiryTimestamp && n.set(\"expiryTimestamp\", e.expiryTimestamp.toString()), e.methods && n.set(\"methods\", e.methods.join(\",\"));\n    const r = n.toString();\n    return `${e.protocol}:${e.topic}@${e.version}?${r}`;\n}\nfunction Ir(e, n, t) {\n    return `${e}?wc_ev=${t}&topic=${n}`;\n}\nvar $r = Object.defineProperty, Tr = Object.defineProperties, Pr = Object.getOwnPropertyDescriptors, In = Object.getOwnPropertySymbols, jr = Object.prototype.hasOwnProperty, Ar = Object.prototype.propertyIsEnumerable, $n = (e, n, t)=>n in e ? $r(e, n, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: t\n    }) : e[n] = t, Cr = (e, n)=>{\n    for(var t in n || (n = {}))jr.call(n, t) && $n(e, t, n[t]);\n    if (In) for (var t of In(n))Ar.call(n, t) && $n(e, t, n[t]);\n    return e;\n}, Ur = (e, n)=>Tr(e, Pr(n));\nfunction U(e) {\n    const n = [];\n    return e.forEach((t)=>{\n        const [r, o] = t.split(\":\");\n        n.push(`${r}:${o}`);\n    }), n;\n}\nfunction Tn(e) {\n    const n = [];\n    return Object.values(e).forEach((t)=>{\n        n.push(...U(t.accounts));\n    }), n;\n}\nfunction Pn(e, n) {\n    const t = [];\n    return Object.values(e).forEach((r)=>{\n        U(r.accounts).includes(n) && t.push(...r.methods);\n    }), t;\n}\nfunction jn(e, n) {\n    const t = [];\n    return Object.values(e).forEach((r)=>{\n        U(r.accounts).includes(n) && t.push(...r.events);\n    }), t;\n}\nfunction _r(e, n) {\n    const t = Kn(e, n);\n    if (t) throw new Error(t.message);\n    const r = {};\n    for (const [o, s] of Object.entries(e))r[o] = {\n        methods: s.methods,\n        events: s.events,\n        chains: s.accounts.map((c)=>`${c.split(\":\")[0]}:${c.split(\":\")[1]}`)\n    };\n    return r;\n}\nfunction kr(e) {\n    const { proposal: { requiredNamespaces: n, optionalNamespaces: t = {} }, supportedNamespaces: r } = e, o = Ne(n), s = Ne(t), c = {};\n    Object.keys(r).forEach((i)=>{\n        const l = r[i].chains, u = r[i].methods, f = r[i].events, h = r[i].accounts;\n        l.forEach((p)=>{\n            if (!h.some((m)=>m.includes(p))) throw new Error(`No accounts provided for chain ${p} in namespace ${i}`);\n        }), c[i] = {\n            chains: l,\n            methods: u,\n            events: f,\n            accounts: h\n        };\n    });\n    const a = qn(n, c, \"approve()\");\n    if (a) throw new Error(a.message);\n    const d = {};\n    return !Object.keys(n).length && !Object.keys(t).length ? c : (Object.keys(o).forEach((i)=>{\n        const l = r[i].chains.filter((p)=>{\n            var m, E;\n            return (E = (m = o[i]) == null ? void 0 : m.chains) == null ? void 0 : E.includes(p);\n        }), u = r[i].methods.filter((p)=>{\n            var m, E;\n            return (E = (m = o[i]) == null ? void 0 : m.methods) == null ? void 0 : E.includes(p);\n        }), f = r[i].events.filter((p)=>{\n            var m, E;\n            return (E = (m = o[i]) == null ? void 0 : m.events) == null ? void 0 : E.includes(p);\n        }), h = l.map((p)=>r[i].accounts.filter((m)=>m.includes(`${p}:`))).flat();\n        d[i] = {\n            chains: l,\n            methods: u,\n            events: f,\n            accounts: h\n        };\n    }), Object.keys(s).forEach((i)=>{\n        var l, u, f, h, p, m;\n        if (!r[i]) return;\n        const E = (u = (l = s[i]) == null ? void 0 : l.chains) == null ? void 0 : u.filter((P)=>r[i].chains.includes(P)), Yn = r[i].methods.filter((P)=>{\n            var j, x;\n            return (x = (j = s[i]) == null ? void 0 : j.methods) == null ? void 0 : x.includes(P);\n        }), Qn = r[i].events.filter((P)=>{\n            var j, x;\n            return (x = (j = s[i]) == null ? void 0 : j.events) == null ? void 0 : x.includes(P);\n        }), Zn = E?.map((P)=>r[i].accounts.filter((j)=>j.includes(`${P}:`))).flat();\n        d[i] = {\n            chains: O((f = d[i]) == null ? void 0 : f.chains, E),\n            methods: O((h = d[i]) == null ? void 0 : h.methods, Yn),\n            events: O((p = d[i]) == null ? void 0 : p.events, Qn),\n            accounts: O((m = d[i]) == null ? void 0 : m.accounts, Zn)\n        };\n    }), d);\n}\nfunction we(e) {\n    return e.includes(\":\");\n}\nfunction An(e) {\n    return we(e) ? e.split(\":\")[0] : e;\n}\nfunction Ne(e) {\n    var n, t, r;\n    const o = {};\n    if (!Q(e)) return o;\n    for (const [s, c] of Object.entries(e)){\n        const a = we(s) ? [\n            s\n        ] : c.chains, d = c.methods || [], i = c.events || [], l = An(s);\n        o[l] = Ur(Cr({}, o[l]), {\n            chains: O(a, (n = o[l]) == null ? void 0 : n.chains),\n            methods: O(d, (t = o[l]) == null ? void 0 : t.methods),\n            events: O(i, (r = o[l]) == null ? void 0 : r.events)\n        });\n    }\n    return o;\n}\nfunction Cn(e) {\n    const n = {};\n    return e?.forEach((t)=>{\n        const [r, o] = t.split(\":\");\n        n[r] || (n[r] = {\n            accounts: [],\n            chains: [],\n            events: []\n        }), n[r].accounts.push(t), n[r].chains.push(`${r}:${o}`);\n    }), n;\n}\nfunction Dr(e, n) {\n    n = n.map((r)=>r.replace(\"did:pkh:\", \"\"));\n    const t = Cn(n);\n    for (const [r, o] of Object.entries(t))o.methods ? o.methods = O(o.methods, e) : o.methods = e, o.events = [\n        \"chainChanged\",\n        \"accountsChanged\"\n    ];\n    return t;\n}\nconst Un = {\n    INVALID_METHOD: {\n        message: \"Invalid method.\",\n        code: 1001\n    },\n    INVALID_EVENT: {\n        message: \"Invalid event.\",\n        code: 1002\n    },\n    INVALID_UPDATE_REQUEST: {\n        message: \"Invalid update request.\",\n        code: 1003\n    },\n    INVALID_EXTEND_REQUEST: {\n        message: \"Invalid extend request.\",\n        code: 1004\n    },\n    INVALID_SESSION_SETTLE_REQUEST: {\n        message: \"Invalid session settle request.\",\n        code: 1005\n    },\n    UNAUTHORIZED_METHOD: {\n        message: \"Unauthorized method.\",\n        code: 3001\n    },\n    UNAUTHORIZED_EVENT: {\n        message: \"Unauthorized event.\",\n        code: 3002\n    },\n    UNAUTHORIZED_UPDATE_REQUEST: {\n        message: \"Unauthorized update request.\",\n        code: 3003\n    },\n    UNAUTHORIZED_EXTEND_REQUEST: {\n        message: \"Unauthorized extend request.\",\n        code: 3004\n    },\n    USER_REJECTED: {\n        message: \"User rejected.\",\n        code: 5e3\n    },\n    USER_REJECTED_CHAINS: {\n        message: \"User rejected chains.\",\n        code: 5001\n    },\n    USER_REJECTED_METHODS: {\n        message: \"User rejected methods.\",\n        code: 5002\n    },\n    USER_REJECTED_EVENTS: {\n        message: \"User rejected events.\",\n        code: 5003\n    },\n    UNSUPPORTED_CHAINS: {\n        message: \"Unsupported chains.\",\n        code: 5100\n    },\n    UNSUPPORTED_METHODS: {\n        message: \"Unsupported methods.\",\n        code: 5101\n    },\n    UNSUPPORTED_EVENTS: {\n        message: \"Unsupported events.\",\n        code: 5102\n    },\n    UNSUPPORTED_ACCOUNTS: {\n        message: \"Unsupported accounts.\",\n        code: 5103\n    },\n    UNSUPPORTED_NAMESPACE_KEY: {\n        message: \"Unsupported namespace key.\",\n        code: 5104\n    },\n    USER_DISCONNECTED: {\n        message: \"User disconnected.\",\n        code: 6e3\n    },\n    SESSION_SETTLEMENT_FAILED: {\n        message: \"Session settlement failed.\",\n        code: 7e3\n    },\n    WC_METHOD_UNSUPPORTED: {\n        message: \"Unsupported wc_ method.\",\n        code: 10001\n    }\n}, _n = {\n    NOT_INITIALIZED: {\n        message: \"Not initialized.\",\n        code: 1\n    },\n    NO_MATCHING_KEY: {\n        message: \"No matching key.\",\n        code: 2\n    },\n    RESTORE_WILL_OVERRIDE: {\n        message: \"Restore will override.\",\n        code: 3\n    },\n    RESUBSCRIBED: {\n        message: \"Resubscribed.\",\n        code: 4\n    },\n    MISSING_OR_INVALID: {\n        message: \"Missing or invalid.\",\n        code: 5\n    },\n    EXPIRED: {\n        message: \"Expired.\",\n        code: 6\n    },\n    UNKNOWN_TYPE: {\n        message: \"Unknown type.\",\n        code: 7\n    },\n    MISMATCHED_TOPIC: {\n        message: \"Mismatched topic.\",\n        code: 8\n    },\n    NON_CONFORMING_NAMESPACES: {\n        message: \"Non conforming namespaces.\",\n        code: 9\n    }\n};\nfunction S(e, n) {\n    const { message: t, code: r } = _n[e];\n    return {\n        message: n ? `${t} ${n}` : t,\n        code: r\n    };\n}\nfunction _(e, n) {\n    const { message: t, code: r } = Un[e];\n    return {\n        message: n ? `${t} ${n}` : t,\n        code: r\n    };\n}\nfunction K(e, n) {\n    return Array.isArray(e) ? typeof n < \"u\" && e.length ? e.every(n) : !0 : !1;\n}\nfunction Q(e) {\n    return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length;\n}\nfunction T(e) {\n    return typeof e > \"u\";\n}\nfunction b(e, n) {\n    return n && T(e) ? !0 : typeof e == \"string\" && !!e.trim().length;\n}\nfunction Z(e, n) {\n    return n && T(e) ? !0 : typeof e == \"number\" && !isNaN(e);\n}\nfunction xr(e, n) {\n    const { requiredNamespaces: t } = n, r = Object.keys(e.namespaces), o = Object.keys(t);\n    let s = !0;\n    return I(o, r) ? (r.forEach((c)=>{\n        const { accounts: a, methods: d, events: i } = e.namespaces[c], l = U(a), u = t[c];\n        (!I(H(c, u), l) || !I(u.methods, d) || !I(u.events, i)) && (s = !1);\n    }), s) : !1;\n}\nfunction F(e) {\n    return b(e, !1) && e.includes(\":\") ? e.split(\":\").length === 2 : !1;\n}\nfunction kn(e) {\n    if (b(e, !1) && e.includes(\":\")) {\n        const n = e.split(\":\");\n        if (n.length === 3) {\n            const t = n[0] + \":\" + n[1];\n            return !!n[2] && F(t);\n        }\n    }\n    return !1;\n}\nfunction Vr(e) {\n    function n(t) {\n        try {\n            return typeof new URL(t) < \"u\";\n        } catch  {\n            return !1;\n        }\n    }\n    try {\n        if (b(e, !1)) {\n            if (n(e)) return !0;\n            const t = ue(e);\n            return n(t);\n        }\n    } catch  {}\n    return !1;\n}\nfunction Mr(e) {\n    var n;\n    return (n = e?.proposer) == null ? void 0 : n.publicKey;\n}\nfunction Lr(e) {\n    return e?.topic;\n}\nfunction Kr(e, n) {\n    let t = null;\n    return b(e?.publicKey, !1) || (t = S(\"MISSING_OR_INVALID\", `${n} controller public key should be a string`)), t;\n}\nfunction Oe(e) {\n    let n = !0;\n    return K(e) ? e.length && (n = e.every((t)=>b(t, !1))) : n = !1, n;\n}\nfunction Dn(e, n, t) {\n    let r = null;\n    return K(n) && n.length ? n.forEach((o)=>{\n        r || F(o) || (r = _(\"UNSUPPORTED_CHAINS\", `${t}, chain ${o} should be a string and conform to \"namespace:chainId\" format`));\n    }) : F(e) || (r = _(\"UNSUPPORTED_CHAINS\", `${t}, chains must be defined as \"namespace:chainId\" e.g. \"eip155:1\": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: [\"eip155:1\", \"eip155:5\"] }`)), r;\n}\nfunction xn(e, n, t) {\n    let r = null;\n    return Object.entries(e).forEach(([o, s])=>{\n        if (r) return;\n        const c = Dn(o, H(o, s), `${n} ${t}`);\n        c && (r = c);\n    }), r;\n}\nfunction Vn(e, n) {\n    let t = null;\n    return K(e) ? e.forEach((r)=>{\n        t || kn(r) || (t = _(\"UNSUPPORTED_ACCOUNTS\", `${n}, account ${r} should be a string and conform to \"namespace:chainId:address\" format`));\n    }) : t = _(\"UNSUPPORTED_ACCOUNTS\", `${n}, accounts should be an array of strings conforming to \"namespace:chainId:address\" format`), t;\n}\nfunction Mn(e, n) {\n    let t = null;\n    return Object.values(e).forEach((r)=>{\n        if (t) return;\n        const o = Vn(r?.accounts, `${n} namespace`);\n        o && (t = o);\n    }), t;\n}\nfunction Ln(e, n) {\n    let t = null;\n    return Oe(e?.methods) ? Oe(e?.events) || (t = _(\"UNSUPPORTED_EVENTS\", `${n}, events should be an array of strings or empty array for no events`)) : t = _(\"UNSUPPORTED_METHODS\", `${n}, methods should be an array of strings or empty array for no methods`), t;\n}\nfunction Se(e, n) {\n    let t = null;\n    return Object.values(e).forEach((r)=>{\n        if (t) return;\n        const o = Ln(r, `${n}, namespace`);\n        o && (t = o);\n    }), t;\n}\nfunction Fr(e, n, t) {\n    let r = null;\n    if (e && Q(e)) {\n        const o = Se(e, n);\n        o && (r = o);\n        const s = xn(e, n, t);\n        s && (r = s);\n    } else r = S(\"MISSING_OR_INVALID\", `${n}, ${t} should be an object with data`);\n    return r;\n}\nfunction Kn(e, n) {\n    let t = null;\n    if (e && Q(e)) {\n        const r = Se(e, n);\n        r && (t = r);\n        const o = Mn(e, n);\n        o && (t = o);\n    } else t = S(\"MISSING_OR_INVALID\", `${n}, namespaces should be an object with data`);\n    return t;\n}\nfunction Fn(e) {\n    return b(e.protocol, !0);\n}\nfunction qr(e, n) {\n    let t = !1;\n    return n && !e ? t = !0 : e && K(e) && e.length && e.forEach((r)=>{\n        t = Fn(r);\n    }), t;\n}\nfunction Br(e) {\n    return typeof e == \"number\";\n}\nfunction Hr(e) {\n    return typeof e < \"u\" && typeof e !== null;\n}\nfunction Wr(e) {\n    return !(!e || typeof e != \"object\" || !e.code || !Z(e.code, !1) || !e.message || !b(e.message, !1));\n}\nfunction Jr(e) {\n    return !(T(e) || !b(e.method, !1));\n}\nfunction zr(e) {\n    return !(T(e) || T(e.result) && T(e.error) || !Z(e.id, !1) || !b(e.jsonrpc, !1));\n}\nfunction Gr(e) {\n    return !(T(e) || !b(e.name, !1));\n}\nfunction Yr(e, n) {\n    return !(!F(n) || !Tn(e).includes(n));\n}\nfunction Qr(e, n, t) {\n    return b(t, !1) ? Pn(e, n).includes(t) : !1;\n}\nfunction Zr(e, n, t) {\n    return b(t, !1) ? jn(e, n).includes(t) : !1;\n}\nfunction qn(e, n, t) {\n    let r = null;\n    const o = Xr(e), s = eo(n), c = Object.keys(o), a = Object.keys(s), d = Bn(Object.keys(e)), i = Bn(Object.keys(n)), l = d.filter((u)=>!i.includes(u));\n    return l.length && (r = S(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces keys don't satisfy requiredNamespaces.\n      Required: ${l.toString()}\n      Received: ${Object.keys(n).toString()}`)), I(c, a) || (r = S(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces chains don't satisfy required namespaces.\n      Required: ${c.toString()}\n      Approved: ${a.toString()}`)), Object.keys(n).forEach((u)=>{\n        if (!u.includes(\":\") || r) return;\n        const f = U(n[u].accounts);\n        f.includes(u) || (r = S(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces accounts don't satisfy namespace accounts for ${u}\n        Required: ${u}\n        Approved: ${f.toString()}`));\n    }), c.forEach((u)=>{\n        r || (I(o[u].methods, s[u].methods) ? I(o[u].events, s[u].events) || (r = S(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces events don't satisfy namespace events for ${u}`)) : r = S(\"NON_CONFORMING_NAMESPACES\", `${t} namespaces methods don't satisfy namespace methods for ${u}`));\n    }), r;\n}\nfunction Xr(e) {\n    const n = {};\n    return Object.keys(e).forEach((t)=>{\n        var r;\n        t.includes(\":\") ? n[t] = e[t] : (r = e[t].chains) == null || r.forEach((o)=>{\n            n[o] = {\n                methods: e[t].methods,\n                events: e[t].events\n            };\n        });\n    }), n;\n}\nfunction Bn(e) {\n    return [\n        ...new Set(e.map((n)=>n.includes(\":\") ? n.split(\":\")[0] : n))\n    ];\n}\nfunction eo(e) {\n    const n = {};\n    return Object.keys(e).forEach((t)=>{\n        if (t.includes(\":\")) n[t] = e[t];\n        else {\n            const r = U(e[t].accounts);\n            r?.forEach((o)=>{\n                n[o] = {\n                    accounts: e[t].accounts.filter((s)=>s.includes(`${o}:`)),\n                    methods: e[t].methods,\n                    events: e[t].events\n                };\n            });\n        }\n    }), n;\n}\nfunction no(e, n) {\n    return Z(e, !1) && e <= n.max && e >= n.min;\n}\nfunction to() {\n    const e = A();\n    return new Promise((n)=>{\n        switch(e){\n            case y.browser:\n                n(Hn());\n                break;\n            case y.reactNative:\n                n(Wn());\n                break;\n            case y.node:\n                n(Jn());\n                break;\n            default:\n                n(!0);\n        }\n    });\n}\nfunction Hn() {\n    return V() && navigator?.onLine;\n}\nasync function Wn() {\n    if (R() && typeof global < \"u\" && global != null && global.NetInfo) {\n        const e = await (global == null ? void 0 : global.NetInfo.fetch());\n        return e?.isConnected;\n    }\n    return !0;\n}\nfunction Jn() {\n    return !0;\n}\nfunction ro(e) {\n    switch(A()){\n        case y.browser:\n            zn(e);\n            break;\n        case y.reactNative:\n            Gn(e);\n            break;\n        case y.node:\n            break;\n    }\n}\nfunction zn(e) {\n    !R() && V() && (window.addEventListener(\"online\", ()=>e(!0)), window.addEventListener(\"offline\", ()=>e(!1)));\n}\nfunction Gn(e) {\n    R() && typeof global < \"u\" && global != null && global.NetInfo && global?.NetInfo.addEventListener((n)=>e(n?.isConnected));\n}\nconst Re = {};\nclass oo {\n    static get(n) {\n        return Re[n];\n    }\n    static set(n, t) {\n        Re[n] = t;\n    }\n    static delete(n) {\n        delete Re[n];\n    }\n}\n //# sourceMappingURL=index.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/utils/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@walletconnect/window-getters/dist/cjs/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;\nfunction getFromWindow(name) {\n    let res = undefined;\n    if (false) {}\n    return res;\n}\nexports.getFromWindow = getFromWindow;\nfunction getFromWindowOrThrow(name) {\n    const res = getFromWindow(name);\n    if (!res) {\n        throw new Error(`${name} is not defined in Window`);\n    }\n    return res;\n}\nexports.getFromWindowOrThrow = getFromWindowOrThrow;\nfunction getDocumentOrThrow() {\n    return getFromWindowOrThrow(\"document\");\n}\nexports.getDocumentOrThrow = getDocumentOrThrow;\nfunction getDocument() {\n    return getFromWindow(\"document\");\n}\nexports.getDocument = getDocument;\nfunction getNavigatorOrThrow() {\n    return getFromWindowOrThrow(\"navigator\");\n}\nexports.getNavigatorOrThrow = getNavigatorOrThrow;\nfunction getNavigator() {\n    return getFromWindow(\"navigator\");\n}\nexports.getNavigator = getNavigator;\nfunction getLocationOrThrow() {\n    return getFromWindowOrThrow(\"location\");\n}\nexports.getLocationOrThrow = getLocationOrThrow;\nfunction getLocation() {\n    return getFromWindow(\"location\");\n}\nexports.getLocation = getLocation;\nfunction getCryptoOrThrow() {\n    return getFromWindowOrThrow(\"crypto\");\n}\nexports.getCryptoOrThrow = getCryptoOrThrow;\nfunction getCrypto() {\n    return getFromWindow(\"crypto\");\n}\nexports.getCrypto = getCrypto;\nfunction getLocalStorageOrThrow() {\n    return getFromWindowOrThrow(\"localStorage\");\n}\nexports.getLocalStorageOrThrow = getLocalStorageOrThrow;\nfunction getLocalStorage() {\n    return getFromWindow(\"localStorage\");\n}\nexports.getLocalStorage = getLocalStorage; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3Qvd2luZG93LWdldHRlcnMvZGlzdC9janMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHVCQUF1QixHQUFHQSw4QkFBOEIsR0FBR0EsaUJBQWlCLEdBQUdBLHdCQUF3QixHQUFHQSxtQkFBbUIsR0FBR0EsMEJBQTBCLEdBQUdBLG9CQUFvQixHQUFHQSwyQkFBMkIsR0FBR0EsbUJBQW1CLEdBQUdBLDBCQUEwQixHQUFHQSw0QkFBNEIsR0FBR0EscUJBQXFCLEdBQUcsS0FBSztBQUNqVSxTQUFTYSxjQUFjQyxJQUFJO0lBQ3ZCLElBQUlDLE1BQU1DO0lBQ1YsSUFBSSxLQUFvRSxFQUFFLEVBRXpFO0lBQ0QsT0FBT0Q7QUFDWDtBQUNBZixxQkFBcUIsR0FBR2E7QUFDeEIsU0FBU0QscUJBQXFCRSxJQUFJO0lBQzlCLE1BQU1DLE1BQU1GLGNBQWNDO0lBQzFCLElBQUksQ0FBQ0MsS0FBSztRQUNOLE1BQU0sSUFBSUcsTUFBTSxDQUFDLEVBQUVKLEtBQUsseUJBQXlCLENBQUM7SUFDdEQ7SUFDQSxPQUFPQztBQUNYO0FBQ0FmLDRCQUE0QixHQUFHWTtBQUMvQixTQUFTRDtJQUNMLE9BQU9DLHFCQUFxQjtBQUNoQztBQUNBWiwwQkFBMEIsR0FBR1c7QUFDN0IsU0FBU0Q7SUFDTCxPQUFPRyxjQUFjO0FBQ3pCO0FBQ0FiLG1CQUFtQixHQUFHVTtBQUN0QixTQUFTRDtJQUNMLE9BQU9HLHFCQUFxQjtBQUNoQztBQUNBWiwyQkFBMkIsR0FBR1M7QUFDOUIsU0FBU0Q7SUFDTCxPQUFPSyxjQUFjO0FBQ3pCO0FBQ0FiLG9CQUFvQixHQUFHUTtBQUN2QixTQUFTRDtJQUNMLE9BQU9LLHFCQUFxQjtBQUNoQztBQUNBWiwwQkFBMEIsR0FBR087QUFDN0IsU0FBU0Q7SUFDTCxPQUFPTyxjQUFjO0FBQ3pCO0FBQ0FiLG1CQUFtQixHQUFHTTtBQUN0QixTQUFTRDtJQUNMLE9BQU9PLHFCQUFxQjtBQUNoQztBQUNBWix3QkFBd0IsR0FBR0s7QUFDM0IsU0FBU0Q7SUFDTCxPQUFPUyxjQUFjO0FBQ3pCO0FBQ0FiLGlCQUFpQixHQUFHSTtBQUNwQixTQUFTRDtJQUNMLE9BQU9TLHFCQUFxQjtBQUNoQztBQUNBWiw4QkFBOEIsR0FBR0c7QUFDakMsU0FBU0Q7SUFDTCxPQUFPVyxjQUFjO0FBQ3pCO0FBQ0FiLHVCQUF1QixHQUFHRSxpQkFDMUIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9rZW5mdW5kLy4vbm9kZV9tb2R1bGVzL0B3YWxsZXRjb25uZWN0L3dpbmRvdy1nZXR0ZXJzL2Rpc3QvY2pzL2luZGV4LmpzPzdiMjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldExvY2FsU3RvcmFnZSA9IGV4cG9ydHMuZ2V0TG9jYWxTdG9yYWdlT3JUaHJvdyA9IGV4cG9ydHMuZ2V0Q3J5cHRvID0gZXhwb3J0cy5nZXRDcnlwdG9PclRocm93ID0gZXhwb3J0cy5nZXRMb2NhdGlvbiA9IGV4cG9ydHMuZ2V0TG9jYXRpb25PclRocm93ID0gZXhwb3J0cy5nZXROYXZpZ2F0b3IgPSBleHBvcnRzLmdldE5hdmlnYXRvck9yVGhyb3cgPSBleHBvcnRzLmdldERvY3VtZW50ID0gZXhwb3J0cy5nZXREb2N1bWVudE9yVGhyb3cgPSBleHBvcnRzLmdldEZyb21XaW5kb3dPclRocm93ID0gZXhwb3J0cy5nZXRGcm9tV2luZG93ID0gdm9pZCAwO1xuZnVuY3Rpb24gZ2V0RnJvbVdpbmRvdyhuYW1lKSB7XG4gICAgbGV0IHJlcyA9IHVuZGVmaW5lZDtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2Ygd2luZG93W25hbWVdICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHJlcyA9IHdpbmRvd1tuYW1lXTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcztcbn1cbmV4cG9ydHMuZ2V0RnJvbVdpbmRvdyA9IGdldEZyb21XaW5kb3c7XG5mdW5jdGlvbiBnZXRGcm9tV2luZG93T3JUaHJvdyhuYW1lKSB7XG4gICAgY29uc3QgcmVzID0gZ2V0RnJvbVdpbmRvdyhuYW1lKTtcbiAgICBpZiAoIXJlcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7bmFtZX0gaXMgbm90IGRlZmluZWQgaW4gV2luZG93YCk7XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG5leHBvcnRzLmdldEZyb21XaW5kb3dPclRocm93ID0gZ2V0RnJvbVdpbmRvd09yVGhyb3c7XG5mdW5jdGlvbiBnZXREb2N1bWVudE9yVGhyb3coKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3dPclRocm93KFwiZG9jdW1lbnRcIik7XG59XG5leHBvcnRzLmdldERvY3VtZW50T3JUaHJvdyA9IGdldERvY3VtZW50T3JUaHJvdztcbmZ1bmN0aW9uIGdldERvY3VtZW50KCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93KFwiZG9jdW1lbnRcIik7XG59XG5leHBvcnRzLmdldERvY3VtZW50ID0gZ2V0RG9jdW1lbnQ7XG5mdW5jdGlvbiBnZXROYXZpZ2F0b3JPclRocm93KCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93T3JUaHJvdyhcIm5hdmlnYXRvclwiKTtcbn1cbmV4cG9ydHMuZ2V0TmF2aWdhdG9yT3JUaHJvdyA9IGdldE5hdmlnYXRvck9yVGhyb3c7XG5mdW5jdGlvbiBnZXROYXZpZ2F0b3IoKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3coXCJuYXZpZ2F0b3JcIik7XG59XG5leHBvcnRzLmdldE5hdmlnYXRvciA9IGdldE5hdmlnYXRvcjtcbmZ1bmN0aW9uIGdldExvY2F0aW9uT3JUaHJvdygpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvd09yVGhyb3coXCJsb2NhdGlvblwiKTtcbn1cbmV4cG9ydHMuZ2V0TG9jYXRpb25PclRocm93ID0gZ2V0TG9jYXRpb25PclRocm93O1xuZnVuY3Rpb24gZ2V0TG9jYXRpb24oKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3coXCJsb2NhdGlvblwiKTtcbn1cbmV4cG9ydHMuZ2V0TG9jYXRpb24gPSBnZXRMb2NhdGlvbjtcbmZ1bmN0aW9uIGdldENyeXB0b09yVGhyb3coKSB7XG4gICAgcmV0dXJuIGdldEZyb21XaW5kb3dPclRocm93KFwiY3J5cHRvXCIpO1xufVxuZXhwb3J0cy5nZXRDcnlwdG9PclRocm93ID0gZ2V0Q3J5cHRvT3JUaHJvdztcbmZ1bmN0aW9uIGdldENyeXB0bygpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvdyhcImNyeXB0b1wiKTtcbn1cbmV4cG9ydHMuZ2V0Q3J5cHRvID0gZ2V0Q3J5cHRvO1xuZnVuY3Rpb24gZ2V0TG9jYWxTdG9yYWdlT3JUaHJvdygpIHtcbiAgICByZXR1cm4gZ2V0RnJvbVdpbmRvd09yVGhyb3coXCJsb2NhbFN0b3JhZ2VcIik7XG59XG5leHBvcnRzLmdldExvY2FsU3RvcmFnZU9yVGhyb3cgPSBnZXRMb2NhbFN0b3JhZ2VPclRocm93O1xuZnVuY3Rpb24gZ2V0TG9jYWxTdG9yYWdlKCkge1xuICAgIHJldHVybiBnZXRGcm9tV2luZG93KFwibG9jYWxTdG9yYWdlXCIpO1xufVxuZXhwb3J0cy5nZXRMb2NhbFN0b3JhZ2UgPSBnZXRMb2NhbFN0b3JhZ2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRMb2NhbFN0b3JhZ2UiLCJnZXRMb2NhbFN0b3JhZ2VPclRocm93IiwiZ2V0Q3J5cHRvIiwiZ2V0Q3J5cHRvT3JUaHJvdyIsImdldExvY2F0aW9uIiwiZ2V0TG9jYXRpb25PclRocm93IiwiZ2V0TmF2aWdhdG9yIiwiZ2V0TmF2aWdhdG9yT3JUaHJvdyIsImdldERvY3VtZW50IiwiZ2V0RG9jdW1lbnRPclRocm93IiwiZ2V0RnJvbVdpbmRvd09yVGhyb3ciLCJnZXRGcm9tV2luZG93IiwibmFtZSIsInJlcyIsInVuZGVmaW5lZCIsIndpbmRvdyIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/window-metadata/dist/cjs/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@walletconnect/window-metadata/dist/cjs/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getWindowMetadata = void 0;\nconst window_getters_1 = __webpack_require__(/*! @walletconnect/window-getters */ \"(ssr)/./node_modules/@walletconnect/window-getters/dist/cjs/index.js\");\nfunction getWindowMetadata() {\n    let doc;\n    let loc;\n    try {\n        doc = window_getters_1.getDocumentOrThrow();\n        loc = window_getters_1.getLocationOrThrow();\n    } catch (e) {\n        return null;\n    }\n    function getIcons() {\n        const links = doc.getElementsByTagName(\"link\");\n        const icons = [];\n        for(let i = 0; i < links.length; i++){\n            const link = links[i];\n            const rel = link.getAttribute(\"rel\");\n            if (rel) {\n                if (rel.toLowerCase().indexOf(\"icon\") > -1) {\n                    const href = link.getAttribute(\"href\");\n                    if (href) {\n                        if (href.toLowerCase().indexOf(\"https:\") === -1 && href.toLowerCase().indexOf(\"http:\") === -1 && href.indexOf(\"//\") !== 0) {\n                            let absoluteHref = loc.protocol + \"//\" + loc.host;\n                            if (href.indexOf(\"/\") === 0) {\n                                absoluteHref += href;\n                            } else {\n                                const path = loc.pathname.split(\"/\");\n                                path.pop();\n                                const finalPath = path.join(\"/\");\n                                absoluteHref += finalPath + \"/\" + href;\n                            }\n                            icons.push(absoluteHref);\n                        } else if (href.indexOf(\"//\") === 0) {\n                            const absoluteUrl = loc.protocol + href;\n                            icons.push(absoluteUrl);\n                        } else {\n                            icons.push(href);\n                        }\n                    }\n                }\n            }\n        }\n        return icons;\n    }\n    function getWindowMetadataOfAny(...args) {\n        const metaTags = doc.getElementsByTagName(\"meta\");\n        for(let i = 0; i < metaTags.length; i++){\n            const tag = metaTags[i];\n            const attributes = [\n                \"itemprop\",\n                \"property\",\n                \"name\"\n            ].map((target)=>tag.getAttribute(target)).filter((attr)=>{\n                if (attr) {\n                    return args.includes(attr);\n                }\n                return false;\n            });\n            if (attributes.length && attributes) {\n                const content = tag.getAttribute(\"content\");\n                if (content) {\n                    return content;\n                }\n            }\n        }\n        return \"\";\n    }\n    function getName() {\n        let name = getWindowMetadataOfAny(\"name\", \"og:site_name\", \"og:title\", \"twitter:title\");\n        if (!name) {\n            name = doc.title;\n        }\n        return name;\n    }\n    function getDescription() {\n        const description = getWindowMetadataOfAny(\"description\", \"og:description\", \"twitter:description\", \"keywords\");\n        return description;\n    }\n    const name = getName();\n    const description = getDescription();\n    const url = loc.origin;\n    const icons = getIcons();\n    const meta = {\n        description,\n        url,\n        icons,\n        name\n    };\n    return meta;\n}\nexports.getWindowMetadata = getWindowMetadata; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/window-metadata/dist/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/modal-core/dist/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@walletconnect/modal-core/dist/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConfigCtrl: () => (/* binding */ ConfigCtrl),\n/* harmony export */   CoreUtil: () => (/* binding */ CoreUtil),\n/* harmony export */   EventsCtrl: () => (/* binding */ EventsCtrl),\n/* harmony export */   ExplorerCtrl: () => (/* binding */ ExplorerCtrl),\n/* harmony export */   ModalCtrl: () => (/* binding */ ModalCtrl),\n/* harmony export */   OptionsCtrl: () => (/* binding */ OptionsCtrl),\n/* harmony export */   RouterCtrl: () => (/* binding */ RouterCtrl),\n/* harmony export */   ThemeCtrl: () => (/* binding */ ThemeCtrl),\n/* harmony export */   ToastCtrl: () => (/* binding */ ToastCtrl)\n/* harmony export */ });\n/* harmony import */ var valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! valtio/vanilla */ \"(ssr)/./node_modules/valtio/esm/vanilla.mjs\");\n\nconst state$7 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    history: [\n        \"ConnectWallet\"\n    ],\n    view: \"ConnectWallet\",\n    data: void 0\n});\nconst RouterCtrl = {\n    state: state$7,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state$7, ()=>callback(state$7));\n    },\n    push (view, data) {\n        if (view !== state$7.view) {\n            state$7.view = view;\n            if (data) {\n                state$7.data = data;\n            }\n            state$7.history.push(view);\n        }\n    },\n    reset (view) {\n        state$7.view = view;\n        state$7.history = [\n            view\n        ];\n    },\n    replace (view) {\n        if (state$7.history.length > 1) {\n            state$7.history[state$7.history.length - 1] = view;\n            state$7.view = view;\n        }\n    },\n    goBack () {\n        if (state$7.history.length > 1) {\n            state$7.history.pop();\n            const [last] = state$7.history.slice(-1);\n            state$7.view = last;\n        }\n    },\n    setData (data) {\n        state$7.data = data;\n    }\n};\nconst CoreUtil = {\n    WALLETCONNECT_DEEPLINK_CHOICE: \"WALLETCONNECT_DEEPLINK_CHOICE\",\n    WCM_VERSION: \"WCM_VERSION\",\n    RECOMMENDED_WALLET_AMOUNT: 9,\n    isMobile () {\n        if (false) {}\n        return false;\n    },\n    isAndroid () {\n        return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes(\"android\");\n    },\n    isIos () {\n        const ua = navigator.userAgent.toLowerCase();\n        return CoreUtil.isMobile() && (ua.includes(\"iphone\") || ua.includes(\"ipad\"));\n    },\n    isHttpUrl (url) {\n        return url.startsWith(\"http://\") || url.startsWith(\"https://\");\n    },\n    isArray (data) {\n        return Array.isArray(data) && data.length > 0;\n    },\n    isTelegram () {\n        return  false && // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (0);\n    },\n    formatNativeUrl (appUrl, wcUri, name) {\n        if (CoreUtil.isHttpUrl(appUrl)) {\n            return this.formatUniversalUrl(appUrl, wcUri, name);\n        }\n        let safeAppUrl = appUrl;\n        if (!safeAppUrl.includes(\"://\")) {\n            safeAppUrl = appUrl.replaceAll(\"/\", \"\").replaceAll(\":\", \"\");\n            safeAppUrl = `${safeAppUrl}://`;\n        }\n        if (!safeAppUrl.endsWith(\"/\")) {\n            safeAppUrl = `${safeAppUrl}/`;\n        }\n        this.setWalletConnectDeepLink(safeAppUrl, name);\n        const encodedWcUrl = encodeURIComponent(wcUri);\n        return `${safeAppUrl}wc?uri=${encodedWcUrl}`;\n    },\n    formatUniversalUrl (appUrl, wcUri, name) {\n        if (!CoreUtil.isHttpUrl(appUrl)) {\n            return this.formatNativeUrl(appUrl, wcUri, name);\n        }\n        let safeAppUrl = appUrl;\n        if (safeAppUrl.startsWith(\"https://t.me\")) {\n            const formattedUri = Buffer.from(wcUri).toString(\"base64\").replace(/[=]/g, \"\");\n            if (safeAppUrl.endsWith(\"/\")) {\n                safeAppUrl = safeAppUrl.slice(0, -1);\n            }\n            this.setWalletConnectDeepLink(safeAppUrl, name);\n            const url = new URL(safeAppUrl);\n            url.searchParams.set(\"startapp\", formattedUri);\n            const link = url.toString();\n            return link;\n        }\n        if (!safeAppUrl.endsWith(\"/\")) {\n            safeAppUrl = `${safeAppUrl}/`;\n        }\n        this.setWalletConnectDeepLink(safeAppUrl, name);\n        const encodedWcUrl = encodeURIComponent(wcUri);\n        return `${safeAppUrl}wc?uri=${encodedWcUrl}`;\n    },\n    async wait (miliseconds) {\n        return new Promise((resolve)=>{\n            setTimeout(resolve, miliseconds);\n        });\n    },\n    openHref (href, target) {\n        const adjustedTarget = this.isTelegram() ? \"_blank\" : target;\n        window.open(href, adjustedTarget, \"noreferrer noopener\");\n    },\n    setWalletConnectDeepLink (href, name) {\n        try {\n            localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n                href,\n                name\n            }));\n        } catch (e) {\n            console.info(\"Unable to set WalletConnect deep link\");\n        }\n    },\n    setWalletConnectAndroidDeepLink (wcUri) {\n        try {\n            const [href] = wcUri.split(\"?\");\n            localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n                href,\n                name: \"Android\"\n            }));\n        } catch (e) {\n            console.info(\"Unable to set WalletConnect android deep link\");\n        }\n    },\n    removeWalletConnectDeepLink () {\n        try {\n            localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE);\n        } catch (e) {\n            console.info(\"Unable to remove WalletConnect deep link\");\n        }\n    },\n    setModalVersionInStorage () {\n        try {\n            if (typeof localStorage !== \"undefined\") {\n                localStorage.setItem(CoreUtil.WCM_VERSION, \"2.7.0\");\n            }\n        } catch (e) {\n            console.info(\"Unable to set Web3Modal version in storage\");\n        }\n    },\n    getWalletRouterData () {\n        var _a;\n        const routerData = (_a = RouterCtrl.state.data) == null ? void 0 : _a.Wallet;\n        if (!routerData) {\n            throw new Error('Missing \"Wallet\" view data');\n        }\n        return routerData;\n    }\n};\nconst isEnabled = typeof location !== \"undefined\" && (location.hostname.includes(\"localhost\") || location.protocol.includes(\"https\"));\nconst state$6 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    enabled: isEnabled,\n    userSessionId: \"\",\n    events: [],\n    connectedWalletId: void 0\n});\nconst EventsCtrl = {\n    state: state$6,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state$6.events, ()=>callback((0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.snapshot)(state$6.events[state$6.events.length - 1])));\n    },\n    initialize () {\n        if (state$6.enabled && typeof (crypto == null ? void 0 : crypto.randomUUID) !== \"undefined\") {\n            state$6.userSessionId = crypto.randomUUID();\n        }\n    },\n    setConnectedWalletId (connectedWalletId) {\n        state$6.connectedWalletId = connectedWalletId;\n    },\n    click (data) {\n        if (state$6.enabled) {\n            const event = {\n                type: \"CLICK\",\n                name: data.name,\n                userSessionId: state$6.userSessionId,\n                timestamp: Date.now(),\n                data\n            };\n            state$6.events.push(event);\n        }\n    },\n    track (data) {\n        if (state$6.enabled) {\n            const event = {\n                type: \"TRACK\",\n                name: data.name,\n                userSessionId: state$6.userSessionId,\n                timestamp: Date.now(),\n                data\n            };\n            state$6.events.push(event);\n        }\n    },\n    view (data) {\n        if (state$6.enabled) {\n            const event = {\n                type: \"VIEW\",\n                name: data.name,\n                userSessionId: state$6.userSessionId,\n                timestamp: Date.now(),\n                data\n            };\n            state$6.events.push(event);\n        }\n    }\n};\nconst state$5 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    chains: void 0,\n    walletConnectUri: void 0,\n    isAuth: false,\n    isCustomDesktop: false,\n    isCustomMobile: false,\n    isDataLoaded: false,\n    isUiLoaded: false\n});\nconst OptionsCtrl = {\n    state: state$5,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state$5, ()=>callback(state$5));\n    },\n    setChains (chains) {\n        state$5.chains = chains;\n    },\n    setWalletConnectUri (walletConnectUri) {\n        state$5.walletConnectUri = walletConnectUri;\n    },\n    setIsCustomDesktop (isCustomDesktop) {\n        state$5.isCustomDesktop = isCustomDesktop;\n    },\n    setIsCustomMobile (isCustomMobile) {\n        state$5.isCustomMobile = isCustomMobile;\n    },\n    setIsDataLoaded (isDataLoaded) {\n        state$5.isDataLoaded = isDataLoaded;\n    },\n    setIsUiLoaded (isUiLoaded) {\n        state$5.isUiLoaded = isUiLoaded;\n    },\n    setIsAuth (isAuth) {\n        state$5.isAuth = isAuth;\n    }\n};\nconst state$4 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    projectId: \"\",\n    mobileWallets: void 0,\n    desktopWallets: void 0,\n    walletImages: void 0,\n    chains: void 0,\n    enableAuthMode: false,\n    enableExplorer: true,\n    explorerExcludedWalletIds: void 0,\n    explorerRecommendedWalletIds: void 0,\n    termsOfServiceUrl: void 0,\n    privacyPolicyUrl: void 0\n});\nconst ConfigCtrl = {\n    state: state$4,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state$4, ()=>callback(state$4));\n    },\n    setConfig (config) {\n        var _a, _b;\n        EventsCtrl.initialize();\n        OptionsCtrl.setChains(config.chains);\n        OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode));\n        OptionsCtrl.setIsCustomMobile(Boolean((_a = config.mobileWallets) == null ? void 0 : _a.length));\n        OptionsCtrl.setIsCustomDesktop(Boolean((_b = config.desktopWallets) == null ? void 0 : _b.length));\n        CoreUtil.setModalVersionInStorage();\n        Object.assign(state$4, config);\n    }\n};\nvar __defProp$2 = Object.defineProperty;\nvar __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$2 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$2 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$2 = (obj, key, value)=>key in obj ? __defProp$2(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues$2 = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp$2.call(b, prop)) __defNormalProp$2(a, prop, b[prop]);\n    if (__getOwnPropSymbols$2) for (var prop of __getOwnPropSymbols$2(b)){\n        if (__propIsEnum$2.call(b, prop)) __defNormalProp$2(a, prop, b[prop]);\n    }\n    return a;\n};\nconst W3M_API = \"https://explorer-api.walletconnect.com\";\nconst SDK_TYPE = \"wcm\";\nconst SDK_VERSION = `js-${\"2.7.0\"}`;\nasync function fetchListings(endpoint, params) {\n    const allParams = __spreadValues$2({\n        sdkType: SDK_TYPE,\n        sdkVersion: SDK_VERSION\n    }, params);\n    const url = new URL(endpoint, W3M_API);\n    url.searchParams.append(\"projectId\", ConfigCtrl.state.projectId);\n    Object.entries(allParams).forEach(([key, value])=>{\n        if (value) {\n            url.searchParams.append(key, String(value));\n        }\n    });\n    const request = await fetch(url);\n    return request.json();\n}\nconst ExplorerUtil = {\n    async getDesktopListings (params) {\n        return fetchListings(\"/w3m/v1/getDesktopListings\", params);\n    },\n    async getMobileListings (params) {\n        return fetchListings(\"/w3m/v1/getMobileListings\", params);\n    },\n    async getInjectedListings (params) {\n        return fetchListings(\"/w3m/v1/getInjectedListings\", params);\n    },\n    async getAllListings (params) {\n        return fetchListings(\"/w3m/v1/getAllListings\", params);\n    },\n    getWalletImageUrl (imageId) {\n        return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`;\n    },\n    getAssetImageUrl (imageId) {\n        return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`;\n    }\n};\nvar __defProp$1 = Object.defineProperty;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value)=>key in obj ? __defProp$1(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues$1 = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp$1.call(b, prop)) __defNormalProp$1(a, prop, b[prop]);\n    if (__getOwnPropSymbols$1) for (var prop of __getOwnPropSymbols$1(b)){\n        if (__propIsEnum$1.call(b, prop)) __defNormalProp$1(a, prop, b[prop]);\n    }\n    return a;\n};\nconst isMobile = CoreUtil.isMobile();\nconst state$3 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    wallets: {\n        listings: [],\n        total: 0,\n        page: 1\n    },\n    search: {\n        listings: [],\n        total: 0,\n        page: 1\n    },\n    recomendedWallets: []\n});\nconst ExplorerCtrl = {\n    state: state$3,\n    async getRecomendedWallets () {\n        const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state;\n        if (explorerRecommendedWalletIds === \"NONE\" || explorerExcludedWalletIds === \"ALL\" && !explorerRecommendedWalletIds) {\n            return state$3.recomendedWallets;\n        }\n        if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n            const recommendedIds = explorerRecommendedWalletIds.join(\",\");\n            const params = {\n                recommendedIds\n            };\n            const { listings } = await ExplorerUtil.getAllListings(params);\n            const listingsArr = Object.values(listings);\n            listingsArr.sort((a, b)=>{\n                const aIndex = explorerRecommendedWalletIds.indexOf(a.id);\n                const bIndex = explorerRecommendedWalletIds.indexOf(b.id);\n                return aIndex - bIndex;\n            });\n            state$3.recomendedWallets = listingsArr;\n        } else {\n            const { chains, isAuth } = OptionsCtrl.state;\n            const chainsFilter = chains == null ? void 0 : chains.join(\",\");\n            const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds);\n            const params = {\n                page: 1,\n                sdks: isAuth ? \"auth_v1\" : void 0,\n                entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n                chains: chainsFilter,\n                version: 2,\n                excludedIds: isExcluded ? explorerExcludedWalletIds.join(\",\") : void 0\n            };\n            const { listings } = isMobile ? await ExplorerUtil.getMobileListings(params) : await ExplorerUtil.getDesktopListings(params);\n            state$3.recomendedWallets = Object.values(listings);\n        }\n        return state$3.recomendedWallets;\n    },\n    async getWallets (params) {\n        const extendedParams = __spreadValues$1({}, params);\n        const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state;\n        const { recomendedWallets } = state$3;\n        if (explorerExcludedWalletIds === \"ALL\") {\n            return state$3.wallets;\n        }\n        if (recomendedWallets.length) {\n            extendedParams.excludedIds = recomendedWallets.map((wallet)=>wallet.id).join(\",\");\n        } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n            extendedParams.excludedIds = explorerRecommendedWalletIds.join(\",\");\n        }\n        if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n            extendedParams.excludedIds = [\n                extendedParams.excludedIds,\n                explorerExcludedWalletIds\n            ].filter(Boolean).join(\",\");\n        }\n        if (OptionsCtrl.state.isAuth) {\n            extendedParams.sdks = \"auth_v1\";\n        }\n        const { page, search } = params;\n        const { listings: listingsObj, total } = isMobile ? await ExplorerUtil.getMobileListings(extendedParams) : await ExplorerUtil.getDesktopListings(extendedParams);\n        const listings = Object.values(listingsObj);\n        const type = search ? \"search\" : \"wallets\";\n        state$3[type] = {\n            listings: [\n                ...state$3[type].listings,\n                ...listings\n            ],\n            total,\n            page: page != null ? page : 1\n        };\n        return {\n            listings,\n            total\n        };\n    },\n    getWalletImageUrl (imageId) {\n        return ExplorerUtil.getWalletImageUrl(imageId);\n    },\n    getAssetImageUrl (imageId) {\n        return ExplorerUtil.getAssetImageUrl(imageId);\n    },\n    resetSearch () {\n        state$3.search = {\n            listings: [],\n            total: 0,\n            page: 1\n        };\n    }\n};\nconst state$2 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    open: false\n});\nconst ModalCtrl = {\n    state: state$2,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state$2, ()=>callback(state$2));\n    },\n    async open (options) {\n        return new Promise((resolve)=>{\n            const { isUiLoaded, isDataLoaded } = OptionsCtrl.state;\n            CoreUtil.removeWalletConnectDeepLink();\n            OptionsCtrl.setWalletConnectUri(options == null ? void 0 : options.uri);\n            OptionsCtrl.setChains(options == null ? void 0 : options.chains);\n            RouterCtrl.reset(\"ConnectWallet\");\n            if (isUiLoaded && isDataLoaded) {\n                state$2.open = true;\n                resolve();\n            } else {\n                const interval = setInterval(()=>{\n                    const opts = OptionsCtrl.state;\n                    if (opts.isUiLoaded && opts.isDataLoaded) {\n                        clearInterval(interval);\n                        state$2.open = true;\n                        resolve();\n                    }\n                }, 200);\n            }\n        });\n    },\n    close () {\n        state$2.open = false;\n    }\n};\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nfunction isDarkMode() {\n    return typeof matchMedia !== \"undefined\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}\nconst state$1 = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    themeMode: isDarkMode() ? \"dark\" : \"light\"\n});\nconst ThemeCtrl = {\n    state: state$1,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state$1, ()=>callback(state$1));\n    },\n    setThemeConfig (theme) {\n        const { themeMode, themeVariables } = theme;\n        if (themeMode) {\n            state$1.themeMode = themeMode;\n        }\n        if (themeVariables) {\n            state$1.themeVariables = __spreadValues({}, themeVariables);\n        }\n    }\n};\nconst state = (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.proxy)({\n    open: false,\n    message: \"\",\n    variant: \"success\"\n});\nconst ToastCtrl = {\n    state,\n    subscribe (callback) {\n        return (0,valtio_vanilla__WEBPACK_IMPORTED_MODULE_0__.subscribe)(state, ()=>callback(state));\n    },\n    openToast (message, variant) {\n        state.open = true;\n        state.message = message;\n        state.variant = variant;\n    },\n    closeToast () {\n        state.open = false;\n    }\n};\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/modal-core/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@walletconnect/modal/dist/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@walletconnect/modal/dist/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletConnectModal: () => (/* binding */ WalletConnectModal)\n/* harmony export */ });\n/* harmony import */ var _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @walletconnect/modal-core */ \"(ssr)/./node_modules/@walletconnect/modal-core/dist/index.js\");\n\nclass WalletConnectModal {\n    constructor(config){\n        this.openModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.open;\n        this.closeModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.close;\n        this.subscribeModal = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ModalCtrl.subscribe;\n        this.setTheme = _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ThemeCtrl.setThemeConfig;\n        _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ThemeCtrl.setThemeConfig(config);\n        _walletconnect_modal_core__WEBPACK_IMPORTED_MODULE_0__.ConfigCtrl.setConfig(config);\n        this.initUi();\n    }\n    async initUi() {\n        if (false) {}\n    }\n}\n //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwRjtBQUUxRixNQUFNSTtJQUNKQyxZQUFZQyxNQUFNLENBQUU7UUFDbEIsSUFBSSxDQUFDQyxTQUFTLEdBQUdQLGdFQUFTQSxDQUFDUSxJQUFJO1FBQy9CLElBQUksQ0FBQ0MsVUFBVSxHQUFHVCxnRUFBU0EsQ0FBQ1UsS0FBSztRQUNqQyxJQUFJLENBQUNDLGNBQWMsR0FBR1gsZ0VBQVNBLENBQUNZLFNBQVM7UUFDekMsSUFBSSxDQUFDQyxRQUFRLEdBQUdaLGdFQUFTQSxDQUFDYSxjQUFjO1FBQ3hDYixnRUFBU0EsQ0FBQ2EsY0FBYyxDQUFDUjtRQUN6QkosaUVBQVVBLENBQUNhLFNBQVMsQ0FBQ1Q7UUFDckIsSUFBSSxDQUFDVSxNQUFNO0lBQ2I7SUFDQSxNQUFNQSxTQUFTO1FBQ2IsSUFBSSxLQUE2QixFQUFFLEVBS2xDO0lBQ0g7QUFDRjtBQUU4QixDQUM5QixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2tlbmZ1bmQvLi9ub2RlX21vZHVsZXMvQHdhbGxldGNvbm5lY3QvbW9kYWwvZGlzdC9pbmRleC5qcz9kZTFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZGFsQ3RybCwgVGhlbWVDdHJsLCBDb25maWdDdHJsLCBPcHRpb25zQ3RybCB9IGZyb20gJ0B3YWxsZXRjb25uZWN0L21vZGFsLWNvcmUnO1xuXG5jbGFzcyBXYWxsZXRDb25uZWN0TW9kYWwge1xuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICB0aGlzLm9wZW5Nb2RhbCA9IE1vZGFsQ3RybC5vcGVuO1xuICAgIHRoaXMuY2xvc2VNb2RhbCA9IE1vZGFsQ3RybC5jbG9zZTtcbiAgICB0aGlzLnN1YnNjcmliZU1vZGFsID0gTW9kYWxDdHJsLnN1YnNjcmliZTtcbiAgICB0aGlzLnNldFRoZW1lID0gVGhlbWVDdHJsLnNldFRoZW1lQ29uZmlnO1xuICAgIFRoZW1lQ3RybC5zZXRUaGVtZUNvbmZpZyhjb25maWcpO1xuICAgIENvbmZpZ0N0cmwuc2V0Q29uZmlnKGNvbmZpZyk7XG4gICAgdGhpcy5pbml0VWkoKTtcbiAgfVxuICBhc3luYyBpbml0VWkoKSB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIGF3YWl0IGltcG9ydCgnQHdhbGxldGNvbm5lY3QvbW9kYWwtdWknKTtcbiAgICAgIGNvbnN0IG1vZGFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIndjbS1tb2RhbFwiKTtcbiAgICAgIGRvY3VtZW50LmJvZHkuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KFwiYmVmb3JlZW5kXCIsIG1vZGFsKTtcbiAgICAgIE9wdGlvbnNDdHJsLnNldElzVWlMb2FkZWQodHJ1ZSk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCB7IFdhbGxldENvbm5lY3RNb2RhbCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOlsiTW9kYWxDdHJsIiwiVGhlbWVDdHJsIiwiQ29uZmlnQ3RybCIsIk9wdGlvbnNDdHJsIiwiV2FsbGV0Q29ubmVjdE1vZGFsIiwiY29uc3RydWN0b3IiLCJjb25maWciLCJvcGVuTW9kYWwiLCJvcGVuIiwiY2xvc2VNb2RhbCIsImNsb3NlIiwic3Vic2NyaWJlTW9kYWwiLCJzdWJzY3JpYmUiLCJzZXRUaGVtZSIsInNldFRoZW1lQ29uZmlnIiwic2V0Q29uZmlnIiwiaW5pdFVpIiwibW9kYWwiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJib2R5IiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50Iiwic2V0SXNVaUxvYWRlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@walletconnect/modal/dist/index.js\n");

/***/ })

};
;