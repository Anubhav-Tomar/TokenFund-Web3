"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_transaction_actions_encode_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/encode.js":
/*!**********************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/transaction/actions/encode.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encode: function() { return /* binding */ encode; },\n/* harmony export */   getDataFromTx: function() { return /* binding */ getDataFromTx; },\n/* harmony export */   getExtraCallDataFromTx: function() { return /* binding */ getExtraCallDataFromTx; }\n/* harmony export */ });\nconst encodeWeakMap = new WeakMap();\n/**\n * Encodes a transaction object into a hexadecimal string representation of the encoded data.\n * @param transaction - The transaction object to encode.\n * @returns A promise that resolves to the encoded data as a hexadecimal string.\n * @transaction\n * @example\n * ```ts\n * import { encode } from \"thirdweb\";\n * const encodedData = await encode(transaction);\n * ```\n */ async function encode(transaction) {\n    if (encodeWeakMap.has(transaction)) {\n        // biome-ignore lint/style/noNonNullAssertion: the `has` above ensures that this will always be set\n        return encodeWeakMap.get(transaction);\n    }\n    const promise = (async ()=>{\n        const [data, extraData, { concatHex }] = await Promise.all([\n            getDataFromTx(transaction),\n            getExtraCallDataFromTx(transaction),\n            __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_thirdweb_dist_esm_utils_encoding_helpers_concat-hex_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../utils/encoding/helpers/concat-hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/helpers/concat-hex.js\"))\n        ]);\n        if (extraData) {\n            return concatHex([\n                data,\n                extraData\n            ]);\n        }\n        return data;\n    })();\n    encodeWeakMap.set(transaction, promise);\n    return promise;\n}\n/**\n * Get the transaction.data (from a PreparedTransaction)\n * If the transaction does not have `data`, we default to \"0x\"\n * @internal\n */ async function getDataFromTx(transaction) {\n    if (transaction.data === undefined) {\n        return \"0x\";\n    }\n    if (typeof transaction.data === \"function\") {\n        const data = await transaction.data();\n        if (!data) {\n            return \"0x\";\n        }\n        return data;\n    }\n    return transaction.data;\n}\n/**\n * Get the extraCallData from a PreparedTransaction\n * @internal\n * If extraCallData is \"0x\", we will return `undefined`\n * to simplify the code, since concatenating \"0x\" doesn't do anything\n */ async function getExtraCallDataFromTx(transaction) {\n    if (!transaction.extraCallData) {\n        return undefined;\n    }\n    if (typeof transaction.extraCallData === \"function\") {\n        const extraData = await transaction.extraCallData();\n        if (!extraData) return undefined;\n        if (!extraData.startsWith(\"0x\")) {\n            throw Error(\"Invalid extra calldata - must be a hex string\");\n        }\n        if (extraData === \"0x\") {\n            return undefined;\n        }\n        return extraData;\n    }\n    if (!transaction.extraCallData.startsWith(\"0x\")) {\n        throw Error(\"Invalid extra calldata - must be a hex string\");\n    }\n    return transaction.extraCallData;\n} //# sourceMappingURL=encode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS90cmFuc2FjdGlvbi9hY3Rpb25zL2VuY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxNQUFNQSxnQkFBZ0IsSUFBSUM7QUFDMUI7Ozs7Ozs7Ozs7Q0FVQyxHQUNNLGVBQWVDLE9BQU9DLFdBQVc7SUFDcEMsSUFBSUgsY0FBY0ksR0FBRyxDQUFDRCxjQUFjO1FBQ2hDLG1HQUFtRztRQUNuRyxPQUFPSCxjQUFjSyxHQUFHLENBQUNGO0lBQzdCO0lBQ0EsTUFBTUcsVUFBVSxDQUFDO1FBQ2IsTUFBTSxDQUFDQyxNQUFNQyxXQUFXLEVBQUVDLFNBQVMsRUFBRSxDQUFDLEdBQUcsTUFBTUMsUUFBUUMsR0FBRyxDQUFDO1lBQ3ZEQyxjQUFjVDtZQUNkVSx1QkFBdUJWO1lBQ3ZCLGtVQUFvRDtTQUN2RDtRQUNELElBQUlLLFdBQVc7WUFDWCxPQUFPQyxVQUFVO2dCQUFDRjtnQkFBTUM7YUFBVTtRQUN0QztRQUNBLE9BQU9EO0lBQ1g7SUFDQVAsY0FBY2MsR0FBRyxDQUFDWCxhQUFhRztJQUMvQixPQUFPQTtBQUNYO0FBQ0E7Ozs7Q0FJQyxHQUNNLGVBQWVNLGNBQWNULFdBQVc7SUFDM0MsSUFBSUEsWUFBWUksSUFBSSxLQUFLUSxXQUFXO1FBQ2hDLE9BQU87SUFDWDtJQUNBLElBQUksT0FBT1osWUFBWUksSUFBSSxLQUFLLFlBQVk7UUFDeEMsTUFBTUEsT0FBTyxNQUFNSixZQUFZSSxJQUFJO1FBQ25DLElBQUksQ0FBQ0EsTUFBTTtZQUNQLE9BQU87UUFDWDtRQUNBLE9BQU9BO0lBQ1g7SUFDQSxPQUFPSixZQUFZSSxJQUFJO0FBQzNCO0FBQ0E7Ozs7O0NBS0MsR0FDTSxlQUFlTSx1QkFBdUJWLFdBQVc7SUFDcEQsSUFBSSxDQUFDQSxZQUFZYSxhQUFhLEVBQUU7UUFDNUIsT0FBT0Q7SUFDWDtJQUNBLElBQUksT0FBT1osWUFBWWEsYUFBYSxLQUFLLFlBQVk7UUFDakQsTUFBTVIsWUFBWSxNQUFNTCxZQUFZYSxhQUFhO1FBQ2pELElBQUksQ0FBQ1IsV0FDRCxPQUFPTztRQUNYLElBQUksQ0FBQ1AsVUFBVVMsVUFBVSxDQUFDLE9BQU87WUFDN0IsTUFBTUMsTUFBTTtRQUNoQjtRQUNBLElBQUlWLGNBQWMsTUFBTTtZQUNwQixPQUFPTztRQUNYO1FBQ0EsT0FBT1A7SUFDWDtJQUNBLElBQUksQ0FBQ0wsWUFBWWEsYUFBYSxDQUFDQyxVQUFVLENBQUMsT0FBTztRQUM3QyxNQUFNQyxNQUFNO0lBQ2hCO0lBQ0EsT0FBT2YsWUFBWWEsYUFBYTtBQUNwQyxFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdHJhbnNhY3Rpb24vYWN0aW9ucy9lbmNvZGUuanM/MjczYSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlbmNvZGVXZWFrTWFwID0gbmV3IFdlYWtNYXAoKTtcbi8qKlxuICogRW5jb2RlcyBhIHRyYW5zYWN0aW9uIG9iamVjdCBpbnRvIGEgaGV4YWRlY2ltYWwgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBlbmNvZGVkIGRhdGEuXG4gKiBAcGFyYW0gdHJhbnNhY3Rpb24gLSBUaGUgdHJhbnNhY3Rpb24gb2JqZWN0IHRvIGVuY29kZS5cbiAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBlbmNvZGVkIGRhdGEgYXMgYSBoZXhhZGVjaW1hbCBzdHJpbmcuXG4gKiBAdHJhbnNhY3Rpb25cbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgZW5jb2RlIH0gZnJvbSBcInRoaXJkd2ViXCI7XG4gKiBjb25zdCBlbmNvZGVkRGF0YSA9IGF3YWl0IGVuY29kZSh0cmFuc2FjdGlvbik7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGVuY29kZSh0cmFuc2FjdGlvbikge1xuICAgIGlmIChlbmNvZGVXZWFrTWFwLmhhcyh0cmFuc2FjdGlvbikpIHtcbiAgICAgICAgLy8gYmlvbWUtaWdub3JlIGxpbnQvc3R5bGUvbm9Ob25OdWxsQXNzZXJ0aW9uOiB0aGUgYGhhc2AgYWJvdmUgZW5zdXJlcyB0aGF0IHRoaXMgd2lsbCBhbHdheXMgYmUgc2V0XG4gICAgICAgIHJldHVybiBlbmNvZGVXZWFrTWFwLmdldCh0cmFuc2FjdGlvbik7XG4gICAgfVxuICAgIGNvbnN0IHByb21pc2UgPSAoYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCBbZGF0YSwgZXh0cmFEYXRhLCB7IGNvbmNhdEhleCB9XSA9IGF3YWl0IFByb21pc2UuYWxsKFtcbiAgICAgICAgICAgIGdldERhdGFGcm9tVHgodHJhbnNhY3Rpb24pLFxuICAgICAgICAgICAgZ2V0RXh0cmFDYWxsRGF0YUZyb21UeCh0cmFuc2FjdGlvbiksXG4gICAgICAgICAgICBpbXBvcnQoXCIuLi8uLi91dGlscy9lbmNvZGluZy9oZWxwZXJzL2NvbmNhdC1oZXguanNcIiksXG4gICAgICAgIF0pO1xuICAgICAgICBpZiAoZXh0cmFEYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uY2F0SGV4KFtkYXRhLCBleHRyYURhdGFdKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9KSgpO1xuICAgIGVuY29kZVdlYWtNYXAuc2V0KHRyYW5zYWN0aW9uLCBwcm9taXNlKTtcbiAgICByZXR1cm4gcHJvbWlzZTtcbn1cbi8qKlxuICogR2V0IHRoZSB0cmFuc2FjdGlvbi5kYXRhIChmcm9tIGEgUHJlcGFyZWRUcmFuc2FjdGlvbilcbiAqIElmIHRoZSB0cmFuc2FjdGlvbiBkb2VzIG5vdCBoYXZlIGBkYXRhYCwgd2UgZGVmYXVsdCB0byBcIjB4XCJcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0RGF0YUZyb21UeCh0cmFuc2FjdGlvbikge1xuICAgIGlmICh0cmFuc2FjdGlvbi5kYXRhID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIFwiMHhcIjtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB0cmFuc2FjdGlvbi5kYXRhID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHRyYW5zYWN0aW9uLmRhdGEoKTtcbiAgICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gXCIweFwiO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH1cbiAgICByZXR1cm4gdHJhbnNhY3Rpb24uZGF0YTtcbn1cbi8qKlxuICogR2V0IHRoZSBleHRyYUNhbGxEYXRhIGZyb20gYSBQcmVwYXJlZFRyYW5zYWN0aW9uXG4gKiBAaW50ZXJuYWxcbiAqIElmIGV4dHJhQ2FsbERhdGEgaXMgXCIweFwiLCB3ZSB3aWxsIHJldHVybiBgdW5kZWZpbmVkYFxuICogdG8gc2ltcGxpZnkgdGhlIGNvZGUsIHNpbmNlIGNvbmNhdGVuYXRpbmcgXCIweFwiIGRvZXNuJ3QgZG8gYW55dGhpbmdcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEV4dHJhQ2FsbERhdGFGcm9tVHgodHJhbnNhY3Rpb24pIHtcbiAgICBpZiAoIXRyYW5zYWN0aW9uLmV4dHJhQ2FsbERhdGEpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB0cmFuc2FjdGlvbi5leHRyYUNhbGxEYXRhID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgY29uc3QgZXh0cmFEYXRhID0gYXdhaXQgdHJhbnNhY3Rpb24uZXh0cmFDYWxsRGF0YSgpO1xuICAgICAgICBpZiAoIWV4dHJhRGF0YSlcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIGlmICghZXh0cmFEYXRhLnN0YXJ0c1dpdGgoXCIweFwiKSkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJJbnZhbGlkIGV4dHJhIGNhbGxkYXRhIC0gbXVzdCBiZSBhIGhleCBzdHJpbmdcIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGV4dHJhRGF0YSA9PT0gXCIweFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBleHRyYURhdGE7XG4gICAgfVxuICAgIGlmICghdHJhbnNhY3Rpb24uZXh0cmFDYWxsRGF0YS5zdGFydHNXaXRoKFwiMHhcIikpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJJbnZhbGlkIGV4dHJhIGNhbGxkYXRhIC0gbXVzdCBiZSBhIGhleCBzdHJpbmdcIik7XG4gICAgfVxuICAgIHJldHVybiB0cmFuc2FjdGlvbi5leHRyYUNhbGxEYXRhO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5jb2RlLmpzLm1hcCJdLCJuYW1lcyI6WyJlbmNvZGVXZWFrTWFwIiwiV2Vha01hcCIsImVuY29kZSIsInRyYW5zYWN0aW9uIiwiaGFzIiwiZ2V0IiwicHJvbWlzZSIsImRhdGEiLCJleHRyYURhdGEiLCJjb25jYXRIZXgiLCJQcm9taXNlIiwiYWxsIiwiZ2V0RGF0YUZyb21UeCIsImdldEV4dHJhQ2FsbERhdGFGcm9tVHgiLCJzZXQiLCJ1bmRlZmluZWQiLCJleHRyYUNhbGxEYXRhIiwic3RhcnRzV2l0aCIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/encode.js\n"));

/***/ })

}]);