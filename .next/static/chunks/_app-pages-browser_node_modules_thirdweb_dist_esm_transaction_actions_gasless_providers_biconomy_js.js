"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_transaction_actions_gasless_providers_biconomy_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/constants/addresses.js":
/*!***************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/constants/addresses.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NATIVE_TOKEN_ADDRESS: function() { return /* binding */ NATIVE_TOKEN_ADDRESS; },\n/* harmony export */   ZERO_ADDRESS: function() { return /* binding */ ZERO_ADDRESS; },\n/* harmony export */   isNativeTokenAddress: function() { return /* binding */ isNativeTokenAddress; }\n/* harmony export */ });\n/**\n * The address of the native token.\n */ const NATIVE_TOKEN_ADDRESS = \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\";\n/**\n * @internal\n */ function isNativeTokenAddress(address) {\n    return address.toLowerCase() === NATIVE_TOKEN_ADDRESS;\n}\n/**\n * The zero address in Ethereum, represented as a hexadecimal string.\n */ const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\"; //# sourceMappingURL=addresses.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9jb25zdGFudHMvYWRkcmVzc2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztDQUVDLEdBQ00sTUFBTUEsdUJBQXVCLDZDQUE2QztBQUNqRjs7Q0FFQyxHQUNNLFNBQVNDLHFCQUFxQkMsT0FBTztJQUN4QyxPQUFPQSxRQUFRQyxXQUFXLE9BQU9IO0FBQ3JDO0FBQ0E7O0NBRUMsR0FDTSxNQUFNSSxlQUFlLDZDQUE2QyxDQUN6RSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3RoaXJkd2ViL2Rpc3QvZXNtL2NvbnN0YW50cy9hZGRyZXNzZXMuanM/ODhkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoZSBhZGRyZXNzIG9mIHRoZSBuYXRpdmUgdG9rZW4uXG4gKi9cbmV4cG9ydCBjb25zdCBOQVRJVkVfVE9LRU5fQUREUkVTUyA9IFwiMHhlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlXCI7XG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNOYXRpdmVUb2tlbkFkZHJlc3MoYWRkcmVzcykge1xuICAgIHJldHVybiBhZGRyZXNzLnRvTG93ZXJDYXNlKCkgPT09IE5BVElWRV9UT0tFTl9BRERSRVNTO1xufVxuLyoqXG4gKiBUaGUgemVybyBhZGRyZXNzIGluIEV0aGVyZXVtLCByZXByZXNlbnRlZCBhcyBhIGhleGFkZWNpbWFsIHN0cmluZy5cbiAqL1xuZXhwb3J0IGNvbnN0IFpFUk9fQUREUkVTUyA9IFwiMHgwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGRyZXNzZXMuanMubWFwIl0sIm5hbWVzIjpbIk5BVElWRV9UT0tFTl9BRERSRVNTIiwiaXNOYXRpdmVUb2tlbkFkZHJlc3MiLCJhZGRyZXNzIiwidG9Mb3dlckNhc2UiLCJaRVJPX0FERFJFU1MiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/constants/addresses.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/gasless/providers/biconomy.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/transaction/actions/gasless/providers/biconomy.js ***!
  \******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prepareBiconomyTransaction: function() { return /* binding */ prepareBiconomyTransaction; },\n/* harmony export */   relayBiconomyTransaction: function() { return /* binding */ relayBiconomyTransaction; }\n/* harmony export */ });\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js\");\n/* harmony import */ var _constants_addresses_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../constants/addresses.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/constants/addresses.js\");\n/* harmony import */ var _contract_contract_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../contract/contract.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/contract/contract.js\");\n/* harmony import */ var _utils_address_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../utils/address.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/address.js\");\n/* harmony import */ var _utils_encoding_helpers_is_hex_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../utils/encoding/helpers/is-hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/helpers/is-hex.js\");\n/* harmony import */ var _utils_hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../utils/hashing/keccak256.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/hashing/keccak256.js\");\n/* harmony import */ var _utils_json_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../utils/json.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/json.js\");\n/* harmony import */ var _read_contract_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../read-contract.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/read-contract.js\");\n\n\n\n\n\n\n\n\n// we do not send multiple batches so this stays consistent\nconst BATCH_ID = 0n;\n/**\n * @internal - only exported for testing\n */ async function prepareBiconomyTransaction(param) {\n    let { account, serializableTransaction, transaction, gasless } = param;\n    const forwarderContract = (0,_contract_contract_js__WEBPACK_IMPORTED_MODULE_0__.getContract)({\n        address: gasless.relayerForwarderAddress,\n        chain: transaction.chain,\n        client: transaction.client\n    });\n    // get the nonce\n    const nonce = await (0,_read_contract_js__WEBPACK_IMPORTED_MODULE_1__.readContract)({\n        contract: forwarderContract,\n        method: \"function getNonce(address,uint256) view returns (uint256)\",\n        params: [\n            account.address,\n            BATCH_ID\n        ]\n    });\n    var _gasless_deadlineSeconds;\n    const deadline = Math.floor(Date.now() / 1000) + ((_gasless_deadlineSeconds = gasless.deadlineSeconds) !== null && _gasless_deadlineSeconds !== void 0 ? _gasless_deadlineSeconds : 3600);\n    const request = {\n        from: account.address,\n        to: serializableTransaction.to,\n        token: _constants_addresses_js__WEBPACK_IMPORTED_MODULE_2__.ZERO_ADDRESS,\n        txGas: serializableTransaction.gas,\n        tokenGasPrice: 0n,\n        batchId: BATCH_ID,\n        batchNonce: nonce,\n        deadline: deadline,\n        data: serializableTransaction.data\n    };\n    if (!request.to) {\n        throw new Error(\"Cannot send a transaction without a `to` address\");\n    }\n    if (!request.txGas) {\n        throw new Error(\"Cannot send a transaction without a `gas` value\");\n    }\n    if (!request.data) {\n        throw new Error(\"Cannot send a transaction without a `data` value\");\n    }\n    // create the hash\n    const message = (0,viem__WEBPACK_IMPORTED_MODULE_3__.encodeAbiParameters)([\n        {\n            type: \"address\"\n        },\n        {\n            type: \"address\"\n        },\n        {\n            type: \"address\"\n        },\n        {\n            type: \"uint256\"\n        },\n        {\n            type: \"uint256\"\n        },\n        {\n            type: \"uint256\"\n        },\n        {\n            type: \"uint256\"\n        },\n        {\n            type: \"bytes32\"\n        }\n    ], [\n        (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_4__.getAddress)(request.from),\n        (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_4__.getAddress)(request.to),\n        (0,_utils_address_js__WEBPACK_IMPORTED_MODULE_4__.getAddress)(request.token),\n        request.txGas,\n        request.tokenGasPrice,\n        request.batchId,\n        request.batchNonce,\n        (0,_utils_hashing_keccak256_js__WEBPACK_IMPORTED_MODULE_5__.keccak256)(request.data)\n    ]);\n    const signature = await account.signMessage({\n        message\n    });\n    return [\n        request,\n        signature\n    ];\n}\n/**\n * @internal\n */ async function relayBiconomyTransaction(options) {\n    const [request, signature] = await prepareBiconomyTransaction(options);\n    // send the transaction to the biconomy api\n    const response = await fetch(\"https://api.biconomy.io/api/v2/meta-tx/native\", {\n        method: \"POST\",\n        body: (0,_utils_json_js__WEBPACK_IMPORTED_MODULE_6__.stringify)({\n            apiId: options.gasless.apiId,\n            params: [\n                request,\n                signature\n            ],\n            from: request.from,\n            to: request.to,\n            gasLimit: request.txGas\n        }),\n        headers: {\n            \"x-api-key\": options.gasless.apiKey,\n            \"Content-Type\": \"application/json;charset=utf-8\"\n        }\n    });\n    if (!response.ok) {\n        var _response_body;\n        (_response_body = response.body) === null || _response_body === void 0 ? void 0 : _response_body.cancel();\n        throw new Error(\"Failed to send transaction: \".concat(await response.text()));\n    }\n    const json = await response.json();\n    const transactionHash = json.txHash;\n    if ((0,_utils_encoding_helpers_is_hex_js__WEBPACK_IMPORTED_MODULE_7__.isHex)(transactionHash)) {\n        return {\n            transactionHash: transactionHash,\n            chain: options.transaction.chain,\n            client: options.transaction.client\n        };\n    }\n    throw new Error(\"Failed to send transaction: \".concat((0,_utils_json_js__WEBPACK_IMPORTED_MODULE_6__.stringify)(json)));\n} //# sourceMappingURL=biconomy.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/actions/gasless/providers/biconomy.js\n"));

/***/ })

}]);