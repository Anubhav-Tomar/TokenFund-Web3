"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_extensions_erc1155_read_getNFT_js"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/totalSupply.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/totalSupply.js ***!
  \******************************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FN_SELECTOR: function() { return /* binding */ FN_SELECTOR; },\n/* harmony export */   decodeTotalSupplyResult: function() { return /* binding */ decodeTotalSupplyResult; },\n/* harmony export */   encodeTotalSupply: function() { return /* binding */ encodeTotalSupply; },\n/* harmony export */   encodeTotalSupplyParams: function() { return /* binding */ encodeTotalSupplyParams; },\n/* harmony export */   isTotalSupplySupported: function() { return /* binding */ isTotalSupplySupported; },\n/* harmony export */   totalSupply: function() { return /* binding */ totalSupply; }\n/* harmony export */ });\n/* harmony import */ var _transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../transaction/read-contract.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/read-contract.js\");\n/* harmony import */ var _utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../utils/abi/encodeAbiParameters.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js\");\n/* harmony import */ var _utils_bytecode_detectExtension_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../utils/bytecode/detectExtension.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js\");\n\n\n\n\nconst FN_SELECTOR = \"0xbd85b039\";\nconst FN_INPUTS = [\n    {\n        type: \"uint256\",\n        name: \"id\"\n    }\n];\nconst FN_OUTPUTS = [\n    {\n        type: \"uint256\"\n    }\n];\n/**\n * Checks if the `totalSupply` method is supported by the given contract.\n * @param availableSelectors An array of 4byte function selectors of the contract. You can get this in various ways, such as using \"whatsabi\" or if you have the ABI of the contract available you can use it to generate the selectors.\n * @returns A boolean indicating if the `totalSupply` method is supported.\n * @extension ERC1155\n * @example\n * ```ts\n * import { isTotalSupplySupported } from \"thirdweb/extensions/erc1155\";\n * const supported = isTotalSupplySupported([\"0x...\"]);\n * ```\n */ function isTotalSupplySupported(availableSelectors) {\n    return (0,_utils_bytecode_detectExtension_js__WEBPACK_IMPORTED_MODULE_0__.detectMethod)({\n        availableSelectors,\n        method: [\n            FN_SELECTOR,\n            FN_INPUTS,\n            FN_OUTPUTS\n        ]\n    });\n}\n/**\n * Encodes the parameters for the \"totalSupply\" function.\n * @param options - The options for the totalSupply function.\n * @returns The encoded ABI parameters.\n * @extension ERC1155\n * @example\n * ```ts\n * import { encodeTotalSupplyParams } from \"thirdweb/extensions/erc1155\";\n * const result = encodeTotalSupplyParams({\n *  id: ...,\n * });\n * ```\n */ function encodeTotalSupplyParams(options) {\n    return (0,_utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.encodeAbiParameters)(FN_INPUTS, [\n        options.id\n    ]);\n}\n/**\n * Encodes the \"totalSupply\" function into a Hex string with its parameters.\n * @param options - The options for the totalSupply function.\n * @returns The encoded hexadecimal string.\n * @extension ERC1155\n * @example\n * ```ts\n * import { encodeTotalSupply } from \"thirdweb/extensions/erc1155\";\n * const result = encodeTotalSupply({\n *  id: ...,\n * });\n * ```\n */ function encodeTotalSupply(options) {\n    // we do a \"manual\" concat here to avoid the overhead of the \"concatHex\" function\n    // we can do this because we know the specific formats of the values\n    return FN_SELECTOR + encodeTotalSupplyParams(options).slice(2);\n}\n/**\n * Decodes the result of the totalSupply function call.\n * @param result - The hexadecimal result to decode.\n * @returns The decoded result as per the FN_OUTPUTS definition.\n * @extension ERC1155\n * @example\n * ```ts\n * import { decodeTotalSupplyResult } from \"thirdweb/extensions/erc1155\";\n * const result = decodeTotalSupplyResultResult(\"...\");\n * ```\n */ function decodeTotalSupplyResult(result) {\n    return (0,viem__WEBPACK_IMPORTED_MODULE_2__.decodeAbiParameters)(FN_OUTPUTS, result)[0];\n}\n/**\n * Calls the \"totalSupply\" function on the contract.\n * @param options - The options for the totalSupply function.\n * @returns The parsed result of the function call.\n * @extension ERC1155\n * @example\n * ```ts\n * import { totalSupply } from \"thirdweb/extensions/erc1155\";\n *\n * const result = await totalSupply({\n *  contract,\n *  id: ...,\n * });\n *\n * ```\n */ async function totalSupply(options) {\n    return (0,_transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_3__.readContract)({\n        contract: options.contract,\n        method: [\n            FN_SELECTOR,\n            FN_INPUTS,\n            FN_OUTPUTS\n        ],\n        params: [\n            options.id\n        ]\n    });\n} //# sourceMappingURL=totalSupply.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9leHRlbnNpb25zL2VyYzExNTUvX19nZW5lcmF0ZWRfXy9JRVJDMTE1NS9yZWFkL3RvdGFsU3VwcGx5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBMkU7QUFDVztBQUMzQztBQUNxQztBQUN6RSxNQUFNSSxjQUFjLGFBQWE7QUFDeEMsTUFBTUMsWUFBWTtJQUNkO1FBQ0lDLE1BQU07UUFDTkMsTUFBTTtJQUNWO0NBQ0g7QUFDRCxNQUFNQyxhQUFhO0lBQ2Y7UUFDSUYsTUFBTTtJQUNWO0NBQ0g7QUFDRDs7Ozs7Ozs7OztDQVVDLEdBQ00sU0FBU0csdUJBQXVCQyxrQkFBa0I7SUFDckQsT0FBT1AsZ0ZBQVlBLENBQUM7UUFDaEJPO1FBQ0FDLFFBQVE7WUFBQ1A7WUFBYUM7WUFBV0c7U0FBVztJQUNoRDtBQUNKO0FBQ0E7Ozs7Ozs7Ozs7OztDQVlDLEdBQ00sU0FBU0ksd0JBQXdCQyxPQUFPO0lBQzNDLE9BQU9aLHNGQUFtQkEsQ0FBQ0ksV0FBVztRQUFDUSxRQUFRQyxFQUFFO0tBQUM7QUFDdEQ7QUFDQTs7Ozs7Ozs7Ozs7O0NBWUMsR0FDTSxTQUFTQyxrQkFBa0JGLE9BQU87SUFDckMsaUZBQWlGO0lBQ2pGLG9FQUFvRTtJQUNwRSxPQUFRVCxjQUNKUSx3QkFBd0JDLFNBQVNHLEtBQUssQ0FBQztBQUMvQztBQUNBOzs7Ozs7Ozs7O0NBVUMsR0FDTSxTQUFTQyx3QkFBd0JDLE1BQU07SUFDMUMsT0FBT2hCLHlEQUFtQkEsQ0FBQ00sWUFBWVUsT0FBTyxDQUFDLEVBQUU7QUFDckQ7QUFDQTs7Ozs7Ozs7Ozs7Ozs7O0NBZUMsR0FDTSxlQUFlQyxZQUFZTixPQUFPO0lBQ3JDLE9BQU9iLDJFQUFZQSxDQUFDO1FBQ2hCb0IsVUFBVVAsUUFBUU8sUUFBUTtRQUMxQlQsUUFBUTtZQUFDUDtZQUFhQztZQUFXRztTQUFXO1FBQzVDYSxRQUFRO1lBQUNSLFFBQVFDLEVBQUU7U0FBQztJQUN4QjtBQUNKLEVBQ0EsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9leHRlbnNpb25zL2VyYzExNTUvX19nZW5lcmF0ZWRfXy9JRVJDMTE1NS9yZWFkL3RvdGFsU3VwcGx5LmpzP2NkZTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVhZENvbnRyYWN0IH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL3RyYW5zYWN0aW9uL3JlYWQtY29udHJhY3QuanNcIjtcbmltcG9ydCB7IGVuY29kZUFiaVBhcmFtZXRlcnMgfSBmcm9tIFwiLi4vLi4vLi4vLi4vLi4vdXRpbHMvYWJpL2VuY29kZUFiaVBhcmFtZXRlcnMuanNcIjtcbmltcG9ydCB7IGRlY29kZUFiaVBhcmFtZXRlcnMgfSBmcm9tIFwidmllbVwiO1xuaW1wb3J0IHsgZGV0ZWN0TWV0aG9kIH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL3V0aWxzL2J5dGVjb2RlL2RldGVjdEV4dGVuc2lvbi5qc1wiO1xuZXhwb3J0IGNvbnN0IEZOX1NFTEVDVE9SID0gXCIweGJkODViMDM5XCI7XG5jb25zdCBGTl9JTlBVVFMgPSBbXG4gICAge1xuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJpZFwiLFxuICAgIH0sXG5dO1xuY29uc3QgRk5fT1VUUFVUUyA9IFtcbiAgICB7XG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiLFxuICAgIH0sXG5dO1xuLyoqXG4gKiBDaGVja3MgaWYgdGhlIGB0b3RhbFN1cHBseWAgbWV0aG9kIGlzIHN1cHBvcnRlZCBieSB0aGUgZ2l2ZW4gY29udHJhY3QuXG4gKiBAcGFyYW0gYXZhaWxhYmxlU2VsZWN0b3JzIEFuIGFycmF5IG9mIDRieXRlIGZ1bmN0aW9uIHNlbGVjdG9ycyBvZiB0aGUgY29udHJhY3QuIFlvdSBjYW4gZ2V0IHRoaXMgaW4gdmFyaW91cyB3YXlzLCBzdWNoIGFzIHVzaW5nIFwid2hhdHNhYmlcIiBvciBpZiB5b3UgaGF2ZSB0aGUgQUJJIG9mIHRoZSBjb250cmFjdCBhdmFpbGFibGUgeW91IGNhbiB1c2UgaXQgdG8gZ2VuZXJhdGUgdGhlIHNlbGVjdG9ycy5cbiAqIEByZXR1cm5zIEEgYm9vbGVhbiBpbmRpY2F0aW5nIGlmIHRoZSBgdG90YWxTdXBwbHlgIG1ldGhvZCBpcyBzdXBwb3J0ZWQuXG4gKiBAZXh0ZW5zaW9uIEVSQzExNTVcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgaXNUb3RhbFN1cHBseVN1cHBvcnRlZCB9IGZyb20gXCJ0aGlyZHdlYi9leHRlbnNpb25zL2VyYzExNTVcIjtcbiAqIGNvbnN0IHN1cHBvcnRlZCA9IGlzVG90YWxTdXBwbHlTdXBwb3J0ZWQoW1wiMHguLi5cIl0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1RvdGFsU3VwcGx5U3VwcG9ydGVkKGF2YWlsYWJsZVNlbGVjdG9ycykge1xuICAgIHJldHVybiBkZXRlY3RNZXRob2Qoe1xuICAgICAgICBhdmFpbGFibGVTZWxlY3RvcnMsXG4gICAgICAgIG1ldGhvZDogW0ZOX1NFTEVDVE9SLCBGTl9JTlBVVFMsIEZOX09VVFBVVFNdLFxuICAgIH0pO1xufVxuLyoqXG4gKiBFbmNvZGVzIHRoZSBwYXJhbWV0ZXJzIGZvciB0aGUgXCJ0b3RhbFN1cHBseVwiIGZ1bmN0aW9uLlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3IgdGhlIHRvdGFsU3VwcGx5IGZ1bmN0aW9uLlxuICogQHJldHVybnMgVGhlIGVuY29kZWQgQUJJIHBhcmFtZXRlcnMuXG4gKiBAZXh0ZW5zaW9uIEVSQzExNTVcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgZW5jb2RlVG90YWxTdXBwbHlQYXJhbXMgfSBmcm9tIFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMxMTU1XCI7XG4gKiBjb25zdCByZXN1bHQgPSBlbmNvZGVUb3RhbFN1cHBseVBhcmFtcyh7XG4gKiAgaWQ6IC4uLixcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVUb3RhbFN1cHBseVBhcmFtcyhvcHRpb25zKSB7XG4gICAgcmV0dXJuIGVuY29kZUFiaVBhcmFtZXRlcnMoRk5fSU5QVVRTLCBbb3B0aW9ucy5pZF0pO1xufVxuLyoqXG4gKiBFbmNvZGVzIHRoZSBcInRvdGFsU3VwcGx5XCIgZnVuY3Rpb24gaW50byBhIEhleCBzdHJpbmcgd2l0aCBpdHMgcGFyYW1ldGVycy5cbiAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIHRoZSB0b3RhbFN1cHBseSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBlbmNvZGVkIGhleGFkZWNpbWFsIHN0cmluZy5cbiAqIEBleHRlbnNpb24gRVJDMTE1NVxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBlbmNvZGVUb3RhbFN1cHBseSB9IGZyb20gXCJ0aGlyZHdlYi9leHRlbnNpb25zL2VyYzExNTVcIjtcbiAqIGNvbnN0IHJlc3VsdCA9IGVuY29kZVRvdGFsU3VwcGx5KHtcbiAqICBpZDogLi4uLFxuICogfSk7XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGVuY29kZVRvdGFsU3VwcGx5KG9wdGlvbnMpIHtcbiAgICAvLyB3ZSBkbyBhIFwibWFudWFsXCIgY29uY2F0IGhlcmUgdG8gYXZvaWQgdGhlIG92ZXJoZWFkIG9mIHRoZSBcImNvbmNhdEhleFwiIGZ1bmN0aW9uXG4gICAgLy8gd2UgY2FuIGRvIHRoaXMgYmVjYXVzZSB3ZSBrbm93IHRoZSBzcGVjaWZpYyBmb3JtYXRzIG9mIHRoZSB2YWx1ZXNcbiAgICByZXR1cm4gKEZOX1NFTEVDVE9SICtcbiAgICAgICAgZW5jb2RlVG90YWxTdXBwbHlQYXJhbXMob3B0aW9ucykuc2xpY2UoMikpO1xufVxuLyoqXG4gKiBEZWNvZGVzIHRoZSByZXN1bHQgb2YgdGhlIHRvdGFsU3VwcGx5IGZ1bmN0aW9uIGNhbGwuXG4gKiBAcGFyYW0gcmVzdWx0IC0gVGhlIGhleGFkZWNpbWFsIHJlc3VsdCB0byBkZWNvZGUuXG4gKiBAcmV0dXJucyBUaGUgZGVjb2RlZCByZXN1bHQgYXMgcGVyIHRoZSBGTl9PVVRQVVRTIGRlZmluaXRpb24uXG4gKiBAZXh0ZW5zaW9uIEVSQzExNTVcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgZGVjb2RlVG90YWxTdXBwbHlSZXN1bHQgfSBmcm9tIFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMxMTU1XCI7XG4gKiBjb25zdCByZXN1bHQgPSBkZWNvZGVUb3RhbFN1cHBseVJlc3VsdFJlc3VsdChcIi4uLlwiKTtcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVG90YWxTdXBwbHlSZXN1bHQocmVzdWx0KSB7XG4gICAgcmV0dXJuIGRlY29kZUFiaVBhcmFtZXRlcnMoRk5fT1VUUFVUUywgcmVzdWx0KVswXTtcbn1cbi8qKlxuICogQ2FsbHMgdGhlIFwidG90YWxTdXBwbHlcIiBmdW5jdGlvbiBvbiB0aGUgY29udHJhY3QuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciB0aGUgdG90YWxTdXBwbHkgZnVuY3Rpb24uXG4gKiBAcmV0dXJucyBUaGUgcGFyc2VkIHJlc3VsdCBvZiB0aGUgZnVuY3Rpb24gY2FsbC5cbiAqIEBleHRlbnNpb24gRVJDMTE1NVxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyB0b3RhbFN1cHBseSB9IGZyb20gXCJ0aGlyZHdlYi9leHRlbnNpb25zL2VyYzExNTVcIjtcbiAqXG4gKiBjb25zdCByZXN1bHQgPSBhd2FpdCB0b3RhbFN1cHBseSh7XG4gKiAgY29udHJhY3QsXG4gKiAgaWQ6IC4uLixcbiAqIH0pO1xuICpcbiAqIGBgYFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdG90YWxTdXBwbHkob3B0aW9ucykge1xuICAgIHJldHVybiByZWFkQ29udHJhY3Qoe1xuICAgICAgICBjb250cmFjdDogb3B0aW9ucy5jb250cmFjdCxcbiAgICAgICAgbWV0aG9kOiBbRk5fU0VMRUNUT1IsIEZOX0lOUFVUUywgRk5fT1VUUFVUU10sXG4gICAgICAgIHBhcmFtczogW29wdGlvbnMuaWRdLFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG90YWxTdXBwbHkuanMubWFwIl0sIm5hbWVzIjpbInJlYWRDb250cmFjdCIsImVuY29kZUFiaVBhcmFtZXRlcnMiLCJkZWNvZGVBYmlQYXJhbWV0ZXJzIiwiZGV0ZWN0TWV0aG9kIiwiRk5fU0VMRUNUT1IiLCJGTl9JTlBVVFMiLCJ0eXBlIiwibmFtZSIsIkZOX09VVFBVVFMiLCJpc1RvdGFsU3VwcGx5U3VwcG9ydGVkIiwiYXZhaWxhYmxlU2VsZWN0b3JzIiwibWV0aG9kIiwiZW5jb2RlVG90YWxTdXBwbHlQYXJhbXMiLCJvcHRpb25zIiwiaWQiLCJlbmNvZGVUb3RhbFN1cHBseSIsInNsaWNlIiwiZGVjb2RlVG90YWxTdXBwbHlSZXN1bHQiLCJyZXN1bHQiLCJ0b3RhbFN1cHBseSIsImNvbnRyYWN0IiwicGFyYW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/totalSupply.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/uri.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/uri.js ***!
  \**********************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FN_SELECTOR: function() { return /* binding */ FN_SELECTOR; },\n/* harmony export */   decodeUriResult: function() { return /* binding */ decodeUriResult; },\n/* harmony export */   encodeUri: function() { return /* binding */ encodeUri; },\n/* harmony export */   encodeUriParams: function() { return /* binding */ encodeUriParams; },\n/* harmony export */   isUriSupported: function() { return /* binding */ isUriSupported; },\n/* harmony export */   uri: function() { return /* binding */ uri; }\n/* harmony export */ });\n/* harmony import */ var _transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../transaction/read-contract.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/transaction/read-contract.js\");\n/* harmony import */ var _utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../utils/abi/encodeAbiParameters.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/abi/encodeAbiParameters.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem */ \"(app-pages-browser)/./node_modules/viem/_esm/utils/abi/decodeAbiParameters.js\");\n/* harmony import */ var _utils_bytecode_detectExtension_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../utils/bytecode/detectExtension.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/bytecode/detectExtension.js\");\n\n\n\n\nconst FN_SELECTOR = \"0x0e89341c\";\nconst FN_INPUTS = [\n    {\n        type: \"uint256\",\n        name: \"tokenId\"\n    }\n];\nconst FN_OUTPUTS = [\n    {\n        type: \"string\"\n    }\n];\n/**\n * Checks if the `uri` method is supported by the given contract.\n * @param availableSelectors An array of 4byte function selectors of the contract. You can get this in various ways, such as using \"whatsabi\" or if you have the ABI of the contract available you can use it to generate the selectors.\n * @returns A boolean indicating if the `uri` method is supported.\n * @extension ERC1155\n * @example\n * ```ts\n * import { isUriSupported } from \"thirdweb/extensions/erc1155\";\n * const supported = isUriSupported([\"0x...\"]);\n * ```\n */ function isUriSupported(availableSelectors) {\n    return (0,_utils_bytecode_detectExtension_js__WEBPACK_IMPORTED_MODULE_0__.detectMethod)({\n        availableSelectors,\n        method: [\n            FN_SELECTOR,\n            FN_INPUTS,\n            FN_OUTPUTS\n        ]\n    });\n}\n/**\n * Encodes the parameters for the \"uri\" function.\n * @param options - The options for the uri function.\n * @returns The encoded ABI parameters.\n * @extension ERC1155\n * @example\n * ```ts\n * import { encodeUriParams } from \"thirdweb/extensions/erc1155\";\n * const result = encodeUriParams({\n *  tokenId: ...,\n * });\n * ```\n */ function encodeUriParams(options) {\n    return (0,_utils_abi_encodeAbiParameters_js__WEBPACK_IMPORTED_MODULE_1__.encodeAbiParameters)(FN_INPUTS, [\n        options.tokenId\n    ]);\n}\n/**\n * Encodes the \"uri\" function into a Hex string with its parameters.\n * @param options - The options for the uri function.\n * @returns The encoded hexadecimal string.\n * @extension ERC1155\n * @example\n * ```ts\n * import { encodeUri } from \"thirdweb/extensions/erc1155\";\n * const result = encodeUri({\n *  tokenId: ...,\n * });\n * ```\n */ function encodeUri(options) {\n    // we do a \"manual\" concat here to avoid the overhead of the \"concatHex\" function\n    // we can do this because we know the specific formats of the values\n    return FN_SELECTOR + encodeUriParams(options).slice(2);\n}\n/**\n * Decodes the result of the uri function call.\n * @param result - The hexadecimal result to decode.\n * @returns The decoded result as per the FN_OUTPUTS definition.\n * @extension ERC1155\n * @example\n * ```ts\n * import { decodeUriResult } from \"thirdweb/extensions/erc1155\";\n * const result = decodeUriResultResult(\"...\");\n * ```\n */ function decodeUriResult(result) {\n    return (0,viem__WEBPACK_IMPORTED_MODULE_2__.decodeAbiParameters)(FN_OUTPUTS, result)[0];\n}\n/**\n * Calls the \"uri\" function on the contract.\n * @param options - The options for the uri function.\n * @returns The parsed result of the function call.\n * @extension ERC1155\n * @example\n * ```ts\n * import { uri } from \"thirdweb/extensions/erc1155\";\n *\n * const result = await uri({\n *  contract,\n *  tokenId: ...,\n * });\n *\n * ```\n */ async function uri(options) {\n    return (0,_transaction_read_contract_js__WEBPACK_IMPORTED_MODULE_3__.readContract)({\n        contract: options.contract,\n        method: [\n            FN_SELECTOR,\n            FN_INPUTS,\n            FN_OUTPUTS\n        ],\n        params: [\n            options.tokenId\n        ]\n    });\n} //# sourceMappingURL=uri.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9leHRlbnNpb25zL2VyYzExNTUvX19nZW5lcmF0ZWRfXy9JRVJDMTE1NS9yZWFkL3VyaS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTJFO0FBQ1c7QUFDM0M7QUFDcUM7QUFDekUsTUFBTUksY0FBYyxhQUFhO0FBQ3hDLE1BQU1DLFlBQVk7SUFDZDtRQUNJQyxNQUFNO1FBQ05DLE1BQU07SUFDVjtDQUNIO0FBQ0QsTUFBTUMsYUFBYTtJQUNmO1FBQ0lGLE1BQU07SUFDVjtDQUNIO0FBQ0Q7Ozs7Ozs7Ozs7Q0FVQyxHQUNNLFNBQVNHLGVBQWVDLGtCQUFrQjtJQUM3QyxPQUFPUCxnRkFBWUEsQ0FBQztRQUNoQk87UUFDQUMsUUFBUTtZQUFDUDtZQUFhQztZQUFXRztTQUFXO0lBQ2hEO0FBQ0o7QUFDQTs7Ozs7Ozs7Ozs7O0NBWUMsR0FDTSxTQUFTSSxnQkFBZ0JDLE9BQU87SUFDbkMsT0FBT1osc0ZBQW1CQSxDQUFDSSxXQUFXO1FBQUNRLFFBQVFDLE9BQU87S0FBQztBQUMzRDtBQUNBOzs7Ozs7Ozs7Ozs7Q0FZQyxHQUNNLFNBQVNDLFVBQVVGLE9BQU87SUFDN0IsaUZBQWlGO0lBQ2pGLG9FQUFvRTtJQUNwRSxPQUFRVCxjQUNKUSxnQkFBZ0JDLFNBQVNHLEtBQUssQ0FBQztBQUN2QztBQUNBOzs7Ozs7Ozs7O0NBVUMsR0FDTSxTQUFTQyxnQkFBZ0JDLE1BQU07SUFDbEMsT0FBT2hCLHlEQUFtQkEsQ0FBQ00sWUFBWVUsT0FBTyxDQUFDLEVBQUU7QUFDckQ7QUFDQTs7Ozs7Ozs7Ozs7Ozs7O0NBZUMsR0FDTSxlQUFlQyxJQUFJTixPQUFPO0lBQzdCLE9BQU9iLDJFQUFZQSxDQUFDO1FBQ2hCb0IsVUFBVVAsUUFBUU8sUUFBUTtRQUMxQlQsUUFBUTtZQUFDUDtZQUFhQztZQUFXRztTQUFXO1FBQzVDYSxRQUFRO1lBQUNSLFFBQVFDLE9BQU87U0FBQztJQUM3QjtBQUNKLEVBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9leHRlbnNpb25zL2VyYzExNTUvX19nZW5lcmF0ZWRfXy9JRVJDMTE1NS9yZWFkL3VyaS5qcz9jZjMzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlYWRDb250cmFjdCB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi90cmFuc2FjdGlvbi9yZWFkLWNvbnRyYWN0LmpzXCI7XG5pbXBvcnQgeyBlbmNvZGVBYmlQYXJhbWV0ZXJzIH0gZnJvbSBcIi4uLy4uLy4uLy4uLy4uL3V0aWxzL2FiaS9lbmNvZGVBYmlQYXJhbWV0ZXJzLmpzXCI7XG5pbXBvcnQgeyBkZWNvZGVBYmlQYXJhbWV0ZXJzIH0gZnJvbSBcInZpZW1cIjtcbmltcG9ydCB7IGRldGVjdE1ldGhvZCB9IGZyb20gXCIuLi8uLi8uLi8uLi8uLi91dGlscy9ieXRlY29kZS9kZXRlY3RFeHRlbnNpb24uanNcIjtcbmV4cG9ydCBjb25zdCBGTl9TRUxFQ1RPUiA9IFwiMHgwZTg5MzQxY1wiO1xuY29uc3QgRk5fSU5QVVRTID0gW1xuICAgIHtcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwidG9rZW5JZFwiLFxuICAgIH0sXG5dO1xuY29uc3QgRk5fT1VUUFVUUyA9IFtcbiAgICB7XG4gICAgICAgIHR5cGU6IFwic3RyaW5nXCIsXG4gICAgfSxcbl07XG4vKipcbiAqIENoZWNrcyBpZiB0aGUgYHVyaWAgbWV0aG9kIGlzIHN1cHBvcnRlZCBieSB0aGUgZ2l2ZW4gY29udHJhY3QuXG4gKiBAcGFyYW0gYXZhaWxhYmxlU2VsZWN0b3JzIEFuIGFycmF5IG9mIDRieXRlIGZ1bmN0aW9uIHNlbGVjdG9ycyBvZiB0aGUgY29udHJhY3QuIFlvdSBjYW4gZ2V0IHRoaXMgaW4gdmFyaW91cyB3YXlzLCBzdWNoIGFzIHVzaW5nIFwid2hhdHNhYmlcIiBvciBpZiB5b3UgaGF2ZSB0aGUgQUJJIG9mIHRoZSBjb250cmFjdCBhdmFpbGFibGUgeW91IGNhbiB1c2UgaXQgdG8gZ2VuZXJhdGUgdGhlIHNlbGVjdG9ycy5cbiAqIEByZXR1cm5zIEEgYm9vbGVhbiBpbmRpY2F0aW5nIGlmIHRoZSBgdXJpYCBtZXRob2QgaXMgc3VwcG9ydGVkLlxuICogQGV4dGVuc2lvbiBFUkMxMTU1XG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGlzVXJpU3VwcG9ydGVkIH0gZnJvbSBcInRoaXJkd2ViL2V4dGVuc2lvbnMvZXJjMTE1NVwiO1xuICogY29uc3Qgc3VwcG9ydGVkID0gaXNVcmlTdXBwb3J0ZWQoW1wiMHguLi5cIl0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1VyaVN1cHBvcnRlZChhdmFpbGFibGVTZWxlY3RvcnMpIHtcbiAgICByZXR1cm4gZGV0ZWN0TWV0aG9kKHtcbiAgICAgICAgYXZhaWxhYmxlU2VsZWN0b3JzLFxuICAgICAgICBtZXRob2Q6IFtGTl9TRUxFQ1RPUiwgRk5fSU5QVVRTLCBGTl9PVVRQVVRTXSxcbiAgICB9KTtcbn1cbi8qKlxuICogRW5jb2RlcyB0aGUgcGFyYW1ldGVycyBmb3IgdGhlIFwidXJpXCIgZnVuY3Rpb24uXG4gKiBAcGFyYW0gb3B0aW9ucyAtIFRoZSBvcHRpb25zIGZvciB0aGUgdXJpIGZ1bmN0aW9uLlxuICogQHJldHVybnMgVGhlIGVuY29kZWQgQUJJIHBhcmFtZXRlcnMuXG4gKiBAZXh0ZW5zaW9uIEVSQzExNTVcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaW1wb3J0IHsgZW5jb2RlVXJpUGFyYW1zIH0gZnJvbSBcInRoaXJkd2ViL2V4dGVuc2lvbnMvZXJjMTE1NVwiO1xuICogY29uc3QgcmVzdWx0ID0gZW5jb2RlVXJpUGFyYW1zKHtcbiAqICB0b2tlbklkOiAuLi4sXG4gKiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZW5jb2RlVXJpUGFyYW1zKG9wdGlvbnMpIHtcbiAgICByZXR1cm4gZW5jb2RlQWJpUGFyYW1ldGVycyhGTl9JTlBVVFMsIFtvcHRpb25zLnRva2VuSWRdKTtcbn1cbi8qKlxuICogRW5jb2RlcyB0aGUgXCJ1cmlcIiBmdW5jdGlvbiBpbnRvIGEgSGV4IHN0cmluZyB3aXRoIGl0cyBwYXJhbWV0ZXJzLlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3IgdGhlIHVyaSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBlbmNvZGVkIGhleGFkZWNpbWFsIHN0cmluZy5cbiAqIEBleHRlbnNpb24gRVJDMTE1NVxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBlbmNvZGVVcmkgfSBmcm9tIFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMxMTU1XCI7XG4gKiBjb25zdCByZXN1bHQgPSBlbmNvZGVVcmkoe1xuICogIHRva2VuSWQ6IC4uLixcbiAqIH0pO1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGVVcmkob3B0aW9ucykge1xuICAgIC8vIHdlIGRvIGEgXCJtYW51YWxcIiBjb25jYXQgaGVyZSB0byBhdm9pZCB0aGUgb3ZlcmhlYWQgb2YgdGhlIFwiY29uY2F0SGV4XCIgZnVuY3Rpb25cbiAgICAvLyB3ZSBjYW4gZG8gdGhpcyBiZWNhdXNlIHdlIGtub3cgdGhlIHNwZWNpZmljIGZvcm1hdHMgb2YgdGhlIHZhbHVlc1xuICAgIHJldHVybiAoRk5fU0VMRUNUT1IgK1xuICAgICAgICBlbmNvZGVVcmlQYXJhbXMob3B0aW9ucykuc2xpY2UoMikpO1xufVxuLyoqXG4gKiBEZWNvZGVzIHRoZSByZXN1bHQgb2YgdGhlIHVyaSBmdW5jdGlvbiBjYWxsLlxuICogQHBhcmFtIHJlc3VsdCAtIFRoZSBoZXhhZGVjaW1hbCByZXN1bHQgdG8gZGVjb2RlLlxuICogQHJldHVybnMgVGhlIGRlY29kZWQgcmVzdWx0IGFzIHBlciB0aGUgRk5fT1VUUFVUUyBkZWZpbml0aW9uLlxuICogQGV4dGVuc2lvbiBFUkMxMTU1XG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGRlY29kZVVyaVJlc3VsdCB9IGZyb20gXCJ0aGlyZHdlYi9leHRlbnNpb25zL2VyYzExNTVcIjtcbiAqIGNvbnN0IHJlc3VsdCA9IGRlY29kZVVyaVJlc3VsdFJlc3VsdChcIi4uLlwiKTtcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlVXJpUmVzdWx0KHJlc3VsdCkge1xuICAgIHJldHVybiBkZWNvZGVBYmlQYXJhbWV0ZXJzKEZOX09VVFBVVFMsIHJlc3VsdClbMF07XG59XG4vKipcbiAqIENhbGxzIHRoZSBcInVyaVwiIGZ1bmN0aW9uIG9uIHRoZSBjb250cmFjdC5cbiAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIHRoZSB1cmkgZnVuY3Rpb24uXG4gKiBAcmV0dXJucyBUaGUgcGFyc2VkIHJlc3VsdCBvZiB0aGUgZnVuY3Rpb24gY2FsbC5cbiAqIEBleHRlbnNpb24gRVJDMTE1NVxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyB1cmkgfSBmcm9tIFwidGhpcmR3ZWIvZXh0ZW5zaW9ucy9lcmMxMTU1XCI7XG4gKlxuICogY29uc3QgcmVzdWx0ID0gYXdhaXQgdXJpKHtcbiAqICBjb250cmFjdCxcbiAqICB0b2tlbklkOiAuLi4sXG4gKiB9KTtcbiAqXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVyaShvcHRpb25zKSB7XG4gICAgcmV0dXJuIHJlYWRDb250cmFjdCh7XG4gICAgICAgIGNvbnRyYWN0OiBvcHRpb25zLmNvbnRyYWN0LFxuICAgICAgICBtZXRob2Q6IFtGTl9TRUxFQ1RPUiwgRk5fSU5QVVRTLCBGTl9PVVRQVVRTXSxcbiAgICAgICAgcGFyYW1zOiBbb3B0aW9ucy50b2tlbklkXSxcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVyaS5qcy5tYXAiXSwibmFtZXMiOlsicmVhZENvbnRyYWN0IiwiZW5jb2RlQWJpUGFyYW1ldGVycyIsImRlY29kZUFiaVBhcmFtZXRlcnMiLCJkZXRlY3RNZXRob2QiLCJGTl9TRUxFQ1RPUiIsIkZOX0lOUFVUUyIsInR5cGUiLCJuYW1lIiwiRk5fT1VUUFVUUyIsImlzVXJpU3VwcG9ydGVkIiwiYXZhaWxhYmxlU2VsZWN0b3JzIiwibWV0aG9kIiwiZW5jb2RlVXJpUGFyYW1zIiwib3B0aW9ucyIsInRva2VuSWQiLCJlbmNvZGVVcmkiLCJzbGljZSIsImRlY29kZVVyaVJlc3VsdCIsInJlc3VsdCIsInVyaSIsImNvbnRyYWN0IiwicGFyYW1zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/uri.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/read/getNFT.js":
/*!**************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/extensions/erc1155/read/getNFT.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNFT: function() { return /* binding */ getNFT; },\n/* harmony export */   isGetNFTSupported: function() { return /* reexport safe */ _generated_IERC1155_read_uri_js__WEBPACK_IMPORTED_MODULE_0__.isUriSupported; }\n/* harmony export */ });\n/* harmony import */ var _utils_nft_fetchTokenMetadata_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../utils/nft/fetchTokenMetadata.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/nft/fetchTokenMetadata.js\");\n/* harmony import */ var _utils_nft_parseNft_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../utils/nft/parseNft.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/nft/parseNft.js\");\n/* harmony import */ var _generated_IERC1155_read_totalSupply_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../__generated__/IERC1155/read/totalSupply.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/totalSupply.js\");\n/* harmony import */ var _generated_IERC1155_read_uri_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../__generated__/IERC1155/read/uri.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/__generated__/IERC1155/read/uri.js\");\n\n\n\n\n\n/**\n * Retrieves information about a specific ERC1155 non-fungible token (NFT).\n * @param options - The options for retrieving the NFT.\n * @returns A promise that resolves to the NFT object.\n * @extension ERC1155\n * @example\n * ```ts\n * import { getNFT } from \"thirdweb/extensions/erc1155\";\n * const nft = await getNFT({\n *  contract,\n *  tokenId: 1n,\n * });\n * ```\n */ async function getNFT(options) {\n    const [tokenUri, supply] = await Promise.all([\n        (0,_generated_IERC1155_read_uri_js__WEBPACK_IMPORTED_MODULE_0__.uri)({\n            contract: options.contract,\n            tokenId: options.tokenId\n        }),\n        (0,_generated_IERC1155_read_totalSupply_js__WEBPACK_IMPORTED_MODULE_1__.totalSupply)({\n            contract: options.contract,\n            id: options.tokenId\n        }).catch(()=>0n)\n    ]);\n    return (0,_utils_nft_parseNft_js__WEBPACK_IMPORTED_MODULE_2__.parseNFT)(await (0,_utils_nft_fetchTokenMetadata_js__WEBPACK_IMPORTED_MODULE_3__.fetchTokenMetadata)({\n        client: options.contract.client,\n        tokenId: options.tokenId,\n        tokenUri\n    }).catch(()=>({\n            id: options.tokenId,\n            type: \"ERC1155\",\n            uri: tokenUri\n        })), {\n        tokenId: options.tokenId,\n        tokenUri,\n        type: \"ERC1155\",\n        owner: null,\n        supply\n    });\n} //# sourceMappingURL=getNFT.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS9leHRlbnNpb25zL2VyYzExNTUvcmVhZC9nZXRORlQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQThFO0FBQ3BCO0FBQ2tCO0FBQ2hCO0FBQ2dDO0FBQzVGOzs7Ozs7Ozs7Ozs7O0NBYUMsR0FDTSxlQUFlTSxPQUFPQyxPQUFPO0lBQ2hDLE1BQU0sQ0FBQ0MsVUFBVUMsT0FBTyxHQUFHLE1BQU1DLFFBQVFDLEdBQUcsQ0FBQztRQUN6Q1Isb0VBQUdBLENBQUM7WUFDQVMsVUFBVUwsUUFBUUssUUFBUTtZQUMxQkMsU0FBU04sUUFBUU0sT0FBTztRQUM1QjtRQUNBWCxvRkFBV0EsQ0FBQztZQUNSVSxVQUFVTCxRQUFRSyxRQUFRO1lBQzFCRSxJQUFJUCxRQUFRTSxPQUFPO1FBRXZCLEdBQUdFLEtBQUssQ0FBQyxJQUFNLEVBQUU7S0FDcEI7SUFDRCxPQUFPZCxnRUFBUUEsQ0FBQyxNQUFNRCxvRkFBa0JBLENBQUM7UUFDckNnQixRQUFRVCxRQUFRSyxRQUFRLENBQUNJLE1BQU07UUFDL0JILFNBQVNOLFFBQVFNLE9BQU87UUFDeEJMO0lBQ0osR0FBR08sS0FBSyxDQUFDLElBQU87WUFDWkQsSUFBSVAsUUFBUU0sT0FBTztZQUNuQkksTUFBTTtZQUNOZCxLQUFLSztRQUNULEtBQUs7UUFDREssU0FBU04sUUFBUU0sT0FBTztRQUN4Qkw7UUFDQVMsTUFBTTtRQUNOQyxPQUFPO1FBQ1BUO0lBQ0o7QUFDSixFQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vZXh0ZW5zaW9ucy9lcmMxMTU1L3JlYWQvZ2V0TkZULmpzPzBjOGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmV0Y2hUb2tlbk1ldGFkYXRhIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL25mdC9mZXRjaFRva2VuTWV0YWRhdGEuanNcIjtcbmltcG9ydCB7IHBhcnNlTkZUIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzL25mdC9wYXJzZU5mdC5qc1wiO1xuaW1wb3J0IHsgdG90YWxTdXBwbHkgfSBmcm9tIFwiLi4vX19nZW5lcmF0ZWRfXy9JRVJDMTE1NS9yZWFkL3RvdGFsU3VwcGx5LmpzXCI7XG5pbXBvcnQgeyB1cmkgfSBmcm9tIFwiLi4vX19nZW5lcmF0ZWRfXy9JRVJDMTE1NS9yZWFkL3VyaS5qc1wiO1xuZXhwb3J0IHsgaXNVcmlTdXBwb3J0ZWQgYXMgaXNHZXRORlRTdXBwb3J0ZWQgfSBmcm9tIFwiLi4vX19nZW5lcmF0ZWRfXy9JRVJDMTE1NS9yZWFkL3VyaS5qc1wiO1xuLyoqXG4gKiBSZXRyaWV2ZXMgaW5mb3JtYXRpb24gYWJvdXQgYSBzcGVjaWZpYyBFUkMxMTU1IG5vbi1mdW5naWJsZSB0b2tlbiAoTkZUKS5cbiAqIEBwYXJhbSBvcHRpb25zIC0gVGhlIG9wdGlvbnMgZm9yIHJldHJpZXZpbmcgdGhlIE5GVC5cbiAqIEByZXR1cm5zIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSBORlQgb2JqZWN0LlxuICogQGV4dGVuc2lvbiBFUkMxMTU1XG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IGdldE5GVCB9IGZyb20gXCJ0aGlyZHdlYi9leHRlbnNpb25zL2VyYzExNTVcIjtcbiAqIGNvbnN0IG5mdCA9IGF3YWl0IGdldE5GVCh7XG4gKiAgY29udHJhY3QsXG4gKiAgdG9rZW5JZDogMW4sXG4gKiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TkZUKG9wdGlvbnMpIHtcbiAgICBjb25zdCBbdG9rZW5VcmksIHN1cHBseV0gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgIHVyaSh7XG4gICAgICAgICAgICBjb250cmFjdDogb3B0aW9ucy5jb250cmFjdCxcbiAgICAgICAgICAgIHRva2VuSWQ6IG9wdGlvbnMudG9rZW5JZCxcbiAgICAgICAgfSksXG4gICAgICAgIHRvdGFsU3VwcGx5KHtcbiAgICAgICAgICAgIGNvbnRyYWN0OiBvcHRpb25zLmNvbnRyYWN0LFxuICAgICAgICAgICAgaWQ6IG9wdGlvbnMudG9rZW5JZCxcbiAgICAgICAgICAgIC8vIGluIGNhc2VzIHdoZXJlIHRoZSBzdXBwbHkgaXMgbm90IGF2YWlsYWJsZSAtPiBmYWxsIGJhY2sgdG8gMFxuICAgICAgICB9KS5jYXRjaCgoKSA9PiAwbiksXG4gICAgXSk7XG4gICAgcmV0dXJuIHBhcnNlTkZUKGF3YWl0IGZldGNoVG9rZW5NZXRhZGF0YSh7XG4gICAgICAgIGNsaWVudDogb3B0aW9ucy5jb250cmFjdC5jbGllbnQsXG4gICAgICAgIHRva2VuSWQ6IG9wdGlvbnMudG9rZW5JZCxcbiAgICAgICAgdG9rZW5VcmksXG4gICAgfSkuY2F0Y2goKCkgPT4gKHtcbiAgICAgICAgaWQ6IG9wdGlvbnMudG9rZW5JZCxcbiAgICAgICAgdHlwZTogXCJFUkMxMTU1XCIsXG4gICAgICAgIHVyaTogdG9rZW5VcmksXG4gICAgfSkpLCB7XG4gICAgICAgIHRva2VuSWQ6IG9wdGlvbnMudG9rZW5JZCxcbiAgICAgICAgdG9rZW5VcmksXG4gICAgICAgIHR5cGU6IFwiRVJDMTE1NVwiLFxuICAgICAgICBvd25lcjogbnVsbCxcbiAgICAgICAgc3VwcGx5LFxuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0TkZULmpzLm1hcCJdLCJuYW1lcyI6WyJmZXRjaFRva2VuTWV0YWRhdGEiLCJwYXJzZU5GVCIsInRvdGFsU3VwcGx5IiwidXJpIiwiaXNVcmlTdXBwb3J0ZWQiLCJpc0dldE5GVFN1cHBvcnRlZCIsImdldE5GVCIsIm9wdGlvbnMiLCJ0b2tlblVyaSIsInN1cHBseSIsIlByb21pc2UiLCJhbGwiLCJjb250cmFjdCIsInRva2VuSWQiLCJpZCIsImNhdGNoIiwiY2xpZW50IiwidHlwZSIsIm93bmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/extensions/erc1155/read/getNFT.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/base64/base64.js":
/*!***************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/base64/base64.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBase64JSON: function() { return /* binding */ isBase64JSON; },\n/* harmony export */   parseBase64String: function() { return /* binding */ parseBase64String; }\n/* harmony export */ });\n/* harmony import */ var _uint8_array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../uint8-array.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/uint8-array.js\");\n\n/**\n * Checks if a given string is a base64 encoded JSON string.\n * @param input - The string to be checked.\n * @returns True if the input string starts with \"data:application/json;base64\", false otherwise.\n * @example\n * ```ts\n * isBase64JSON(\"data:application/json;base64,eyJ0ZXN0IjoiYmFzZTY0In0=\")\n * // true\n * ```\n */ function isBase64JSON(input) {\n    if (input.startsWith(\"data:application/json;base64\")) {\n        return true;\n    }\n    return false;\n}\n/**\n * Parses a base64 string and returns the decoded string.\n * @param input - The base64 string to parse.\n * @returns The decoded string.\n * @example\n * ```ts\n * parseBase64String(\"data:application/json;base64,eyJ0ZXN0IjoiYmFzZTY0In0=\")\n * // '{\"test\":\"base64\"}'\n * ```\n */ function parseBase64String(input) {\n    const [, base64] = input.split(\",\");\n    return (0,_uint8_array_js__WEBPACK_IMPORTED_MODULE_0__.base64ToString)(base64);\n} //# sourceMappingURL=base64.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9iYXNlNjQvYmFzZTY0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtRDtBQUNuRDs7Ozs7Ozs7O0NBU0MsR0FDTSxTQUFTQyxhQUFhQyxLQUFLO0lBQzlCLElBQUlBLE1BQU1DLFVBQVUsQ0FBQyxpQ0FBaUM7UUFDbEQsT0FBTztJQUNYO0lBQ0EsT0FBTztBQUNYO0FBQ0E7Ozs7Ozs7OztDQVNDLEdBQ00sU0FBU0Msa0JBQWtCRixLQUFLO0lBQ25DLE1BQU0sR0FBR0csT0FBTyxHQUFHSCxNQUFNSSxLQUFLLENBQUM7SUFDL0IsT0FBT04sK0RBQWNBLENBQUNLO0FBQzFCLEVBQ0Esa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9iYXNlNjQvYmFzZTY0LmpzP2YwNmQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmFzZTY0VG9TdHJpbmcgfSBmcm9tIFwiLi4vdWludDgtYXJyYXkuanNcIjtcbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gc3RyaW5nIGlzIGEgYmFzZTY0IGVuY29kZWQgSlNPTiBzdHJpbmcuXG4gKiBAcGFyYW0gaW5wdXQgLSBUaGUgc3RyaW5nIHRvIGJlIGNoZWNrZWQuXG4gKiBAcmV0dXJucyBUcnVlIGlmIHRoZSBpbnB1dCBzdHJpbmcgc3RhcnRzIHdpdGggXCJkYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0XCIsIGZhbHNlIG90aGVyd2lzZS5cbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogaXNCYXNlNjRKU09OKFwiZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUowWlhOMElqb2lZbUZ6WlRZMEluMD1cIilcbiAqIC8vIHRydWVcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNCYXNlNjRKU09OKGlucHV0KSB7XG4gICAgaWYgKGlucHV0LnN0YXJ0c1dpdGgoXCJkYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0XCIpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIFBhcnNlcyBhIGJhc2U2NCBzdHJpbmcgYW5kIHJldHVybnMgdGhlIGRlY29kZWQgc3RyaW5nLlxuICogQHBhcmFtIGlucHV0IC0gVGhlIGJhc2U2NCBzdHJpbmcgdG8gcGFyc2UuXG4gKiBAcmV0dXJucyBUaGUgZGVjb2RlZCBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIHBhcnNlQmFzZTY0U3RyaW5nKFwiZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUowWlhOMElqb2lZbUZ6WlRZMEluMD1cIilcbiAqIC8vICd7XCJ0ZXN0XCI6XCJiYXNlNjRcIn0nXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlQmFzZTY0U3RyaW5nKGlucHV0KSB7XG4gICAgY29uc3QgWywgYmFzZTY0XSA9IGlucHV0LnNwbGl0KFwiLFwiKTtcbiAgICByZXR1cm4gYmFzZTY0VG9TdHJpbmcoYmFzZTY0KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5qcy5tYXAiXSwibmFtZXMiOlsiYmFzZTY0VG9TdHJpbmciLCJpc0Jhc2U2NEpTT04iLCJpbnB1dCIsInN0YXJ0c1dpdGgiLCJwYXJzZUJhc2U2NFN0cmluZyIsImJhc2U2NCIsInNwbGl0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/base64/base64.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/nft/fetchTokenMetadata.js":
/*!************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/nft/fetchTokenMetadata.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchTokenMetadata: function() { return /* binding */ fetchTokenMetadata; }\n/* harmony export */ });\n/* harmony import */ var _base64_base64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base64/base64.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/base64/base64.js\");\n/* harmony import */ var _encoding_hex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../encoding/hex.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/encoding/hex.js\");\n\n\n/**\n * Fetches the metadata for a token.\n *\n * @param options - The options for fetching the token metadata.\n * @returns The token metadata.\n * @internal\n */ async function fetchTokenMetadata(options) {\n    const { client, tokenId, tokenUri } = options;\n    // handle case where the URI is a base64 encoded JSON (onchain nft)\n    if ((0,_base64_base64_js__WEBPACK_IMPORTED_MODULE_0__.isBase64JSON)(tokenUri)) {\n        try {\n            return JSON.parse((0,_base64_base64_js__WEBPACK_IMPORTED_MODULE_0__.parseBase64String)(tokenUri));\n        } catch (e) {\n            console.error(\"Failed to fetch base64 encoded NFT\", {\n                tokenId,\n                tokenUri\n            }, e);\n            throw e;\n        }\n    }\n    // in all other cases we will need the `download` function from storage\n    const { download } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../../storage/download.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/storage/download.js\"));\n    // handle non-dynamic uris (most common case -> skip the other checks)\n    try {\n        if (!tokenUri.includes(\"{id}\")) {\n            return await (await download({\n                client,\n                uri: tokenUri\n            })).json();\n        }\n    } catch (e) {\n        console.error(\"Failed to fetch non-dynamic NFT\", {\n            tokenId,\n            tokenUri\n        }, e);\n        throw e;\n    }\n    // DYNAMIC NFT FORMATS (2 options, sadly has to be waterfall)\n    try {\n        try {\n            // try first dynamic id format\n            return await (await download({\n                client,\n                uri: tokenUri.replace(\"{id}\", (0,_encoding_hex_js__WEBPACK_IMPORTED_MODULE_1__.numberToHex)(tokenId, {\n                    size: 32\n                }).slice(2))\n            })).json();\n        } catch (e) {\n            // otherwise attempt the second format\n            return await (await download({\n                client,\n                uri: tokenUri.replace(\"{id}\", tokenId.toString())\n            })).json();\n        }\n    } catch (e) {\n        console.error(\"Failed to fetch dynamic NFT\", {\n            tokenId,\n            tokenUri\n        }, e);\n        throw e;\n    }\n} //# sourceMappingURL=fetchTokenMetadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9uZnQvZmV0Y2hUb2tlbk1ldGFkYXRhLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzRTtBQUNyQjtBQUNqRDs7Ozs7O0NBTUMsR0FDTSxlQUFlRyxtQkFBbUJDLE9BQU87SUFDNUMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsUUFBUSxFQUFFLEdBQUdIO0lBQ3RDLG1FQUFtRTtJQUNuRSxJQUFJSiwrREFBWUEsQ0FBQ08sV0FBVztRQUN4QixJQUFJO1lBQ0EsT0FBT0MsS0FBS0MsS0FBSyxDQUFDUixvRUFBaUJBLENBQUNNO1FBQ3hDLEVBQ0EsT0FBT0csR0FBRztZQUNOQyxRQUFRQyxLQUFLLENBQUMsc0NBQXNDO2dCQUFFTjtnQkFBU0M7WUFBUyxHQUFHRztZQUMzRSxNQUFNQTtRQUNWO0lBQ0o7SUFDQSx1RUFBdUU7SUFDdkUsTUFBTSxFQUFFRyxRQUFRLEVBQUUsR0FBRyxNQUFNLGlNQUFtQztJQUM5RCxzRUFBc0U7SUFDdEUsSUFBSTtRQUNBLElBQUksQ0FBQ04sU0FBU08sUUFBUSxDQUFDLFNBQVM7WUFDNUIsT0FBTyxNQUFNLENBQUMsTUFBTUQsU0FBUztnQkFBRVI7Z0JBQVFVLEtBQUtSO1lBQVMsRUFBQyxFQUFHUyxJQUFJO1FBQ2pFO0lBQ0osRUFDQSxPQUFPTixHQUFHO1FBQ05DLFFBQVFDLEtBQUssQ0FBQyxtQ0FBbUM7WUFBRU47WUFBU0M7UUFBUyxHQUFHRztRQUN4RSxNQUFNQTtJQUNWO0lBQ0EsNkRBQTZEO0lBQzdELElBQUk7UUFDQSxJQUFJO1lBQ0EsOEJBQThCO1lBQzlCLE9BQU8sTUFBTSxDQUFDLE1BQU1HLFNBQVM7Z0JBQ3pCUjtnQkFDQVUsS0FBS1IsU0FBU1UsT0FBTyxDQUFDLFFBQVFmLDZEQUFXQSxDQUFDSSxTQUFTO29CQUFFWSxNQUFNO2dCQUFHLEdBQUdDLEtBQUssQ0FBQztZQUMzRSxFQUFDLEVBQUdILElBQUk7UUFDWixFQUNBLFVBQU07WUFDRixzQ0FBc0M7WUFDdEMsT0FBTyxNQUFNLENBQUMsTUFBTUgsU0FBUztnQkFDekJSO2dCQUNBVSxLQUFLUixTQUFTVSxPQUFPLENBQUMsUUFBUVgsUUFBUWMsUUFBUTtZQUNsRCxFQUFDLEVBQUdKLElBQUk7UUFDWjtJQUNKLEVBQ0EsT0FBT04sR0FBRztRQUNOQyxRQUFRQyxLQUFLLENBQUMsK0JBQStCO1lBQUVOO1lBQVNDO1FBQVMsR0FBR0c7UUFDcEUsTUFBTUE7SUFDVjtBQUNKLEVBQ0EsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy9uZnQvZmV0Y2hUb2tlbk1ldGFkYXRhLmpzPzZhYTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNCYXNlNjRKU09OLCBwYXJzZUJhc2U2NFN0cmluZyB9IGZyb20gXCIuLi9iYXNlNjQvYmFzZTY0LmpzXCI7XG5pbXBvcnQgeyBudW1iZXJUb0hleCB9IGZyb20gXCIuLi9lbmNvZGluZy9oZXguanNcIjtcbi8qKlxuICogRmV0Y2hlcyB0aGUgbWV0YWRhdGEgZm9yIGEgdG9rZW4uXG4gKlxuICogQHBhcmFtIG9wdGlvbnMgLSBUaGUgb3B0aW9ucyBmb3IgZmV0Y2hpbmcgdGhlIHRva2VuIG1ldGFkYXRhLlxuICogQHJldHVybnMgVGhlIHRva2VuIG1ldGFkYXRhLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBmZXRjaFRva2VuTWV0YWRhdGEob3B0aW9ucykge1xuICAgIGNvbnN0IHsgY2xpZW50LCB0b2tlbklkLCB0b2tlblVyaSB9ID0gb3B0aW9ucztcbiAgICAvLyBoYW5kbGUgY2FzZSB3aGVyZSB0aGUgVVJJIGlzIGEgYmFzZTY0IGVuY29kZWQgSlNPTiAob25jaGFpbiBuZnQpXG4gICAgaWYgKGlzQmFzZTY0SlNPTih0b2tlblVyaSkpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHBhcnNlQmFzZTY0U3RyaW5nKHRva2VuVXJpKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZmV0Y2ggYmFzZTY0IGVuY29kZWQgTkZUXCIsIHsgdG9rZW5JZCwgdG9rZW5VcmkgfSwgZSk7XG4gICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIGluIGFsbCBvdGhlciBjYXNlcyB3ZSB3aWxsIG5lZWQgdGhlIGBkb3dubG9hZGAgZnVuY3Rpb24gZnJvbSBzdG9yYWdlXG4gICAgY29uc3QgeyBkb3dubG9hZCB9ID0gYXdhaXQgaW1wb3J0KFwiLi4vLi4vc3RvcmFnZS9kb3dubG9hZC5qc1wiKTtcbiAgICAvLyBoYW5kbGUgbm9uLWR5bmFtaWMgdXJpcyAobW9zdCBjb21tb24gY2FzZSAtPiBza2lwIHRoZSBvdGhlciBjaGVja3MpXG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKCF0b2tlblVyaS5pbmNsdWRlcyhcIntpZH1cIikpIHtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCAoYXdhaXQgZG93bmxvYWQoeyBjbGllbnQsIHVyaTogdG9rZW5VcmkgfSkpLmpzb24oKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGZldGNoIG5vbi1keW5hbWljIE5GVFwiLCB7IHRva2VuSWQsIHRva2VuVXJpIH0sIGUpO1xuICAgICAgICB0aHJvdyBlO1xuICAgIH1cbiAgICAvLyBEWU5BTUlDIE5GVCBGT1JNQVRTICgyIG9wdGlvbnMsIHNhZGx5IGhhcyB0byBiZSB3YXRlcmZhbGwpXG4gICAgdHJ5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIHRyeSBmaXJzdCBkeW5hbWljIGlkIGZvcm1hdFxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IChhd2FpdCBkb3dubG9hZCh7XG4gICAgICAgICAgICAgICAgY2xpZW50LFxuICAgICAgICAgICAgICAgIHVyaTogdG9rZW5VcmkucmVwbGFjZShcIntpZH1cIiwgbnVtYmVyVG9IZXgodG9rZW5JZCwgeyBzaXplOiAzMiB9KS5zbGljZSgyKSksXG4gICAgICAgICAgICB9KSkuanNvbigpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgIC8vIG90aGVyd2lzZSBhdHRlbXB0IHRoZSBzZWNvbmQgZm9ybWF0XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgKGF3YWl0IGRvd25sb2FkKHtcbiAgICAgICAgICAgICAgICBjbGllbnQsXG4gICAgICAgICAgICAgICAgdXJpOiB0b2tlblVyaS5yZXBsYWNlKFwie2lkfVwiLCB0b2tlbklkLnRvU3RyaW5nKCkpLFxuICAgICAgICAgICAgfSkpLmpzb24oKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGZldGNoIGR5bmFtaWMgTkZUXCIsIHsgdG9rZW5JZCwgdG9rZW5VcmkgfSwgZSk7XG4gICAgICAgIHRocm93IGU7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmV0Y2hUb2tlbk1ldGFkYXRhLmpzLm1hcCJdLCJuYW1lcyI6WyJpc0Jhc2U2NEpTT04iLCJwYXJzZUJhc2U2NFN0cmluZyIsIm51bWJlclRvSGV4IiwiZmV0Y2hUb2tlbk1ldGFkYXRhIiwib3B0aW9ucyIsImNsaWVudCIsInRva2VuSWQiLCJ0b2tlblVyaSIsIkpTT04iLCJwYXJzZSIsImUiLCJjb25zb2xlIiwiZXJyb3IiLCJkb3dubG9hZCIsImluY2x1ZGVzIiwidXJpIiwianNvbiIsInJlcGxhY2UiLCJzaXplIiwic2xpY2UiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/nft/fetchTokenMetadata.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/text-decoder.js":
/*!**************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/text-decoder.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cachedTextDecoder: function() { return /* binding */ cachedTextDecoder; }\n/* harmony export */ });\nlet textDecoder;\n/**\n * Re-using the same textdecoder is faster.\n *\n * @returns\n * @internal\n */ function cachedTextDecoder() {\n    if (!textDecoder) {\n        textDecoder = new TextDecoder();\n    }\n    return textDecoder;\n} //# sourceMappingURL=text-decoder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90aGlyZHdlYi9kaXN0L2VzbS91dGlscy90ZXh0LWRlY29kZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLElBQUlBO0FBQ0o7Ozs7O0NBS0MsR0FDTSxTQUFTQztJQUNaLElBQUksQ0FBQ0QsYUFBYTtRQUNkQSxjQUFjLElBQUlFO0lBQ3RCO0lBQ0EsT0FBT0Y7QUFDWCxFQUNBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGhpcmR3ZWIvZGlzdC9lc20vdXRpbHMvdGV4dC1kZWNvZGVyLmpzPzg1NWYiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IHRleHREZWNvZGVyO1xuLyoqXG4gKiBSZS11c2luZyB0aGUgc2FtZSB0ZXh0ZGVjb2RlciBpcyBmYXN0ZXIuXG4gKlxuICogQHJldHVybnNcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gY2FjaGVkVGV4dERlY29kZXIoKSB7XG4gICAgaWYgKCF0ZXh0RGVjb2Rlcikge1xuICAgICAgICB0ZXh0RGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xuICAgIH1cbiAgICByZXR1cm4gdGV4dERlY29kZXI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10ZXh0LWRlY29kZXIuanMubWFwIl0sIm5hbWVzIjpbInRleHREZWNvZGVyIiwiY2FjaGVkVGV4dERlY29kZXIiLCJUZXh0RGVjb2RlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/text-decoder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/uint8-array.js":
/*!*************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/utils/uint8-array.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   areUint8ArraysEqual: function() { return /* binding */ areUint8ArraysEqual; },\n/* harmony export */   base64ToString: function() { return /* binding */ base64ToString; },\n/* harmony export */   base64ToUint8Array: function() { return /* binding */ base64ToUint8Array; },\n/* harmony export */   base64UrlToBase64: function() { return /* binding */ base64UrlToBase64; },\n/* harmony export */   compareUint8Arrays: function() { return /* binding */ compareUint8Arrays; },\n/* harmony export */   concatUint8Arrays: function() { return /* binding */ concatUint8Arrays; },\n/* harmony export */   isUint8Array: function() { return /* binding */ isUint8Array; },\n/* harmony export */   uint8ArrayToBase64: function() { return /* binding */ uint8ArrayToBase64; }\n/* harmony export */ });\n/* harmony import */ var _text_decoder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./text-decoder.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/text-decoder.js\");\n\nconst uint8ArrayStringified = \"[object Uint8Array]\";\n/**\n * Throw a `TypeError` if the given value is not an instance of `Uint8Array`.\n * @example\n * ```ts\n * import {assertUint8Array} from 'uint8array-extras';\n *\n * try {\n * assertUint8Array(new ArrayBuffer(10)); // Throws a TypeError\n * } catch (error) {\n * console.error(error.message);\n * }\n * ```\n */ function assertUint8Array(value) {\n    if (!isUint8Array(value)) {\n        throw new TypeError(\"Expected `Uint8Array`, got `\".concat(typeof value, \"`\"));\n    }\n}\n/**\n * Check if the given value is an instance of `Uint8Array`.\n *\n * Replacement for [`Buffer.isBuffer()`](https://nodejs.org/api/buffer.html#static-method-bufferisbufferobj).\n * @example\n * ```ts\n * import {isUint8Array} from 'uint8array-extras';\n *\n * console.log(isUint8Array(new Uint8Array()));\n * //=> true\n *\n * console.log(isUint8Array(Buffer.from('x')));\n * //=> true\n *\n * console.log(isUint8Array(new ArrayBuffer(10)));\n * //=> false\n * ```\n */ function isUint8Array(value) {\n    if (!value) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    return Object.prototype.toString.call(value) === uint8ArrayStringified;\n}\n/**\n * Check if two arrays are identical by verifying that they contain the same bytes in the same sequence.\n *\n * Replacement for [`Buffer#equals()`](https://nodejs.org/api/buffer.html#bufequalsotherbuffer).\n * @example\n * ```ts\n * import {areUint8ArraysEqual} from 'uint8array-extras';\n *\n * const a = new Uint8Array([1, 2, 3]);\n * const b = new Uint8Array([1, 2, 3]);\n * const c = new Uint8Array([4, 5, 6]);\n *\n * console.log(areUint8ArraysEqual(a, b));\n * //=> true\n *\n * console.log(areUint8ArraysEqual(a, c));\n * //=> false\n * ```\n */ function areUint8ArraysEqual(a, b) {\n    assertUint8Array(a);\n    assertUint8Array(b);\n    if (a === b) {\n        return true;\n    }\n    if (a.length !== b.length) {\n        return false;\n    }\n    for(let index = 0; index < a.length; index++){\n        if (a[index] !== b[index]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Convert a `Uint8Array` (containing a UTF-8 string) to a string.\n *\n * Replacement for [`Buffer#toString()`](https://nodejs.org/api/buffer.html#buftostringencoding-start-end).\n * @example\n * ```ts\n * import {uint8ArrayToString} from 'uint8array-extras';\n *\n * const byteArray = new Uint8Array([72, 101, 108, 108, 111]);\n *\n * console.log(uint8ArrayToString(byteArray));\n * //=> 'Hello'\n * ```\n */ function uint8ArrayToString(array) {\n    assertUint8Array(array);\n    return (0,_text_decoder_js__WEBPACK_IMPORTED_MODULE_0__.cachedTextDecoder)().decode(array);\n}\nfunction assertString(value) {\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"Expected `string`, got `\".concat(typeof value, \"`\"));\n    }\n}\nfunction base64UrlToBase64(base64url) {\n    // Replace Base64URL characters with Base64 characters\n    let base64 = base64url.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    // Add padding if necessary\n    const padding = base64.length % 4;\n    if (padding !== 0) {\n        base64 += \"=\".repeat(4 - padding);\n    }\n    return base64;\n}\n/**\n * Convert a Base64-encoded or [Base64URL](https://base64.guru/standards/base64url)-encoded string to a `Uint8Array`.\n *\n * Replacement for [`Buffer.from('SGVsbG8=', 'base64')`](https://nodejs.org/api/buffer.html#static-method-bufferfromstring-encoding).\n * @example\n * ```ts\n * import {base64ToUint8Array} from 'uint8array-extras';\n *\n * console.log(base64ToUint8Array('SGVsbG8='));\n * //=> Uint8Array [72, 101, 108, 108, 111]\n * ```\n */ function base64ToUint8Array(base64String) {\n    assertString(base64String);\n    return Uint8Array.from(globalThis.atob(base64UrlToBase64(base64String)), // biome-ignore lint/style/noNonNullAssertion: we know that the code points exist\n    (x)=>x.codePointAt(0));\n}\n/**\n * Decode a Base64-encoded or [Base64URL](https://base64.guru/standards/base64url)-encoded string to a string.\n *\n * Replacement for `Buffer.from('SGVsbG8=', 'base64').toString()` and [`atob()`](https://developer.mozilla.org/en-US/docs/Web/API/atob).\n * @example\n * ```ts\n * import {base64ToString} from 'uint8array-extras';\n *\n * console.log(base64ToString('SGVsbG8='));\n * //=> 'Hello'\n * ```\n */ function base64ToString(base64String) {\n    assertString(base64String);\n    return uint8ArrayToString(base64ToUint8Array(base64String));\n}\nfunction base64ToBase64Url(base64) {\n    return base64.replaceAll(\"+\", \"-\").replaceAll(\"/\", \"_\").replace(/=+$/, \"\");\n}\n// Reference: https://phuoc.ng/collection/this-vs-that/concat-vs-push/\nconst MAX_BLOCK_SIZE = 65535;\nfunction uint8ArrayToBase64(array) {\n    let { urlSafe = false } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    assertUint8Array(array);\n    let base64;\n    if (array.length < MAX_BLOCK_SIZE) {\n        // Required as `btoa` and `atob` don't properly support Unicode: https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n        // @ts-expect-error - TS doesn't know about `String#fromCodePoint`\n        base64 = globalThis.btoa(String.fromCodePoint.apply(this, array));\n    } else {\n        base64 = \"\";\n        for (const value of array){\n            base64 += String.fromCodePoint(value);\n        }\n        base64 = globalThis.btoa(base64);\n    }\n    return urlSafe ? base64ToBase64Url(base64) : base64;\n}\nfunction concatUint8Arrays(arrays, totalLength) {\n    if (arrays.length === 0) {\n        return new Uint8Array(0);\n    }\n    const calculatedTotalLength = totalLength !== null && totalLength !== void 0 ? totalLength : arrays.reduce((accumulator, currentValue)=>accumulator + currentValue.length, 0);\n    const returnValue = new Uint8Array(calculatedTotalLength);\n    let offset = 0;\n    for (const array of arrays){\n        assertUint8Array(array);\n        returnValue.set(array, offset);\n        offset += array.length;\n    }\n    return returnValue;\n}\nfunction compareUint8Arrays(a, b) {\n    assertUint8Array(a);\n    assertUint8Array(b);\n    const length = Math.min(a.length, b.length);\n    for(let index = 0; index < length; index++){\n        // biome-ignore lint/style/noNonNullAssertion: we check the length above so the index is always in bounds\n        const diff = a[index] - b[index];\n        if (diff !== 0) {\n            return Math.sign(diff);\n        }\n    }\n    // At this point, all the compared elements are equal.\n    // The shorter array should come first if the arrays are of different lengths.\n    return Math.sign(a.length - b.length);\n} //# sourceMappingURL=uint8-array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/utils/uint8-array.js\n"));

/***/ })

}]);